
'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.EntityClient
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.Xml.Serialization


<Assembly: EdmSchemaAttribute("214a418a-e3c2-4819-a132-06ede31e9ac6")>
#Region "EDM Relationship Metadata"
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Adjustment_AdjustmentType", "AdjustmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(AdjustmentType), "Adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Adjustment), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Adjustment_InventoryJournals", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "Adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Adjustment), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_AdjustmentExchange_Adjustment", "Adjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Adjustment), "AdjustmentExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(AdjustmentExchange), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_AdjustmentExchange_Departments", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Department), "AdjustmentExchange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(AdjustmentExchange), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Bed_Rooms", "Rooms", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Room), "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Bed), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_IPD_Bed", "Bed", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Bed), "IPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(IPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Classification_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Category), "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Classification), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryCategories_Classification", "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Classification), "InventoryCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryCategory), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Companies_CompanyStatus", "CompanyStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(CompanyStatu), "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Company), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Customers_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Company), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Customer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_SickReportIPD_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Company), "SickReportIPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(SickReportIPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_SickReportOPD_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Company), "SickReportOPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(SickReportOPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Suppliers_Companies", "Companies", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Company), "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Supplier), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_ConsumedItems_InventoryJournalDetails", "InventoryJournalDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournalDetail), "ConsumedItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(ConsumedItem), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Person_Countries", "Countries", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Country), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Person), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Customers_CustomerIDType", "CustomerIDTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(CustomerIDType), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Customer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Customers_CustomerStatus", "CustomerStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(CustomerStatu), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Customer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Customers_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Person), "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Customer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Delivery_PurchaseOrder", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PurchaseOrder), "Delivery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Delivery), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_DeliveryDetail_Delivery", "Delivery", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Delivery), "DeliveryDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(DeliveryDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Departments_DepartmentType", "DepartmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(DepartmentType), "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Department), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Departments_Facility", "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Facility), "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Department), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Departments_LevelOfUse", "LevelOfUse", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(LevelOfUse), "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Department), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Employees_Departments", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Department), "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Employee), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournals_Departments", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Department), "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournal), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Requisition_LMISOffice", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Department), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Requisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Rooms_Departments", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Department), "Rooms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Room), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Store_Store", "Departments", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Department), "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Store), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_DepartmentType_RationDays", "RationDays", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(RationDay), "DepartmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(DepartmentType), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Employees_EmployeeStatus", "EmployeeStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(EmployeeStatu), "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Employee), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Employees_EmployeeTypes", "EmployeeTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(EmployeeType), "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Employee), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Employees_People", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Person), "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Employee), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournals_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Employee), "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournal), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OPDRequisition_Employees", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Employee), "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OPDRequisition_Employees1", "Employees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Employee), "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Facility_FacilityType", "FacilityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(FacilityType), "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Facility), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Facility_MedicalStore", "MedicalStore", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(MedicalStore), "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Facility), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Facility_Village", "Village", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Village), "Facility", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Facility), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_GRN_InventoryJournals", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "GRN", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(GRN), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_GRN_Suppliers", "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Supplier), "GRN", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(GRN), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_ItemsCatalogue_InventoryCategories", "InventoryCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryCategory), "ItemsCatalogue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(ItemsCatalogue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryItemDetails_InventoryItems", "InventoryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryItem), "InventoryItemDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryItemDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryItems_ItemsCatalogue1", "ItemsCatalogue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(ItemsCatalogue), "InventoryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryItem), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryItems_Units", "Units", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Unit), "InventoryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryItem), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournalDetails_InventoryItems", "InventoryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryItem), "InventoryJournalDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournalDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_QuotationDetail_InventoryItems", "InventoryItems", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryItem), "QuotationDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(QuotationDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournalDetails_InventoryJournal", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "InventoryJournalDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournalDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournalDetail), "InventoryJournalDetailsBatches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournalDetailsBatch), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_Locations", "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Location), "InventoryJournalDetailsBatches", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournalDetailsBatch), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournal_InventoryJournalType", "InventoryJournalTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournalType), "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournal), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournals_InventoryJournalStatus", "InventoryJournalStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournalStatu), "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournal), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_IPD_InventoryJournals1", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(InventoryJournal), "IPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(IPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_IPDIssue_InventoryJournals1", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "IPDIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(IPDIssue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Issue_InventoryJournals", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Issue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OPD_InventoryJournals", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(InventoryJournal), "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OPDIssue_InventoryJournals", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "OPDIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OPDIssue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_PurchaseOrder_InventoryJournals", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(PurchaseOrder), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Recieve_InventoryJournal", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "Recieve", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Recieve), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Requisition_InventoryJournals", "InventoryJournals", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Requisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_PaymentType_InventoryJournalTypes", "InventoryJournalTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournalType), "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(PaymentType), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_IPDIssue_IPDRequisition", "IPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(IPDRequisition), "IPDIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(IPDIssue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_IPD_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Patient), "IPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(IPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_IPDRequisition_PaymentType", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PaymentType), "IPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(IPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_PaymentAdminIPD_IPDRequisition", "IPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(IPDRequisition), "PaymentAdminIPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(PaymentAdminIPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_SickReportIPD_IPDRequisition", "IPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(IPDRequisition), "SickReportIPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(SickReportIPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Issue_Requisition", "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Requisition), "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Issue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_ItemsCatalogue_LevelOfUse", "LevelOfUse", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(LevelOfUse), "ItemsCatalogue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(ItemsCatalogue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_ItemsCatalogue_PrescriptionStatus", "PrescriptionStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PrescriptionStatu), "ItemsCatalogue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(ItemsCatalogue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_ItemsCatalogue_RouteOfAdministration", "RouteOfAdministration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(RouteOfAdministration), "ItemsCatalogue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(ItemsCatalogue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_ItemsCatalogue_TherapeuticClass", "TherapeuticClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(TherapeuticClass), "ItemsCatalogue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(ItemsCatalogue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_StorageRequirements_ItemsCatalogue", "ItemsCatalogue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(ItemsCatalogue), "StorageRequirements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(StorageRequirement), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Locations_Store", "Store", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Store), "Locations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Location), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OPDIssue_OPDRequisition", "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(OPDRequisition), "OPDIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OPDIssue), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OPD_PaymentType", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PaymentType), "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OPDRequisition_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Person), "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OPDRequisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_PaymentAdminOPD_OPDRequisition", "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(OPDRequisition), "PaymentAdminOPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(PaymentAdminOPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_SickReportOPD_OPDRequisition", "OPDRequisition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(OPDRequisition), "SickReportOPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(SickReportOPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Person_Patient", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Person), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Patient), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Payment_PaymentTerm", "PaymentTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PaymentTerm), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Payment), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Payment_PaymentType", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PaymentType), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Payment), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Payment_PurchaseOrder", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PurchaseOrder), "Payment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Payment), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_PaymentAdminIPD_Zone", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Zone), "PaymentAdminIPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(PaymentAdminIPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_PaymentAdminOPD_Zone", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Zone), "PaymentAdminOPD", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(PaymentAdminOPD), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Quotation_PaymentTerm", "PaymentTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PaymentTerm), "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Quotation), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Quotation_PaymentType", "PaymentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PaymentType), "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Quotation), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_People_PersonNames", "PersonNames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PersonName), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Person), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_People_PersonNames1", "PersonNames", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PersonName), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Person), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_People_PersonNames2", "PersonNames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(PersonName), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Person), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Person_PersonStatus", "PersonStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(PersonStatu), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Person), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Suppliers_People", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Person), "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Supplier), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Requisition_PersonNames", "PersonNames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(PersonName), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Requisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Requisition_PersonNames1", "PersonNames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(PersonName), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Requisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Requisition_PersonNames2", "PersonNames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(PersonName), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Requisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_RequestForProposal_Procurement", "Procurement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Procurement), "RequestForQuotation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(RequestForQuotation), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_PurchaseOrder_Quotation", "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Quotation), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(PurchaseOrder), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Quotation_RequestForQuotationDetail", "RequestForQuotationDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(RequestForQuotationDetail), "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Quotation), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_QuotationDetail_Quotation", "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Quotation), "QuotationDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(QuotationDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_SupplyPeriod_RationDays", "RationDays", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(RationDay), "SupplyPeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(SupplyPeriod), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_RequestForProposal_TenderType", "TenderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(TenderType), "RequestForQuotation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(RequestForQuotation), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(RequestForQuotation), "RequestForQuotationDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(RequestForQuotationDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Requisition_SupplyPeriod", "SupplyPeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(SupplyPeriod), "Requisition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Requisition), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_StorageRequirements_StorageRequirementType", "StorageRequirementType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(StorageRequirementType), "StorageRequirements", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(StorageRequirement), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_SubZone_Zone", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Zone), "SubZone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(SubZone), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Village_SubZone", "SubZone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(SubZone), "Village", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Village), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Suppliers_SupplierStatus", "SupplierStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(SupplierStatu), "Suppliers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Supplier), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Request_LMISOffice", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Department), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Request), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Request_InventoryJournals", "InventoryJournal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Request), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Procurement_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Request), "Procurement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Procurement), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Recieve_Request", "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Request), "Recieve", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Recieve), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Request_SupplyPeriod", "SupplyPeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(SupplyPeriod), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Request), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryBatch), "InventoryJournalDetailsBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(InventoryJournalDetailsBatch), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OrderandAdminister_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Employee), "OrderandAdminister", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OrderandAdminister), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OrderandAdminister_Employees1", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Employee), "OrderandAdminister", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OrderandAdminister), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_OrderandAdminister_InventoryJournalDetails", "InventoryJournalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournalDetail), "OrderandAdminister", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(OrderandAdminister), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Transfers_InventoryJournals", "InventoryJournal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Transfer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Transfers_Locations", "InventoryJournal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(InventoryJournal), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Transfer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Transfers_Locations1", "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Location), "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Transfer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_Transfers_Transfers", "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Transfer), "Transfer1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Transfer), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_TransferDetail_Transfers", "Transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Transfer), "TransferDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(TransferDetail), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_TransferDetailIN_InventoryJournalDetails", "InventoryJournalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(InventoryJournalDetail), "TransferDetailIN", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(TransferDetailIN), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_TransferDetailOut_InventoryJournalDetails", "InventoryJournalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(InventoryJournalDetail), "TransferDetailOut", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(TransferDetailOut), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_TransferDetailIN_TransferDetail", "TransferDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(TransferDetail), "TransferDetailIN", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(TransferDetailIN), True)>
<Assembly: EdmRelationshipAttribute("LMISModel", "FK_TransferDetailOut_TransferDetail", "TransferDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(TransferDetail), "TransferDetailOut", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(TransferDetailOut), True)>

#End Region

#Region "Contexts"

''' <summary>
''' No Metadata Documentation available.
''' </summary>
Public Partial Class LMISEntities
    Inherits ObjectContext

    #Region "Constructors"

    ''' <summary>
    ''' Initializes a new LMISEntities object using the connection string found in the 'LMISEntities' section of the application configuration file.
    ''' </summary>
    Public Sub New()
        MyBase.New("name=LMISEntities", "LMISEntities")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Initialize a new LMISEntities object.
    ''' </summary>
    Public Sub New(ByVal connectionString As String)
        MyBase.New(connectionString, "LMISEntities")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Initialize a new LMISEntities object.
    ''' </summary>
    Public Sub New(ByVal connection As EntityConnection)
        MyBase.New(connection, "LMISEntities")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    #End Region

    #Region "Partial Methods"

    Partial Private Sub OnContextCreated()
    End Sub

    #End Region

    #Region "ObjectSet Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Adjustments() As ObjectSet(Of Adjustment)
        Get
            If (_Adjustments Is Nothing) Then
                _Adjustments = MyBase.CreateObjectSet(Of Adjustment)("Adjustments")
            End If
            Return _Adjustments
        End Get
    End Property

    Private _Adjustments As ObjectSet(Of Adjustment)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property AdjustmentExchanges() As ObjectSet(Of AdjustmentExchange)
        Get
            If (_AdjustmentExchanges Is Nothing) Then
                _AdjustmentExchanges = MyBase.CreateObjectSet(Of AdjustmentExchange)("AdjustmentExchanges")
            End If
            Return _AdjustmentExchanges
        End Get
    End Property

    Private _AdjustmentExchanges As ObjectSet(Of AdjustmentExchange)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property AdjustmentTypes() As ObjectSet(Of AdjustmentType)
        Get
            If (_AdjustmentTypes Is Nothing) Then
                _AdjustmentTypes = MyBase.CreateObjectSet(Of AdjustmentType)("AdjustmentTypes")
            End If
            Return _AdjustmentTypes
        End Get
    End Property

    Private _AdjustmentTypes As ObjectSet(Of AdjustmentType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Beds() As ObjectSet(Of Bed)
        Get
            If (_Beds Is Nothing) Then
                _Beds = MyBase.CreateObjectSet(Of Bed)("Beds")
            End If
            Return _Beds
        End Get
    End Property

    Private _Beds As ObjectSet(Of Bed)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Categories() As ObjectSet(Of Category)
        Get
            If (_Categories Is Nothing) Then
                _Categories = MyBase.CreateObjectSet(Of Category)("Categories")
            End If
            Return _Categories
        End Get
    End Property

    Private _Categories As ObjectSet(Of Category)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Classifications() As ObjectSet(Of Classification)
        Get
            If (_Classifications Is Nothing) Then
                _Classifications = MyBase.CreateObjectSet(Of Classification)("Classifications")
            End If
            Return _Classifications
        End Get
    End Property

    Private _Classifications As ObjectSet(Of Classification)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Companies() As ObjectSet(Of Company)
        Get
            If (_Companies Is Nothing) Then
                _Companies = MyBase.CreateObjectSet(Of Company)("Companies")
            End If
            Return _Companies
        End Get
    End Property

    Private _Companies As ObjectSet(Of Company)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property CompanyStatus() As ObjectSet(Of CompanyStatu)
        Get
            If (_CompanyStatus Is Nothing) Then
                _CompanyStatus = MyBase.CreateObjectSet(Of CompanyStatu)("CompanyStatus")
            End If
            Return _CompanyStatus
        End Get
    End Property

    Private _CompanyStatus As ObjectSet(Of CompanyStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property ConsumedItems() As ObjectSet(Of ConsumedItem)
        Get
            If (_ConsumedItems Is Nothing) Then
                _ConsumedItems = MyBase.CreateObjectSet(Of ConsumedItem)("ConsumedItems")
            End If
            Return _ConsumedItems
        End Get
    End Property

    Private _ConsumedItems As ObjectSet(Of ConsumedItem)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Countries() As ObjectSet(Of Country)
        Get
            If (_Countries Is Nothing) Then
                _Countries = MyBase.CreateObjectSet(Of Country)("Countries")
            End If
            Return _Countries
        End Get
    End Property

    Private _Countries As ObjectSet(Of Country)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property CustomerIDTypes() As ObjectSet(Of CustomerIDType)
        Get
            If (_CustomerIDTypes Is Nothing) Then
                _CustomerIDTypes = MyBase.CreateObjectSet(Of CustomerIDType)("CustomerIDTypes")
            End If
            Return _CustomerIDTypes
        End Get
    End Property

    Private _CustomerIDTypes As ObjectSet(Of CustomerIDType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Customers() As ObjectSet(Of Customer)
        Get
            If (_Customers Is Nothing) Then
                _Customers = MyBase.CreateObjectSet(Of Customer)("Customers")
            End If
            Return _Customers
        End Get
    End Property

    Private _Customers As ObjectSet(Of Customer)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property CustomerStatus() As ObjectSet(Of CustomerStatu)
        Get
            If (_CustomerStatus Is Nothing) Then
                _CustomerStatus = MyBase.CreateObjectSet(Of CustomerStatu)("CustomerStatus")
            End If
            Return _CustomerStatus
        End Get
    End Property

    Private _CustomerStatus As ObjectSet(Of CustomerStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Deliveries() As ObjectSet(Of Delivery)
        Get
            If (_Deliveries Is Nothing) Then
                _Deliveries = MyBase.CreateObjectSet(Of Delivery)("Deliveries")
            End If
            Return _Deliveries
        End Get
    End Property

    Private _Deliveries As ObjectSet(Of Delivery)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property DeliveryDetails() As ObjectSet(Of DeliveryDetail)
        Get
            If (_DeliveryDetails Is Nothing) Then
                _DeliveryDetails = MyBase.CreateObjectSet(Of DeliveryDetail)("DeliveryDetails")
            End If
            Return _DeliveryDetails
        End Get
    End Property

    Private _DeliveryDetails As ObjectSet(Of DeliveryDetail)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Departments() As ObjectSet(Of Department)
        Get
            If (_Departments Is Nothing) Then
                _Departments = MyBase.CreateObjectSet(Of Department)("Departments")
            End If
            Return _Departments
        End Get
    End Property

    Private _Departments As ObjectSet(Of Department)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property DepartmentTypes() As ObjectSet(Of DepartmentType)
        Get
            If (_DepartmentTypes Is Nothing) Then
                _DepartmentTypes = MyBase.CreateObjectSet(Of DepartmentType)("DepartmentTypes")
            End If
            Return _DepartmentTypes
        End Get
    End Property

    Private _DepartmentTypes As ObjectSet(Of DepartmentType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Employees() As ObjectSet(Of Employee)
        Get
            If (_Employees Is Nothing) Then
                _Employees = MyBase.CreateObjectSet(Of Employee)("Employees")
            End If
            Return _Employees
        End Get
    End Property

    Private _Employees As ObjectSet(Of Employee)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property EmployeeStatus() As ObjectSet(Of EmployeeStatu)
        Get
            If (_EmployeeStatus Is Nothing) Then
                _EmployeeStatus = MyBase.CreateObjectSet(Of EmployeeStatu)("EmployeeStatus")
            End If
            Return _EmployeeStatus
        End Get
    End Property

    Private _EmployeeStatus As ObjectSet(Of EmployeeStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property EmployeeTypes() As ObjectSet(Of EmployeeType)
        Get
            If (_EmployeeTypes Is Nothing) Then
                _EmployeeTypes = MyBase.CreateObjectSet(Of EmployeeType)("EmployeeTypes")
            End If
            Return _EmployeeTypes
        End Get
    End Property

    Private _EmployeeTypes As ObjectSet(Of EmployeeType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Facilities() As ObjectSet(Of Facility)
        Get
            If (_Facilities Is Nothing) Then
                _Facilities = MyBase.CreateObjectSet(Of Facility)("Facilities")
            End If
            Return _Facilities
        End Get
    End Property

    Private _Facilities As ObjectSet(Of Facility)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Facility_Addres() As ObjectSet(Of Facility_Addres)
        Get
            If (_Facility_Addres Is Nothing) Then
                _Facility_Addres = MyBase.CreateObjectSet(Of Facility_Addres)("Facility_Addres")
            End If
            Return _Facility_Addres
        End Get
    End Property

    Private _Facility_Addres As ObjectSet(Of Facility_Addres)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property FacilityTypes() As ObjectSet(Of FacilityType)
        Get
            If (_FacilityTypes Is Nothing) Then
                _FacilityTypes = MyBase.CreateObjectSet(Of FacilityType)("FacilityTypes")
            End If
            Return _FacilityTypes
        End Get
    End Property

    Private _FacilityTypes As ObjectSet(Of FacilityType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property GRNs() As ObjectSet(Of GRN)
        Get
            If (_GRNs Is Nothing) Then
                _GRNs = MyBase.CreateObjectSet(Of GRN)("GRNs")
            End If
            Return _GRNs
        End Get
    End Property

    Private _GRNs As ObjectSet(Of GRN)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryBatchStatus() As ObjectSet(Of InventoryBatchStatu)
        Get
            If (_InventoryBatchStatus Is Nothing) Then
                _InventoryBatchStatus = MyBase.CreateObjectSet(Of InventoryBatchStatu)("InventoryBatchStatus")
            End If
            Return _InventoryBatchStatus
        End Get
    End Property

    Private _InventoryBatchStatus As ObjectSet(Of InventoryBatchStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryCategories() As ObjectSet(Of InventoryCategory)
        Get
            If (_InventoryCategories Is Nothing) Then
                _InventoryCategories = MyBase.CreateObjectSet(Of InventoryCategory)("InventoryCategories")
            End If
            Return _InventoryCategories
        End Get
    End Property

    Private _InventoryCategories As ObjectSet(Of InventoryCategory)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryItemDetails() As ObjectSet(Of InventoryItemDetail)
        Get
            If (_InventoryItemDetails Is Nothing) Then
                _InventoryItemDetails = MyBase.CreateObjectSet(Of InventoryItemDetail)("InventoryItemDetails")
            End If
            Return _InventoryItemDetails
        End Get
    End Property

    Private _InventoryItemDetails As ObjectSet(Of InventoryItemDetail)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryItems() As ObjectSet(Of InventoryItem)
        Get
            If (_InventoryItems Is Nothing) Then
                _InventoryItems = MyBase.CreateObjectSet(Of InventoryItem)("InventoryItems")
            End If
            Return _InventoryItems
        End Get
    End Property

    Private _InventoryItems As ObjectSet(Of InventoryItem)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryJournalDetails() As ObjectSet(Of InventoryJournalDetail)
        Get
            If (_InventoryJournalDetails Is Nothing) Then
                _InventoryJournalDetails = MyBase.CreateObjectSet(Of InventoryJournalDetail)("InventoryJournalDetails")
            End If
            Return _InventoryJournalDetails
        End Get
    End Property

    Private _InventoryJournalDetails As ObjectSet(Of InventoryJournalDetail)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryJournalDetailsBatches() As ObjectSet(Of InventoryJournalDetailsBatch)
        Get
            If (_InventoryJournalDetailsBatches Is Nothing) Then
                _InventoryJournalDetailsBatches = MyBase.CreateObjectSet(Of InventoryJournalDetailsBatch)("InventoryJournalDetailsBatches")
            End If
            Return _InventoryJournalDetailsBatches
        End Get
    End Property

    Private _InventoryJournalDetailsBatches As ObjectSet(Of InventoryJournalDetailsBatch)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryJournals() As ObjectSet(Of InventoryJournal)
        Get
            If (_InventoryJournals Is Nothing) Then
                _InventoryJournals = MyBase.CreateObjectSet(Of InventoryJournal)("InventoryJournals")
            End If
            Return _InventoryJournals
        End Get
    End Property

    Private _InventoryJournals As ObjectSet(Of InventoryJournal)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryJournalStatus() As ObjectSet(Of InventoryJournalStatu)
        Get
            If (_InventoryJournalStatus Is Nothing) Then
                _InventoryJournalStatus = MyBase.CreateObjectSet(Of InventoryJournalStatu)("InventoryJournalStatus")
            End If
            Return _InventoryJournalStatus
        End Get
    End Property

    Private _InventoryJournalStatus As ObjectSet(Of InventoryJournalStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryJournalTypes() As ObjectSet(Of InventoryJournalType)
        Get
            If (_InventoryJournalTypes Is Nothing) Then
                _InventoryJournalTypes = MyBase.CreateObjectSet(Of InventoryJournalType)("InventoryJournalTypes")
            End If
            Return _InventoryJournalTypes
        End Get
    End Property

    Private _InventoryJournalTypes As ObjectSet(Of InventoryJournalType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property IPDIssues() As ObjectSet(Of IPDIssue)
        Get
            If (_IPDIssues Is Nothing) Then
                _IPDIssues = MyBase.CreateObjectSet(Of IPDIssue)("IPDIssues")
            End If
            Return _IPDIssues
        End Get
    End Property

    Private _IPDIssues As ObjectSet(Of IPDIssue)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property IPDRequisitions() As ObjectSet(Of IPDRequisition)
        Get
            If (_IPDRequisitions Is Nothing) Then
                _IPDRequisitions = MyBase.CreateObjectSet(Of IPDRequisition)("IPDRequisitions")
            End If
            Return _IPDRequisitions
        End Get
    End Property

    Private _IPDRequisitions As ObjectSet(Of IPDRequisition)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Issues() As ObjectSet(Of Issue)
        Get
            If (_Issues Is Nothing) Then
                _Issues = MyBase.CreateObjectSet(Of Issue)("Issues")
            End If
            Return _Issues
        End Get
    End Property

    Private _Issues As ObjectSet(Of Issue)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property ItemsCatalogues() As ObjectSet(Of ItemsCatalogue)
        Get
            If (_ItemsCatalogues Is Nothing) Then
                _ItemsCatalogues = MyBase.CreateObjectSet(Of ItemsCatalogue)("ItemsCatalogues")
            End If
            Return _ItemsCatalogues
        End Get
    End Property

    Private _ItemsCatalogues As ObjectSet(Of ItemsCatalogue)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property LevelOfUses() As ObjectSet(Of LevelOfUse)
        Get
            If (_LevelOfUses Is Nothing) Then
                _LevelOfUses = MyBase.CreateObjectSet(Of LevelOfUse)("LevelOfUses")
            End If
            Return _LevelOfUses
        End Get
    End Property

    Private _LevelOfUses As ObjectSet(Of LevelOfUse)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Locations() As ObjectSet(Of Location)
        Get
            If (_Locations Is Nothing) Then
                _Locations = MyBase.CreateObjectSet(Of Location)("Locations")
            End If
            Return _Locations
        End Get
    End Property

    Private _Locations As ObjectSet(Of Location)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Manufacturers() As ObjectSet(Of Manufacturer)
        Get
            If (_Manufacturers Is Nothing) Then
                _Manufacturers = MyBase.CreateObjectSet(Of Manufacturer)("Manufacturers")
            End If
            Return _Manufacturers
        End Get
    End Property

    Private _Manufacturers As ObjectSet(Of Manufacturer)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property MedicalStores() As ObjectSet(Of MedicalStore)
        Get
            If (_MedicalStores Is Nothing) Then
                _MedicalStores = MyBase.CreateObjectSet(Of MedicalStore)("MedicalStores")
            End If
            Return _MedicalStores
        End Get
    End Property

    Private _MedicalStores As ObjectSet(Of MedicalStore)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property OPDIssues() As ObjectSet(Of OPDIssue)
        Get
            If (_OPDIssues Is Nothing) Then
                _OPDIssues = MyBase.CreateObjectSet(Of OPDIssue)("OPDIssues")
            End If
            Return _OPDIssues
        End Get
    End Property

    Private _OPDIssues As ObjectSet(Of OPDIssue)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property OPDRequisitions() As ObjectSet(Of OPDRequisition)
        Get
            If (_OPDRequisitions Is Nothing) Then
                _OPDRequisitions = MyBase.CreateObjectSet(Of OPDRequisition)("OPDRequisitions")
            End If
            Return _OPDRequisitions
        End Get
    End Property

    Private _OPDRequisitions As ObjectSet(Of OPDRequisition)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Patients() As ObjectSet(Of Patient)
        Get
            If (_Patients Is Nothing) Then
                _Patients = MyBase.CreateObjectSet(Of Patient)("Patients")
            End If
            Return _Patients
        End Get
    End Property

    Private _Patients As ObjectSet(Of Patient)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Payments() As ObjectSet(Of Payment)
        Get
            If (_Payments Is Nothing) Then
                _Payments = MyBase.CreateObjectSet(Of Payment)("Payments")
            End If
            Return _Payments
        End Get
    End Property

    Private _Payments As ObjectSet(Of Payment)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PaymentAdminIPDs() As ObjectSet(Of PaymentAdminIPD)
        Get
            If (_PaymentAdminIPDs Is Nothing) Then
                _PaymentAdminIPDs = MyBase.CreateObjectSet(Of PaymentAdminIPD)("PaymentAdminIPDs")
            End If
            Return _PaymentAdminIPDs
        End Get
    End Property

    Private _PaymentAdminIPDs As ObjectSet(Of PaymentAdminIPD)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PaymentAdminOPDs() As ObjectSet(Of PaymentAdminOPD)
        Get
            If (_PaymentAdminOPDs Is Nothing) Then
                _PaymentAdminOPDs = MyBase.CreateObjectSet(Of PaymentAdminOPD)("PaymentAdminOPDs")
            End If
            Return _PaymentAdminOPDs
        End Get
    End Property

    Private _PaymentAdminOPDs As ObjectSet(Of PaymentAdminOPD)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PaymentTerms() As ObjectSet(Of PaymentTerm)
        Get
            If (_PaymentTerms Is Nothing) Then
                _PaymentTerms = MyBase.CreateObjectSet(Of PaymentTerm)("PaymentTerms")
            End If
            Return _PaymentTerms
        End Get
    End Property

    Private _PaymentTerms As ObjectSet(Of PaymentTerm)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PaymentTypes() As ObjectSet(Of PaymentType)
        Get
            If (_PaymentTypes Is Nothing) Then
                _PaymentTypes = MyBase.CreateObjectSet(Of PaymentType)("PaymentTypes")
            End If
            Return _PaymentTypes
        End Get
    End Property

    Private _PaymentTypes As ObjectSet(Of PaymentType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property People() As ObjectSet(Of Person)
        Get
            If (_People Is Nothing) Then
                _People = MyBase.CreateObjectSet(Of Person)("People")
            End If
            Return _People
        End Get
    End Property

    Private _People As ObjectSet(Of Person)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PersonNames() As ObjectSet(Of PersonName)
        Get
            If (_PersonNames Is Nothing) Then
                _PersonNames = MyBase.CreateObjectSet(Of PersonName)("PersonNames")
            End If
            Return _PersonNames
        End Get
    End Property

    Private _PersonNames As ObjectSet(Of PersonName)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PersonStatus() As ObjectSet(Of PersonStatu)
        Get
            If (_PersonStatus Is Nothing) Then
                _PersonStatus = MyBase.CreateObjectSet(Of PersonStatu)("PersonStatus")
            End If
            Return _PersonStatus
        End Get
    End Property

    Private _PersonStatus As ObjectSet(Of PersonStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PrescriptionStatus() As ObjectSet(Of PrescriptionStatu)
        Get
            If (_PrescriptionStatus Is Nothing) Then
                _PrescriptionStatus = MyBase.CreateObjectSet(Of PrescriptionStatu)("PrescriptionStatus")
            End If
            Return _PrescriptionStatus
        End Get
    End Property

    Private _PrescriptionStatus As ObjectSet(Of PrescriptionStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Procurements() As ObjectSet(Of Procurement)
        Get
            If (_Procurements Is Nothing) Then
                _Procurements = MyBase.CreateObjectSet(Of Procurement)("Procurements")
            End If
            Return _Procurements
        End Get
    End Property

    Private _Procurements As ObjectSet(Of Procurement)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PurchaseOrders() As ObjectSet(Of PurchaseOrder)
        Get
            If (_PurchaseOrders Is Nothing) Then
                _PurchaseOrders = MyBase.CreateObjectSet(Of PurchaseOrder)("PurchaseOrders")
            End If
            Return _PurchaseOrders
        End Get
    End Property

    Private _PurchaseOrders As ObjectSet(Of PurchaseOrder)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property PurchaseOrderDetails() As ObjectSet(Of PurchaseOrderDetail)
        Get
            If (_PurchaseOrderDetails Is Nothing) Then
                _PurchaseOrderDetails = MyBase.CreateObjectSet(Of PurchaseOrderDetail)("PurchaseOrderDetails")
            End If
            Return _PurchaseOrderDetails
        End Get
    End Property

    Private _PurchaseOrderDetails As ObjectSet(Of PurchaseOrderDetail)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Quotations() As ObjectSet(Of Quotation)
        Get
            If (_Quotations Is Nothing) Then
                _Quotations = MyBase.CreateObjectSet(Of Quotation)("Quotations")
            End If
            Return _Quotations
        End Get
    End Property

    Private _Quotations As ObjectSet(Of Quotation)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property QuotationDetails() As ObjectSet(Of QuotationDetail)
        Get
            If (_QuotationDetails Is Nothing) Then
                _QuotationDetails = MyBase.CreateObjectSet(Of QuotationDetail)("QuotationDetails")
            End If
            Return _QuotationDetails
        End Get
    End Property

    Private _QuotationDetails As ObjectSet(Of QuotationDetail)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property RationDays() As ObjectSet(Of RationDay)
        Get
            If (_RationDays Is Nothing) Then
                _RationDays = MyBase.CreateObjectSet(Of RationDay)("RationDays")
            End If
            Return _RationDays
        End Get
    End Property

    Private _RationDays As ObjectSet(Of RationDay)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Recieves() As ObjectSet(Of Recieve)
        Get
            If (_Recieves Is Nothing) Then
                _Recieves = MyBase.CreateObjectSet(Of Recieve)("Recieves")
            End If
            Return _Recieves
        End Get
    End Property

    Private _Recieves As ObjectSet(Of Recieve)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property RequestForQuotations() As ObjectSet(Of RequestForQuotation)
        Get
            If (_RequestForQuotations Is Nothing) Then
                _RequestForQuotations = MyBase.CreateObjectSet(Of RequestForQuotation)("RequestForQuotations")
            End If
            Return _RequestForQuotations
        End Get
    End Property

    Private _RequestForQuotations As ObjectSet(Of RequestForQuotation)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property RequestForQuotationDetails() As ObjectSet(Of RequestForQuotationDetail)
        Get
            If (_RequestForQuotationDetails Is Nothing) Then
                _RequestForQuotationDetails = MyBase.CreateObjectSet(Of RequestForQuotationDetail)("RequestForQuotationDetails")
            End If
            Return _RequestForQuotationDetails
        End Get
    End Property

    Private _RequestForQuotationDetails As ObjectSet(Of RequestForQuotationDetail)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Requisitions() As ObjectSet(Of Requisition)
        Get
            If (_Requisitions Is Nothing) Then
                _Requisitions = MyBase.CreateObjectSet(Of Requisition)("Requisitions")
            End If
            Return _Requisitions
        End Get
    End Property

    Private _Requisitions As ObjectSet(Of Requisition)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Rooms() As ObjectSet(Of Room)
        Get
            If (_Rooms Is Nothing) Then
                _Rooms = MyBase.CreateObjectSet(Of Room)("Rooms")
            End If
            Return _Rooms
        End Get
    End Property

    Private _Rooms As ObjectSet(Of Room)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property RouteOfAdministrations() As ObjectSet(Of RouteOfAdministration)
        Get
            If (_RouteOfAdministrations Is Nothing) Then
                _RouteOfAdministrations = MyBase.CreateObjectSet(Of RouteOfAdministration)("RouteOfAdministrations")
            End If
            Return _RouteOfAdministrations
        End Get
    End Property

    Private _RouteOfAdministrations As ObjectSet(Of RouteOfAdministration)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Sections() As ObjectSet(Of Section)
        Get
            If (_Sections Is Nothing) Then
                _Sections = MyBase.CreateObjectSet(Of Section)("Sections")
            End If
            Return _Sections
        End Get
    End Property

    Private _Sections As ObjectSet(Of Section)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property SickReportIPDs() As ObjectSet(Of SickReportIPD)
        Get
            If (_SickReportIPDs Is Nothing) Then
                _SickReportIPDs = MyBase.CreateObjectSet(Of SickReportIPD)("SickReportIPDs")
            End If
            Return _SickReportIPDs
        End Get
    End Property

    Private _SickReportIPDs As ObjectSet(Of SickReportIPD)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property SickReportOPDs() As ObjectSet(Of SickReportOPD)
        Get
            If (_SickReportOPDs Is Nothing) Then
                _SickReportOPDs = MyBase.CreateObjectSet(Of SickReportOPD)("SickReportOPDs")
            End If
            Return _SickReportOPDs
        End Get
    End Property

    Private _SickReportOPDs As ObjectSet(Of SickReportOPD)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property StorageRequirements() As ObjectSet(Of StorageRequirement)
        Get
            If (_StorageRequirements Is Nothing) Then
                _StorageRequirements = MyBase.CreateObjectSet(Of StorageRequirement)("StorageRequirements")
            End If
            Return _StorageRequirements
        End Get
    End Property

    Private _StorageRequirements As ObjectSet(Of StorageRequirement)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property StorageRequirementTypes() As ObjectSet(Of StorageRequirementType)
        Get
            If (_StorageRequirementTypes Is Nothing) Then
                _StorageRequirementTypes = MyBase.CreateObjectSet(Of StorageRequirementType)("StorageRequirementTypes")
            End If
            Return _StorageRequirementTypes
        End Get
    End Property

    Private _StorageRequirementTypes As ObjectSet(Of StorageRequirementType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Stores() As ObjectSet(Of Store)
        Get
            If (_Stores Is Nothing) Then
                _Stores = MyBase.CreateObjectSet(Of Store)("Stores")
            End If
            Return _Stores
        End Get
    End Property

    Private _Stores As ObjectSet(Of Store)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property SubZones() As ObjectSet(Of SubZone)
        Get
            If (_SubZones Is Nothing) Then
                _SubZones = MyBase.CreateObjectSet(Of SubZone)("SubZones")
            End If
            Return _SubZones
        End Get
    End Property

    Private _SubZones As ObjectSet(Of SubZone)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Suppliers() As ObjectSet(Of Supplier)
        Get
            If (_Suppliers Is Nothing) Then
                _Suppliers = MyBase.CreateObjectSet(Of Supplier)("Suppliers")
            End If
            Return _Suppliers
        End Get
    End Property

    Private _Suppliers As ObjectSet(Of Supplier)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property SupplierStatus() As ObjectSet(Of SupplierStatu)
        Get
            If (_SupplierStatus Is Nothing) Then
                _SupplierStatus = MyBase.CreateObjectSet(Of SupplierStatu)("SupplierStatus")
            End If
            Return _SupplierStatus
        End Get
    End Property

    Private _SupplierStatus As ObjectSet(Of SupplierStatu)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property SupplyPeriods() As ObjectSet(Of SupplyPeriod)
        Get
            If (_SupplyPeriods Is Nothing) Then
                _SupplyPeriods = MyBase.CreateObjectSet(Of SupplyPeriod)("SupplyPeriods")
            End If
            Return _SupplyPeriods
        End Get
    End Property

    Private _SupplyPeriods As ObjectSet(Of SupplyPeriod)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Tables() As ObjectSet(Of Table)
        Get
            If (_Tables Is Nothing) Then
                _Tables = MyBase.CreateObjectSet(Of Table)("Tables")
            End If
            Return _Tables
        End Get
    End Property

    Private _Tables As ObjectSet(Of Table)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TenderTypes() As ObjectSet(Of TenderType)
        Get
            If (_TenderTypes Is Nothing) Then
                _TenderTypes = MyBase.CreateObjectSet(Of TenderType)("TenderTypes")
            End If
            Return _TenderTypes
        End Get
    End Property

    Private _TenderTypes As ObjectSet(Of TenderType)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TherapeuticClasses() As ObjectSet(Of TherapeuticClass)
        Get
            If (_TherapeuticClasses Is Nothing) Then
                _TherapeuticClasses = MyBase.CreateObjectSet(Of TherapeuticClass)("TherapeuticClasses")
            End If
            Return _TherapeuticClasses
        End Get
    End Property

    Private _TherapeuticClasses As ObjectSet(Of TherapeuticClass)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Units() As ObjectSet(Of Unit)
        Get
            If (_Units Is Nothing) Then
                _Units = MyBase.CreateObjectSet(Of Unit)("Units")
            End If
            Return _Units
        End Get
    End Property

    Private _Units As ObjectSet(Of Unit)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Villages() As ObjectSet(Of Village)
        Get
            If (_Villages Is Nothing) Then
                _Villages = MyBase.CreateObjectSet(Of Village)("Villages")
            End If
            Return _Villages
        End Get
    End Property

    Private _Villages As ObjectSet(Of Village)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Zones() As ObjectSet(Of Zone)
        Get
            If (_Zones Is Nothing) Then
                _Zones = MyBase.CreateObjectSet(Of Zone)("Zones")
            End If
            Return _Zones
        End Get
    End Property

    Private _Zones As ObjectSet(Of Zone)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property VW_ItemBatchQty() As ObjectSet(Of VW_ItemBatchQty)
        Get
            If (_VW_ItemBatchQty Is Nothing) Then
                _VW_ItemBatchQty = MyBase.CreateObjectSet(Of VW_ItemBatchQty)("VW_ItemBatchQty")
            End If
            Return _VW_ItemBatchQty
        End Get
    End Property

    Private _VW_ItemBatchQty As ObjectSet(Of VW_ItemBatchQty)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property VW_ItemQty() As ObjectSet(Of VW_ItemQty)
        Get
            If (_VW_ItemQty Is Nothing) Then
                _VW_ItemQty = MyBase.CreateObjectSet(Of VW_ItemQty)("VW_ItemQty")
            End If
            Return _VW_ItemQty
        End Get
    End Property

    Private _VW_ItemQty As ObjectSet(Of VW_ItemQty)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property VW_ItemZeroDate() As ObjectSet(Of VW_ItemZeroDate)
        Get
            If (_VW_ItemZeroDate Is Nothing) Then
                _VW_ItemZeroDate = MyBase.CreateObjectSet(Of VW_ItemZeroDate)("VW_ItemZeroDate")
            End If
            Return _VW_ItemZeroDate
        End Get
    End Property

    Private _VW_ItemZeroDate As ObjectSet(Of VW_ItemZeroDate)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Requests() As ObjectSet(Of Request)
        Get
            If (_Requests Is Nothing) Then
                _Requests = MyBase.CreateObjectSet(Of Request)("Requests")
            End If
            Return _Requests
        End Get
    End Property

    Private _Requests As ObjectSet(Of Request)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property InventoryBatches() As ObjectSet(Of InventoryBatch)
        Get
            If (_InventoryBatches Is Nothing) Then
                _InventoryBatches = MyBase.CreateObjectSet(Of InventoryBatch)("InventoryBatches")
            End If
            Return _InventoryBatches
        End Get
    End Property

    Private _InventoryBatches As ObjectSet(Of InventoryBatch)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Budgets() As ObjectSet(Of Budget)
        Get
            If (_Budgets Is Nothing) Then
                _Budgets = MyBase.CreateObjectSet(Of Budget)("Budgets")
            End If
            Return _Budgets
        End Get
    End Property

    Private _Budgets As ObjectSet(Of Budget)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property OrderandAdministers() As ObjectSet(Of OrderandAdminister)
        Get
            If (_OrderandAdministers Is Nothing) Then
                _OrderandAdministers = MyBase.CreateObjectSet(Of OrderandAdminister)("OrderandAdministers")
            End If
            Return _OrderandAdministers
        End Get
    End Property

    Private _OrderandAdministers As ObjectSet(Of OrderandAdminister)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Transfers() As ObjectSet(Of Transfer)
        Get
            If (_Transfers Is Nothing) Then
                _Transfers = MyBase.CreateObjectSet(Of Transfer)("Transfers")
            End If
            Return _Transfers
        End Get
    End Property

    Private _Transfers As ObjectSet(Of Transfer)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TransferDetails() As ObjectSet(Of TransferDetail)
        Get
            If (_TransferDetails Is Nothing) Then
                _TransferDetails = MyBase.CreateObjectSet(Of TransferDetail)("TransferDetails")
            End If
            Return _TransferDetails
        End Get
    End Property

    Private _TransferDetails As ObjectSet(Of TransferDetail)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TransfersViews() As ObjectSet(Of TransfersView)
        Get
            If (_TransfersViews Is Nothing) Then
                _TransfersViews = MyBase.CreateObjectSet(Of TransfersView)("TransfersViews")
            End If
            Return _TransfersViews
        End Get
    End Property

    Private _TransfersViews As ObjectSet(Of TransfersView)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TransferDetailINs() As ObjectSet(Of TransferDetailIN)
        Get
            If (_TransferDetailINs Is Nothing) Then
                _TransferDetailINs = MyBase.CreateObjectSet(Of TransferDetailIN)("TransferDetailINs")
            End If
            Return _TransferDetailINs
        End Get
    End Property

    Private _TransferDetailINs As ObjectSet(Of TransferDetailIN)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TransferDetailOuts() As ObjectSet(Of TransferDetailOut)
        Get
            If (_TransferDetailOuts Is Nothing) Then
                _TransferDetailOuts = MyBase.CreateObjectSet(Of TransferDetailOut)("TransferDetailOuts")
            End If
            Return _TransferDetailOuts
        End Get
    End Property

    Private _TransferDetailOuts As ObjectSet(Of TransferDetailOut)

    #End Region

    #Region "AddTo Methods"

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Adjustments EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToAdjustments(ByVal adjustment As Adjustment)
        MyBase.AddObject("Adjustments", adjustment)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the AdjustmentExchanges EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToAdjustmentExchanges(ByVal adjustmentExchange As AdjustmentExchange)
        MyBase.AddObject("AdjustmentExchanges", adjustmentExchange)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the AdjustmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToAdjustmentTypes(ByVal adjustmentType As AdjustmentType)
        MyBase.AddObject("AdjustmentTypes", adjustmentType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Beds EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToBeds(ByVal bed As Bed)
        MyBase.AddObject("Beds", bed)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToCategories(ByVal category As Category)
        MyBase.AddObject("Categories", category)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Classifications EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToClassifications(ByVal classification As Classification)
        MyBase.AddObject("Classifications", classification)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToCompanies(ByVal company As Company)
        MyBase.AddObject("Companies", company)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the CompanyStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToCompanyStatus(ByVal companyStatu As CompanyStatu)
        MyBase.AddObject("CompanyStatus", companyStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the ConsumedItems EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToConsumedItems(ByVal consumedItem As ConsumedItem)
        MyBase.AddObject("ConsumedItems", consumedItem)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToCountries(ByVal country As Country)
        MyBase.AddObject("Countries", country)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the CustomerIDTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToCustomerIDTypes(ByVal customerIDType As CustomerIDType)
        MyBase.AddObject("CustomerIDTypes", customerIDType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToCustomers(ByVal customer As Customer)
        MyBase.AddObject("Customers", customer)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the CustomerStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToCustomerStatus(ByVal customerStatu As CustomerStatu)
        MyBase.AddObject("CustomerStatus", customerStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Deliveries EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToDeliveries(ByVal delivery As Delivery)
        MyBase.AddObject("Deliveries", delivery)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the DeliveryDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToDeliveryDetails(ByVal deliveryDetail As DeliveryDetail)
        MyBase.AddObject("DeliveryDetails", deliveryDetail)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToDepartments(ByVal department As Department)
        MyBase.AddObject("Departments", department)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the DepartmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToDepartmentTypes(ByVal departmentType As DepartmentType)
        MyBase.AddObject("DepartmentTypes", departmentType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToEmployees(ByVal employee As Employee)
        MyBase.AddObject("Employees", employee)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the EmployeeStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToEmployeeStatus(ByVal employeeStatu As EmployeeStatu)
        MyBase.AddObject("EmployeeStatus", employeeStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the EmployeeTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToEmployeeTypes(ByVal employeeType As EmployeeType)
        MyBase.AddObject("EmployeeTypes", employeeType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Facilities EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToFacilities(ByVal facility As Facility)
        MyBase.AddObject("Facilities", facility)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Facility_Addres EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToFacility_Addres(ByVal facility_Addres As Facility_Addres)
        MyBase.AddObject("Facility_Addres", facility_Addres)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the FacilityTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToFacilityTypes(ByVal facilityType As FacilityType)
        MyBase.AddObject("FacilityTypes", facilityType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the GRNs EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToGRNs(ByVal gRN As GRN)
        MyBase.AddObject("GRNs", gRN)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryBatchStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryBatchStatus(ByVal inventoryBatchStatu As InventoryBatchStatu)
        MyBase.AddObject("InventoryBatchStatus", inventoryBatchStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryCategories EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryCategories(ByVal inventoryCategory As InventoryCategory)
        MyBase.AddObject("InventoryCategories", inventoryCategory)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryItemDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryItemDetails(ByVal inventoryItemDetail As InventoryItemDetail)
        MyBase.AddObject("InventoryItemDetails", inventoryItemDetail)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryItems EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryItems(ByVal inventoryItem As InventoryItem)
        MyBase.AddObject("InventoryItems", inventoryItem)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryJournalDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryJournalDetails(ByVal inventoryJournalDetail As InventoryJournalDetail)
        MyBase.AddObject("InventoryJournalDetails", inventoryJournalDetail)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryJournalDetailsBatches EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryJournalDetailsBatches(ByVal inventoryJournalDetailsBatch As InventoryJournalDetailsBatch)
        MyBase.AddObject("InventoryJournalDetailsBatches", inventoryJournalDetailsBatch)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryJournals EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryJournals(ByVal inventoryJournal As InventoryJournal)
        MyBase.AddObject("InventoryJournals", inventoryJournal)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryJournalStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryJournalStatus(ByVal inventoryJournalStatu As InventoryJournalStatu)
        MyBase.AddObject("InventoryJournalStatus", inventoryJournalStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryJournalTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryJournalTypes(ByVal inventoryJournalType As InventoryJournalType)
        MyBase.AddObject("InventoryJournalTypes", inventoryJournalType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the IPDIssues EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToIPDIssues(ByVal iPDIssue As IPDIssue)
        MyBase.AddObject("IPDIssues", iPDIssue)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the IPDRequisitions EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToIPDRequisitions(ByVal iPDRequisition As IPDRequisition)
        MyBase.AddObject("IPDRequisitions", iPDRequisition)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Issues EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToIssues(ByVal issue As Issue)
        MyBase.AddObject("Issues", issue)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the ItemsCatalogues EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToItemsCatalogues(ByVal itemsCatalogue As ItemsCatalogue)
        MyBase.AddObject("ItemsCatalogues", itemsCatalogue)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the LevelOfUses EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToLevelOfUses(ByVal levelOfUse As LevelOfUse)
        MyBase.AddObject("LevelOfUses", levelOfUse)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToLocations(ByVal location As Location)
        MyBase.AddObject("Locations", location)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Manufacturers EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToManufacturers(ByVal manufacturer As Manufacturer)
        MyBase.AddObject("Manufacturers", manufacturer)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the MedicalStores EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToMedicalStores(ByVal medicalStore As MedicalStore)
        MyBase.AddObject("MedicalStores", medicalStore)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the OPDIssues EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToOPDIssues(ByVal oPDIssue As OPDIssue)
        MyBase.AddObject("OPDIssues", oPDIssue)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the OPDRequisitions EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToOPDRequisitions(ByVal oPDRequisition As OPDRequisition)
        MyBase.AddObject("OPDRequisitions", oPDRequisition)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPatients(ByVal patient As Patient)
        MyBase.AddObject("Patients", patient)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Payments EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPayments(ByVal payment As Payment)
        MyBase.AddObject("Payments", payment)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PaymentAdminIPDs EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPaymentAdminIPDs(ByVal paymentAdminIPD As PaymentAdminIPD)
        MyBase.AddObject("PaymentAdminIPDs", paymentAdminIPD)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PaymentAdminOPDs EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPaymentAdminOPDs(ByVal paymentAdminOPD As PaymentAdminOPD)
        MyBase.AddObject("PaymentAdminOPDs", paymentAdminOPD)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PaymentTerms EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPaymentTerms(ByVal paymentTerm As PaymentTerm)
        MyBase.AddObject("PaymentTerms", paymentTerm)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PaymentTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPaymentTypes(ByVal paymentType As PaymentType)
        MyBase.AddObject("PaymentTypes", paymentType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPeople(ByVal person As Person)
        MyBase.AddObject("People", person)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PersonNames EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPersonNames(ByVal personName As PersonName)
        MyBase.AddObject("PersonNames", personName)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PersonStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPersonStatus(ByVal personStatu As PersonStatu)
        MyBase.AddObject("PersonStatus", personStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PrescriptionStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPrescriptionStatus(ByVal prescriptionStatu As PrescriptionStatu)
        MyBase.AddObject("PrescriptionStatus", prescriptionStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Procurements EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToProcurements(ByVal procurement As Procurement)
        MyBase.AddObject("Procurements", procurement)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPurchaseOrders(ByVal purchaseOrder As PurchaseOrder)
        MyBase.AddObject("PurchaseOrders", purchaseOrder)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the PurchaseOrderDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPurchaseOrderDetails(ByVal purchaseOrderDetail As PurchaseOrderDetail)
        MyBase.AddObject("PurchaseOrderDetails", purchaseOrderDetail)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Quotations EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToQuotations(ByVal quotation As Quotation)
        MyBase.AddObject("Quotations", quotation)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the QuotationDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToQuotationDetails(ByVal quotationDetail As QuotationDetail)
        MyBase.AddObject("QuotationDetails", quotationDetail)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the RationDays EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRationDays(ByVal rationDay As RationDay)
        MyBase.AddObject("RationDays", rationDay)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Recieves EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRecieves(ByVal recieve As Recieve)
        MyBase.AddObject("Recieves", recieve)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the RequestForQuotations EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRequestForQuotations(ByVal requestForQuotation As RequestForQuotation)
        MyBase.AddObject("RequestForQuotations", requestForQuotation)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the RequestForQuotationDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRequestForQuotationDetails(ByVal requestForQuotationDetail As RequestForQuotationDetail)
        MyBase.AddObject("RequestForQuotationDetails", requestForQuotationDetail)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Requisitions EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRequisitions(ByVal requisition As Requisition)
        MyBase.AddObject("Requisitions", requisition)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Rooms EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRooms(ByVal room As Room)
        MyBase.AddObject("Rooms", room)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the RouteOfAdministrations EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRouteOfAdministrations(ByVal routeOfAdministration As RouteOfAdministration)
        MyBase.AddObject("RouteOfAdministrations", routeOfAdministration)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Sections EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToSections(ByVal section As Section)
        MyBase.AddObject("Sections", section)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the SickReportIPDs EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToSickReportIPDs(ByVal sickReportIPD As SickReportIPD)
        MyBase.AddObject("SickReportIPDs", sickReportIPD)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the SickReportOPDs EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToSickReportOPDs(ByVal sickReportOPD As SickReportOPD)
        MyBase.AddObject("SickReportOPDs", sickReportOPD)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the StorageRequirements EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToStorageRequirements(ByVal storageRequirement As StorageRequirement)
        MyBase.AddObject("StorageRequirements", storageRequirement)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the StorageRequirementTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToStorageRequirementTypes(ByVal storageRequirementType As StorageRequirementType)
        MyBase.AddObject("StorageRequirementTypes", storageRequirementType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Stores EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToStores(ByVal store As Store)
        MyBase.AddObject("Stores", store)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the SubZones EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToSubZones(ByVal subZone As SubZone)
        MyBase.AddObject("SubZones", subZone)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToSuppliers(ByVal supplier As Supplier)
        MyBase.AddObject("Suppliers", supplier)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the SupplierStatus EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToSupplierStatus(ByVal supplierStatu As SupplierStatu)
        MyBase.AddObject("SupplierStatus", supplierStatu)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the SupplyPeriods EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToSupplyPeriods(ByVal supplyPeriod As SupplyPeriod)
        MyBase.AddObject("SupplyPeriods", supplyPeriod)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Tables EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTables(ByVal table As Table)
        MyBase.AddObject("Tables", table)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TenderTypes EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTenderTypes(ByVal tenderType As TenderType)
        MyBase.AddObject("TenderTypes", tenderType)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TherapeuticClasses EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTherapeuticClasses(ByVal therapeuticClass As TherapeuticClass)
        MyBase.AddObject("TherapeuticClasses", therapeuticClass)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToUnits(ByVal unit As Unit)
        MyBase.AddObject("Units", unit)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Villages EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToVillages(ByVal village As Village)
        MyBase.AddObject("Villages", village)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Zones EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToZones(ByVal zone As Zone)
        MyBase.AddObject("Zones", zone)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the VW_ItemBatchQty EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToVW_ItemBatchQty(ByVal vW_ItemBatchQty As VW_ItemBatchQty)
        MyBase.AddObject("VW_ItemBatchQty", vW_ItemBatchQty)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the VW_ItemQty EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToVW_ItemQty(ByVal vW_ItemQty As VW_ItemQty)
        MyBase.AddObject("VW_ItemQty", vW_ItemQty)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the VW_ItemZeroDate EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToVW_ItemZeroDate(ByVal vW_ItemZeroDate As VW_ItemZeroDate)
        MyBase.AddObject("VW_ItemZeroDate", vW_ItemZeroDate)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Requests EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToRequests(ByVal request As Request)
        MyBase.AddObject("Requests", request)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the InventoryBatches EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInventoryBatches(ByVal inventoryBatch As InventoryBatch)
        MyBase.AddObject("InventoryBatches", inventoryBatch)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Budgets EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToBudgets(ByVal budget As Budget)
        MyBase.AddObject("Budgets", budget)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the OrderandAdministers EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToOrderandAdministers(ByVal orderandAdminister As OrderandAdminister)
        MyBase.AddObject("OrderandAdministers", orderandAdminister)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Transfers EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTransfers(ByVal transfer As Transfer)
        MyBase.AddObject("Transfers", transfer)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TransferDetails EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTransferDetails(ByVal transferDetail As TransferDetail)
        MyBase.AddObject("TransferDetails", transferDetail)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TransfersViews EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTransfersViews(ByVal transfersView As TransfersView)
        MyBase.AddObject("TransfersViews", transfersView)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TransferDetailINs EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTransferDetailINs(ByVal transferDetailIN As TransferDetailIN)
        MyBase.AddObject("TransferDetailINs", transferDetailIN)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TransferDetailOuts EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTransferDetailOuts(ByVal transferDetailOut As TransferDetailOut)
        MyBase.AddObject("TransferDetailOuts", transferDetailOut)
    End Sub

    #End Region

    #Region "Function Imports"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    ''' <param name="reportForDepartmentID">No Metadata Documentation available.</param>
    ''' <param name="fromDate">No Metadata Documentation available.</param>
    ''' <param name="toDate">No Metadata Documentation available.</param>
    Public Function SP_ItemBatchExpiry1(reportForDepartmentID As Global.System.String, fromDate As Nullable(Of Global.System.DateTime), toDate As Nullable(Of Global.System.DateTime)) As ObjectResult(Of SP_ItemBatchExpiry1_Result)
        Dim reportForDepartmentIDParameter As ObjectParameter
        If (reportForDepartmentID IsNot Nothing)
            reportForDepartmentIDParameter = New ObjectParameter("ReportForDepartmentID", reportForDepartmentID)
        Else
            reportForDepartmentIDParameter = New ObjectParameter("ReportForDepartmentID", GetType(Global.System.String))
        End If

        Dim fromDateParameter As ObjectParameter
        If (fromDate.HasValue)
            fromDateParameter = New ObjectParameter("FromDate", fromDate)
        Else
            fromDateParameter = New ObjectParameter("FromDate", GetType(Global.System.DateTime))
        End If

        Dim toDateParameter As ObjectParameter
        If (toDate.HasValue)
            toDateParameter = New ObjectParameter("ToDate", toDate)
        Else
            toDateParameter = New ObjectParameter("ToDate", GetType(Global.System.DateTime))
        End If

        Return MyBase.ExecuteFunction(Of SP_ItemBatchExpiry1_Result)("SP_ItemBatchExpiry1", reportForDepartmentIDParameter, fromDateParameter, toDateParameter)

    End Function

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    ''' <param name="reportForDepartmentID">No Metadata Documentation available.</param>
    ''' <param name="iJTypeID">No Metadata Documentation available.</param>
    ''' <param name="iJStatusID">No Metadata Documentation available.</param>
    ''' <param name="primaryID">No Metadata Documentation available.</param>
    ''' <param name="fromDate">No Metadata Documentation available.</param>
    ''' <param name="toDate">No Metadata Documentation available.</param>
    ''' <param name="itemID">No Metadata Documentation available.</param>
    ''' <param name="itemCategory">No Metadata Documentation available.</param>
    ''' <param name="itemSubclassification">No Metadata Documentation available.</param>
    ''' <param name="itemClassification">No Metadata Documentation available.</param>
    ''' <param name="withDateRange">No Metadata Documentation available.</param>
    ''' <param name="adjType">No Metadata Documentation available.</param>
    ''' <param name="adjDescription">No Metadata Documentation available.</param>
    ''' <param name="departmentName">No Metadata Documentation available.</param>
    ''' <param name="departmentTypeID">No Metadata Documentation available.</param>
    ''' <param name="subzoneID">No Metadata Documentation available.</param>
    ''' <param name="zoneID">No Metadata Documentation available.</param>
    ''' <param name="supplierName">No Metadata Documentation available.</param>
    ''' <param name="remark">No Metadata Documentation available.</param>
    ''' <param name="void">No Metadata Documentation available.</param>
    Public Function SP_IJSearch(reportForDepartmentID As Global.System.String, iJTypeID As Nullable(Of Global.System.Int32), iJStatusID As Nullable(Of Global.System.Int32), primaryID As Global.System.String, fromDate As Nullable(Of Global.System.DateTime), toDate As Nullable(Of Global.System.DateTime), itemID As Global.System.String, itemCategory As Global.System.String, itemSubclassification As Global.System.String, itemClassification As Global.System.String, withDateRange As Nullable(Of Global.System.Boolean), adjType As Global.System.String, adjDescription As Global.System.String, departmentName As Global.System.String, departmentTypeID As Global.System.String, subzoneID As Global.System.String, zoneID As Global.System.String, supplierName As Global.System.String, remark As Global.System.String, void As Nullable(Of Global.System.Boolean)) As ObjectResult(Of SP_IJSearch_Result)
        Dim reportForDepartmentIDParameter As ObjectParameter
        If (reportForDepartmentID IsNot Nothing)
            reportForDepartmentIDParameter = New ObjectParameter("ReportForDepartmentID", reportForDepartmentID)
        Else
            reportForDepartmentIDParameter = New ObjectParameter("ReportForDepartmentID", GetType(Global.System.String))
        End If

        Dim iJTypeIDParameter As ObjectParameter
        If (iJTypeID.HasValue)
            iJTypeIDParameter = New ObjectParameter("IJTypeID", iJTypeID)
        Else
            iJTypeIDParameter = New ObjectParameter("IJTypeID", GetType(Global.System.Int32))
        End If

        Dim iJStatusIDParameter As ObjectParameter
        If (iJStatusID.HasValue)
            iJStatusIDParameter = New ObjectParameter("IJStatusID", iJStatusID)
        Else
            iJStatusIDParameter = New ObjectParameter("IJStatusID", GetType(Global.System.Int32))
        End If

        Dim primaryIDParameter As ObjectParameter
        If (primaryID IsNot Nothing)
            primaryIDParameter = New ObjectParameter("PrimaryID", primaryID)
        Else
            primaryIDParameter = New ObjectParameter("PrimaryID", GetType(Global.System.String))
        End If

        Dim fromDateParameter As ObjectParameter
        If (fromDate.HasValue)
            fromDateParameter = New ObjectParameter("FromDate", fromDate)
        Else
            fromDateParameter = New ObjectParameter("FromDate", GetType(Global.System.DateTime))
        End If

        Dim toDateParameter As ObjectParameter
        If (toDate.HasValue)
            toDateParameter = New ObjectParameter("ToDate", toDate)
        Else
            toDateParameter = New ObjectParameter("ToDate", GetType(Global.System.DateTime))
        End If

        Dim itemIDParameter As ObjectParameter
        If (itemID IsNot Nothing)
            itemIDParameter = New ObjectParameter("ItemID", itemID)
        Else
            itemIDParameter = New ObjectParameter("ItemID", GetType(Global.System.String))
        End If

        Dim itemCategoryParameter As ObjectParameter
        If (itemCategory IsNot Nothing)
            itemCategoryParameter = New ObjectParameter("ItemCategory", itemCategory)
        Else
            itemCategoryParameter = New ObjectParameter("ItemCategory", GetType(Global.System.String))
        End If

        Dim itemSubclassificationParameter As ObjectParameter
        If (itemSubclassification IsNot Nothing)
            itemSubclassificationParameter = New ObjectParameter("ItemSubclassification", itemSubclassification)
        Else
            itemSubclassificationParameter = New ObjectParameter("ItemSubclassification", GetType(Global.System.String))
        End If

        Dim itemClassificationParameter As ObjectParameter
        If (itemClassification IsNot Nothing)
            itemClassificationParameter = New ObjectParameter("ItemClassification", itemClassification)
        Else
            itemClassificationParameter = New ObjectParameter("ItemClassification", GetType(Global.System.String))
        End If

        Dim withDateRangeParameter As ObjectParameter
        If (withDateRange.HasValue)
            withDateRangeParameter = New ObjectParameter("WithDateRange", withDateRange)
        Else
            withDateRangeParameter = New ObjectParameter("WithDateRange", GetType(Global.System.Boolean))
        End If

        Dim adjTypeParameter As ObjectParameter
        If (adjType IsNot Nothing)
            adjTypeParameter = New ObjectParameter("AdjType", adjType)
        Else
            adjTypeParameter = New ObjectParameter("AdjType", GetType(Global.System.String))
        End If

        Dim adjDescriptionParameter As ObjectParameter
        If (adjDescription IsNot Nothing)
            adjDescriptionParameter = New ObjectParameter("AdjDescription", adjDescription)
        Else
            adjDescriptionParameter = New ObjectParameter("AdjDescription", GetType(Global.System.String))
        End If

        Dim departmentNameParameter As ObjectParameter
        If (departmentName IsNot Nothing)
            departmentNameParameter = New ObjectParameter("DepartmentName", departmentName)
        Else
            departmentNameParameter = New ObjectParameter("DepartmentName", GetType(Global.System.String))
        End If

        Dim departmentTypeIDParameter As ObjectParameter
        If (departmentTypeID IsNot Nothing)
            departmentTypeIDParameter = New ObjectParameter("DepartmentTypeID", departmentTypeID)
        Else
            departmentTypeIDParameter = New ObjectParameter("DepartmentTypeID", GetType(Global.System.String))
        End If

        Dim subzoneIDParameter As ObjectParameter
        If (subzoneID IsNot Nothing)
            subzoneIDParameter = New ObjectParameter("SubzoneID", subzoneID)
        Else
            subzoneIDParameter = New ObjectParameter("SubzoneID", GetType(Global.System.String))
        End If

        Dim zoneIDParameter As ObjectParameter
        If (zoneID IsNot Nothing)
            zoneIDParameter = New ObjectParameter("ZoneID", zoneID)
        Else
            zoneIDParameter = New ObjectParameter("ZoneID", GetType(Global.System.String))
        End If

        Dim supplierNameParameter As ObjectParameter
        If (supplierName IsNot Nothing)
            supplierNameParameter = New ObjectParameter("SupplierName", supplierName)
        Else
            supplierNameParameter = New ObjectParameter("SupplierName", GetType(Global.System.String))
        End If

        Dim remarkParameter As ObjectParameter
        If (remark IsNot Nothing)
            remarkParameter = New ObjectParameter("Remark", remark)
        Else
            remarkParameter = New ObjectParameter("Remark", GetType(Global.System.String))
        End If

        Dim voidParameter As ObjectParameter
        If (void.HasValue)
            voidParameter = New ObjectParameter("Void", void)
        Else
            voidParameter = New ObjectParameter("Void", GetType(Global.System.Boolean))
        End If

        Return MyBase.ExecuteFunction(Of SP_IJSearch_Result)("SP_IJSearch", reportForDepartmentIDParameter, iJTypeIDParameter, iJStatusIDParameter, primaryIDParameter, fromDateParameter, toDateParameter, itemIDParameter, itemCategoryParameter, itemSubclassificationParameter, itemClassificationParameter, withDateRangeParameter, adjTypeParameter, adjDescriptionParameter, departmentNameParameter, departmentTypeIDParameter, subzoneIDParameter, zoneIDParameter, supplierNameParameter, remarkParameter, voidParameter)

    End Function

    #End Region

End Class

#End Region

#Region "Entities"

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Adjustment")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Adjustment
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Adjustment object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="adjustmentTypeID">Initial value of the AdjustmentTypeID property.</param>
    Public Shared Function CreateAdjustment(id As Global.System.String, inventoryJournalID As Global.System.String, adjustmentTypeID As Global.System.Int32) As Adjustment
        Dim adjustment as Adjustment = New Adjustment
        adjustment.ID = id
        adjustment.InventoryJournalID = inventoryJournalID
        adjustment.AdjustmentTypeID = adjustmentTypeID
        Return adjustment
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AdjustmentTypeID() As Global.System.Int32
        Get
            Return _AdjustmentTypeID
        End Get
        Set
            OnAdjustmentTypeIDChanging(value)
            ReportPropertyChanging("AdjustmentTypeID")
            _AdjustmentTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("AdjustmentTypeID")
            OnAdjustmentTypeIDChanged()
        End Set
    End Property

    Private _AdjustmentTypeID As Global.System.Int32
    Private Partial Sub OnAdjustmentTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnAdjustmentTypeIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Adjustment_AdjustmentType", "AdjustmentType")>
    Public Property AdjustmentType() As AdjustmentType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of AdjustmentType)("LMISModel.FK_Adjustment_AdjustmentType", "AdjustmentType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of AdjustmentType)("LMISModel.FK_Adjustment_AdjustmentType", "AdjustmentType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property AdjustmentTypeReference() As EntityReference(Of AdjustmentType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of AdjustmentType)("LMISModel.FK_Adjustment_AdjustmentType", "AdjustmentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of AdjustmentType)("LMISModel.FK_Adjustment_AdjustmentType", "AdjustmentType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Adjustment_InventoryJournals", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Adjustment_InventoryJournals", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Adjustment_InventoryJournals", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Adjustment_InventoryJournals", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_Adjustment_InventoryJournals", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_AdjustmentExchange_Adjustment", "AdjustmentExchange")>
     Public Property AdjustmentExchanges() As EntityCollection(Of AdjustmentExchange)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of AdjustmentExchange)("LMISModel.FK_AdjustmentExchange_Adjustment", "AdjustmentExchange")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of AdjustmentExchange)("LMISModel.FK_AdjustmentExchange_Adjustment", "AdjustmentExchange", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="AdjustmentExchange")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class AdjustmentExchange
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new AdjustmentExchange object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="adjustmentID">Initial value of the AdjustmentID property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    Public Shared Function CreateAdjustmentExchange(id As Global.System.Int32, adjustmentID As Global.System.String, departmentID As Global.System.String) As AdjustmentExchange
        Dim adjustmentExchange as AdjustmentExchange = New AdjustmentExchange
        adjustmentExchange.ID = id
        adjustmentExchange.AdjustmentID = adjustmentID
        adjustmentExchange.DepartmentID = departmentID
        Return adjustmentExchange
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AdjustmentID() As Global.System.String
        Get
            Return _AdjustmentID
        End Get
        Set
            OnAdjustmentIDChanging(value)
            ReportPropertyChanging("AdjustmentID")
            _AdjustmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("AdjustmentID")
            OnAdjustmentIDChanged()
        End Set
    End Property

    Private _AdjustmentID As Global.System.String
    Private Partial Sub OnAdjustmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnAdjustmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_AdjustmentExchange_Adjustment", "Adjustment")>
    Public Property Adjustment() As Adjustment
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Adjustment)("LMISModel.FK_AdjustmentExchange_Adjustment", "Adjustment").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Adjustment)("LMISModel.FK_AdjustmentExchange_Adjustment", "Adjustment").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property AdjustmentReference() As EntityReference(Of Adjustment)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Adjustment)("LMISModel.FK_AdjustmentExchange_Adjustment", "Adjustment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Adjustment)("LMISModel.FK_AdjustmentExchange_Adjustment", "Adjustment", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_AdjustmentExchange_Departments", "Departments")>
    Public Property Department() As Department
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_AdjustmentExchange_Departments", "Departments").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_AdjustmentExchange_Departments", "Departments").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentReference() As EntityReference(Of Department)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_AdjustmentExchange_Departments", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("LMISModel.FK_AdjustmentExchange_Departments", "Departments", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="AdjustmentType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class AdjustmentType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new AdjustmentType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    ''' <param name="description">Initial value of the Description property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateAdjustmentType(id As Global.System.Int32, type As Global.System.String, description As Global.System.String, active As Global.System.Boolean) As AdjustmentType
        Dim adjustmentType as AdjustmentType = New AdjustmentType
        adjustmentType.ID = id
        adjustmentType.Type = type
        adjustmentType.Description = description
        adjustmentType.Active = active
        Return adjustmentType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Description() As Global.System.String
        Get
            Return _Description
        End Get
        Set
            OnDescriptionChanging(value)
            ReportPropertyChanging("Description")
            _Description = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Description")
            OnDescriptionChanged()
        End Set
    End Property

    Private _Description As Global.System.String
    Private Partial Sub OnDescriptionChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDescriptionChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Adjustment_AdjustmentType", "Adjustment")>
     Public Property Adjustments() As EntityCollection(Of Adjustment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Adjustment)("LMISModel.FK_Adjustment_AdjustmentType", "Adjustment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Adjustment)("LMISModel.FK_Adjustment_AdjustmentType", "Adjustment", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Bed")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Bed
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Bed object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="bedNo">Initial value of the BedNo property.</param>
    ''' <param name="roomID">Initial value of the RoomID property.</param>
    Public Shared Function CreateBed(id As Global.System.String, bedNo As Global.System.String, roomID As Global.System.String) As Bed
        Dim bed as Bed = New Bed
        bed.ID = id
        bed.BedNo = bedNo
        bed.RoomID = roomID
        Return bed
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property BedNo() As Global.System.String
        Get
            Return _BedNo
        End Get
        Set
            OnBedNoChanging(value)
            ReportPropertyChanging("BedNo")
            _BedNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("BedNo")
            OnBedNoChanged()
        End Set
    End Property

    Private _BedNo As Global.System.String
    Private Partial Sub OnBedNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBedNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RoomID() As Global.System.String
        Get
            Return _RoomID
        End Get
        Set
            OnRoomIDChanging(value)
            ReportPropertyChanging("RoomID")
            _RoomID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("RoomID")
            OnRoomIDChanged()
        End Set
    End Property

    Private _RoomID As Global.System.String
    Private Partial Sub OnRoomIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRoomIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Bed_Rooms", "Rooms")>
    Public Property Room() As Room
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Room)("LMISModel.FK_Bed_Rooms", "Rooms").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Room)("LMISModel.FK_Bed_Rooms", "Rooms").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RoomReference() As EntityReference(Of Room)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Room)("LMISModel.FK_Bed_Rooms", "Rooms")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Room)("LMISModel.FK_Bed_Rooms", "Rooms", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPD_Bed", "IPDRequisition")>
     Public Property IPDRequisitions() As EntityCollection(Of IPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPD_Bed", "IPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPD_Bed", "IPDRequisition", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Budget")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Budget
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Budget object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="year">Initial value of the Year property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    ''' <param name="amount">Initial value of the Amount property.</param>
    Public Shared Function CreateBudget(id As Global.System.Int32, year As Global.System.Int32, departmentID As Global.System.Int32, amount As Global.System.Decimal) As Budget
        Dim budget as Budget = New Budget
        budget.ID = id
        budget.Year = year
        budget.DepartmentID = departmentID
        budget.Amount = amount
        Return budget
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Year() As Global.System.Int32
        Get
            Return _Year
        End Get
        Set
            OnYearChanging(value)
            ReportPropertyChanging("Year")
            _Year = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Year")
            OnYearChanged()
        End Set
    End Property

    Private _Year As Global.System.Int32
    Private Partial Sub OnYearChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnYearChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.Int32
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.Int32
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Amount() As Global.System.Decimal
        Get
            Return _Amount
        End Get
        Set
            OnAmountChanging(value)
            ReportPropertyChanging("Amount")
            _Amount = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Amount")
            OnAmountChanged()
        End Set
    End Property

    Private _Amount As Global.System.Decimal
    Private Partial Sub OnAmountChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnAmountChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Category")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Category
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Category object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateCategory(id As Global.System.Int32, name As Global.System.String) As Category
        Dim category as Category = New Category
        category.ID = id
        category.Name = name
        Return category
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Classification_Category", "Classification")>
     Public Property Classifications() As EntityCollection(Of Classification)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Classification)("LMISModel.FK_Classification_Category", "Classification")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Classification)("LMISModel.FK_Classification_Category", "Classification", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Classification")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Classification
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Classification object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="categoryID">Initial value of the CategoryID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateClassification(id As Global.System.Int32, categoryID As Global.System.Int32, name As Global.System.String) As Classification
        Dim classification as Classification = New Classification
        classification.ID = id
        classification.CategoryID = categoryID
        classification.Name = name
        Return classification
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CategoryID() As Global.System.Int32
        Get
            Return _CategoryID
        End Get
        Set
            OnCategoryIDChanging(value)
            ReportPropertyChanging("CategoryID")
            _CategoryID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CategoryID")
            OnCategoryIDChanged()
        End Set
    End Property

    Private _CategoryID As Global.System.Int32
    Private Partial Sub OnCategoryIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCategoryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Classification_Category", "Category")>
    Public Property Category() As Category
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Category)("LMISModel.FK_Classification_Category", "Category").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Category)("LMISModel.FK_Classification_Category", "Category").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CategoryReference() As EntityReference(Of Category)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Category)("LMISModel.FK_Classification_Category", "Category")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Category)("LMISModel.FK_Classification_Category", "Category", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryCategories_Classification", "InventoryCategories")>
     Public Property InventoryCategories() As EntityCollection(Of InventoryCategory)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryCategory)("LMISModel.FK_InventoryCategories_Classification", "InventoryCategories")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryCategory)("LMISModel.FK_InventoryCategories_Classification", "InventoryCategories", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Company")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Company
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Company object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="address">Initial value of the Address property.</param>
    ''' <param name="companyStatusID">Initial value of the CompanyStatusID property.</param>
    ''' <param name="telephoneNumber">Initial value of the TelephoneNumber property.</param>
    ''' <param name="fax">Initial value of the Fax property.</param>
    ''' <param name="pOBox">Initial value of the POBox property.</param>
    ''' <param name="emailAddress">Initial value of the EmailAddress property.</param>
    Public Shared Function CreateCompany(id As Global.System.Int32, name As Global.System.String, address As Global.System.String, companyStatusID As Global.System.Int32, telephoneNumber As Global.System.String, fax As Global.System.String, pOBox As Global.System.String, emailAddress As Global.System.String) As Company
        Dim company as Company = New Company
        company.ID = id
        company.Name = name
        company.Address = address
        company.CompanyStatusID = companyStatusID
        company.TelephoneNumber = telephoneNumber
        company.Fax = fax
        company.POBox = pOBox
        company.EmailAddress = emailAddress
        Return company
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Address() As Global.System.String
        Get
            Return _Address
        End Get
        Set
            OnAddressChanging(value)
            ReportPropertyChanging("Address")
            _Address = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Address")
            OnAddressChanged()
        End Set
    End Property

    Private _Address As Global.System.String
    Private Partial Sub OnAddressChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnAddressChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CompanyStatusID() As Global.System.Int32
        Get
            Return _CompanyStatusID
        End Get
        Set
            OnCompanyStatusIDChanging(value)
            ReportPropertyChanging("CompanyStatusID")
            _CompanyStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CompanyStatusID")
            OnCompanyStatusIDChanged()
        End Set
    End Property

    Private _CompanyStatusID As Global.System.Int32
    Private Partial Sub OnCompanyStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCompanyStatusIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TelephoneNumber() As Global.System.String
        Get
            Return _TelephoneNumber
        End Get
        Set
            OnTelephoneNumberChanging(value)
            ReportPropertyChanging("TelephoneNumber")
            _TelephoneNumber = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("TelephoneNumber")
            OnTelephoneNumberChanged()
        End Set
    End Property

    Private _TelephoneNumber As Global.System.String
    Private Partial Sub OnTelephoneNumberChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTelephoneNumberChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Fax() As Global.System.String
        Get
            Return _Fax
        End Get
        Set
            OnFaxChanging(value)
            ReportPropertyChanging("Fax")
            _Fax = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Fax")
            OnFaxChanged()
        End Set
    End Property

    Private _Fax As Global.System.String
    Private Partial Sub OnFaxChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFaxChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property POBox() As Global.System.String
        Get
            Return _POBox
        End Get
        Set
            OnPOBoxChanging(value)
            ReportPropertyChanging("POBox")
            _POBox = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("POBox")
            OnPOBoxChanged()
        End Set
    End Property

    Private _POBox As Global.System.String
    Private Partial Sub OnPOBoxChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPOBoxChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property EmailAddress() As Global.System.String
        Get
            Return _EmailAddress
        End Get
        Set
            OnEmailAddressChanging(value)
            ReportPropertyChanging("EmailAddress")
            _EmailAddress = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("EmailAddress")
            OnEmailAddressChanged()
        End Set
    End Property

    Private _EmailAddress As Global.System.String
    Private Partial Sub OnEmailAddressChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnEmailAddressChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Companies_CompanyStatus", "CompanyStatus")>
    Public Property CompanyStatu() As CompanyStatu
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CompanyStatu)("LMISModel.FK_Companies_CompanyStatus", "CompanyStatus").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CompanyStatu)("LMISModel.FK_Companies_CompanyStatus", "CompanyStatus").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CompanyStatuReference() As EntityReference(Of CompanyStatu)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CompanyStatu)("LMISModel.FK_Companies_CompanyStatus", "CompanyStatus")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CompanyStatu)("LMISModel.FK_Companies_CompanyStatus", "CompanyStatus", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_Companies", "Customers")>
     Public Property Customers() As EntityCollection(Of Customer)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Customer)("LMISModel.FK_Customers_Companies", "Customers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Customer)("LMISModel.FK_Customers_Companies", "Customers", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportIPD_Companies", "SickReportIPD")>
     Public Property SickReportIPDs() As EntityCollection(Of SickReportIPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of SickReportIPD)("LMISModel.FK_SickReportIPD_Companies", "SickReportIPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SickReportIPD)("LMISModel.FK_SickReportIPD_Companies", "SickReportIPD", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportOPD_Companies", "SickReportOPD")>
     Public Property SickReportOPDs() As EntityCollection(Of SickReportOPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of SickReportOPD)("LMISModel.FK_SickReportOPD_Companies", "SickReportOPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SickReportOPD)("LMISModel.FK_SickReportOPD_Companies", "SickReportOPD", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Suppliers_Companies", "Suppliers")>
     Public Property Suppliers() As EntityCollection(Of Supplier)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Supplier)("LMISModel.FK_Suppliers_Companies", "Suppliers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Supplier)("LMISModel.FK_Suppliers_Companies", "Suppliers", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="CompanyStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class CompanyStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new CompanyStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateCompanyStatu(id As Global.System.Int32, status As Global.System.String, active As Global.System.Boolean) As CompanyStatu
        Dim companyStatu as CompanyStatu = New CompanyStatu
        companyStatu.ID = id
        companyStatu.Status = status
        companyStatu.Active = active
        Return companyStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.String
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.String
    Private Partial Sub OnStatusChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Companies_CompanyStatus", "Companies")>
     Public Property Companies() As EntityCollection(Of Company)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Company)("LMISModel.FK_Companies_CompanyStatus", "Companies")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Company)("LMISModel.FK_Companies_CompanyStatus", "Companies", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="ConsumedItem")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class ConsumedItem
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new ConsumedItem object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalDetailID">Initial value of the InventoryJournalDetailID property.</param>
    ''' <param name="stockOnHand">Initial value of the StockOnHand property.</param>
    ''' <param name="consumption">Initial value of the Consumption property.</param>
    ''' <param name="stockOutDays">Initial value of the StockOutDays property.</param>
    ''' <param name="price">Initial value of the Price property.</param>
    Public Shared Function CreateConsumedItem(id As Global.System.Int32, inventoryJournalDetailID As Global.System.Int32, stockOnHand As Global.System.Decimal, consumption As Global.System.Decimal, stockOutDays As Global.System.Int32, price As Global.System.Decimal) As ConsumedItem
        Dim consumedItem as ConsumedItem = New ConsumedItem
        consumedItem.ID = id
        consumedItem.InventoryJournalDetailID = inventoryJournalDetailID
        consumedItem.StockOnHand = stockOnHand
        consumedItem.Consumption = consumption
        consumedItem.StockOutDays = stockOutDays
        consumedItem.Price = price
        Return consumedItem
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailID() As Global.System.Int32
        Get
            Return _InventoryJournalDetailID
        End Get
        Set
            OnInventoryJournalDetailIDChanging(value)
            ReportPropertyChanging("InventoryJournalDetailID")
            _InventoryJournalDetailID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournalDetailID")
            OnInventoryJournalDetailIDChanged()
        End Set
    End Property

    Private _InventoryJournalDetailID As Global.System.Int32
    Private Partial Sub OnInventoryJournalDetailIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryJournalDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property StockOnHand() As Global.System.Decimal
        Get
            Return _StockOnHand
        End Get
        Set
            OnStockOnHandChanging(value)
            ReportPropertyChanging("StockOnHand")
            _StockOnHand = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("StockOnHand")
            OnStockOnHandChanged()
        End Set
    End Property

    Private _StockOnHand As Global.System.Decimal
    Private Partial Sub OnStockOnHandChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnStockOnHandChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Consumption() As Global.System.Decimal
        Get
            Return _Consumption
        End Get
        Set
            OnConsumptionChanging(value)
            ReportPropertyChanging("Consumption")
            _Consumption = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Consumption")
            OnConsumptionChanged()
        End Set
    End Property

    Private _Consumption As Global.System.Decimal
    Private Partial Sub OnConsumptionChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnConsumptionChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property StockOutDays() As Global.System.Int32
        Get
            Return _StockOutDays
        End Get
        Set
            OnStockOutDaysChanging(value)
            ReportPropertyChanging("StockOutDays")
            _StockOutDays = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("StockOutDays")
            OnStockOutDaysChanged()
        End Set
    End Property

    Private _StockOutDays As Global.System.Int32
    Private Partial Sub OnStockOutDaysChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnStockOutDaysChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Price() As Global.System.Decimal
        Get
            Return _Price
        End Get
        Set
            OnPriceChanging(value)
            ReportPropertyChanging("Price")
            _Price = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Price")
            OnPriceChanged()
        End Set
    End Property

    Private _Price As Global.System.Decimal
    Private Partial Sub OnPriceChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnPriceChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ConsumedItems_InventoryJournalDetails", "InventoryJournalDetails")>
    Public Property InventoryJournalDetail() As InventoryJournalDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_ConsumedItems_InventoryJournalDetails", "InventoryJournalDetails").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_ConsumedItems_InventoryJournalDetails", "InventoryJournalDetails").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailReference() As EntityReference(Of InventoryJournalDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_ConsumedItems_InventoryJournalDetails", "InventoryJournalDetails")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_ConsumedItems_InventoryJournalDetails", "InventoryJournalDetails", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Country")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Country
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Country object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateCountry(id As Global.System.Int32, name As Global.System.String, active As Global.System.Boolean) As Country
        Dim country as Country = New Country
        country.ID = id
        country.Name = name
        country.Active = active
        Return country
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Person_Countries", "Person")>
     Public Property People() As EntityCollection(Of Person)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Person)("LMISModel.FK_Person_Countries", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Person)("LMISModel.FK_Person_Countries", "Person", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Customer")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Customer
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Customer object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="personID">Initial value of the PersonID property.</param>
    ''' <param name="customerStatusID">Initial value of the CustomerStatusID property.</param>
    ''' <param name="companyID">Initial value of the CompanyID property.</param>
    ''' <param name="customerIDTypeID">Initial value of the CustomerIDTypeID property.</param>
    ''' <param name="iDNumber">Initial value of the IDNumber property.</param>
    Public Shared Function CreateCustomer(id As Global.System.String, personID As Global.System.String, customerStatusID As Global.System.Int32, companyID As Global.System.Int32, customerIDTypeID As Global.System.Int32, iDNumber As Global.System.String) As Customer
        Dim customer as Customer = New Customer
        customer.ID = id
        customer.PersonID = personID
        customer.CustomerStatusID = customerStatusID
        customer.CompanyID = companyID
        customer.CustomerIDTypeID = customerIDTypeID
        customer.IDNumber = iDNumber
        Return customer
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PersonID() As Global.System.String
        Get
            Return _PersonID
        End Get
        Set
            OnPersonIDChanging(value)
            ReportPropertyChanging("PersonID")
            _PersonID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PersonID")
            OnPersonIDChanged()
        End Set
    End Property

    Private _PersonID As Global.System.String
    Private Partial Sub OnPersonIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPersonIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CustomerStatusID() As Global.System.Int32
        Get
            Return _CustomerStatusID
        End Get
        Set
            OnCustomerStatusIDChanging(value)
            ReportPropertyChanging("CustomerStatusID")
            _CustomerStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CustomerStatusID")
            OnCustomerStatusIDChanged()
        End Set
    End Property

    Private _CustomerStatusID As Global.System.Int32
    Private Partial Sub OnCustomerStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCustomerStatusIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CompanyID() As Global.System.Int32
        Get
            Return _CompanyID
        End Get
        Set
            OnCompanyIDChanging(value)
            ReportPropertyChanging("CompanyID")
            _CompanyID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CompanyID")
            OnCompanyIDChanged()
        End Set
    End Property

    Private _CompanyID As Global.System.Int32
    Private Partial Sub OnCompanyIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCompanyIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CustomerIDTypeID() As Global.System.Int32
        Get
            Return _CustomerIDTypeID
        End Get
        Set
            OnCustomerIDTypeIDChanging(value)
            ReportPropertyChanging("CustomerIDTypeID")
            _CustomerIDTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CustomerIDTypeID")
            OnCustomerIDTypeIDChanged()
        End Set
    End Property

    Private _CustomerIDTypeID As Global.System.Int32
    Private Partial Sub OnCustomerIDTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCustomerIDTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IDNumber() As Global.System.String
        Get
            Return _IDNumber
        End Get
        Set
            OnIDNumberChanging(value)
            ReportPropertyChanging("IDNumber")
            _IDNumber = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("IDNumber")
            OnIDNumberChanged()
        End Set
    End Property

    Private _IDNumber As Global.System.String
    Private Partial Sub OnIDNumberChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDNumberChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_Companies", "Companies")>
    Public Property Company() As Company
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_Customers_Companies", "Companies").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_Customers_Companies", "Companies").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CompanyReference() As EntityReference(Of Company)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_Customers_Companies", "Companies")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Company)("LMISModel.FK_Customers_Companies", "Companies", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_CustomerIDType", "CustomerIDTypes")>
    Public Property CustomerIDType() As CustomerIDType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CustomerIDType)("LMISModel.FK_Customers_CustomerIDType", "CustomerIDTypes").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CustomerIDType)("LMISModel.FK_Customers_CustomerIDType", "CustomerIDTypes").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CustomerIDTypeReference() As EntityReference(Of CustomerIDType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CustomerIDType)("LMISModel.FK_Customers_CustomerIDType", "CustomerIDTypes")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CustomerIDType)("LMISModel.FK_Customers_CustomerIDType", "CustomerIDTypes", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_CustomerStatus", "CustomerStatus")>
    Public Property CustomerStatu() As CustomerStatu
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CustomerStatu)("LMISModel.FK_Customers_CustomerStatus", "CustomerStatus").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CustomerStatu)("LMISModel.FK_Customers_CustomerStatus", "CustomerStatus").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CustomerStatuReference() As EntityReference(Of CustomerStatu)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of CustomerStatu)("LMISModel.FK_Customers_CustomerStatus", "CustomerStatus")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of CustomerStatu)("LMISModel.FK_Customers_CustomerStatus", "CustomerStatus", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_Person", "Person")>
    Public Property Person() As Person
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Customers_Person", "Person").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Customers_Person", "Person").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonReference() As EntityReference(Of Person)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Customers_Person", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Person)("LMISModel.FK_Customers_Person", "Person", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="CustomerIDType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class CustomerIDType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new CustomerIDType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    Public Shared Function CreateCustomerIDType(id As Global.System.Int32, type As Global.System.String) As CustomerIDType
        Dim customerIDType as CustomerIDType = New CustomerIDType
        customerIDType.ID = id
        customerIDType.Type = type
        Return customerIDType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_CustomerIDType", "Customers")>
     Public Property Customers() As EntityCollection(Of Customer)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Customer)("LMISModel.FK_Customers_CustomerIDType", "Customers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Customer)("LMISModel.FK_Customers_CustomerIDType", "Customers", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="CustomerStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class CustomerStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new CustomerStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    Public Shared Function CreateCustomerStatu(id As Global.System.Int32, status As Global.System.String) As CustomerStatu
        Dim customerStatu as CustomerStatu = New CustomerStatu
        customerStatu.ID = id
        customerStatu.Status = status
        Return customerStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.String
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.String
    Private Partial Sub OnStatusChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_CustomerStatus", "Customers")>
     Public Property Customers() As EntityCollection(Of Customer)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Customer)("LMISModel.FK_Customers_CustomerStatus", "Customers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Customer)("LMISModel.FK_Customers_CustomerStatus", "Customers", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Delivery")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Delivery
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Delivery object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
    ''' <param name="receiveDate">Initial value of the ReceiveDate property.</param>
    ''' <param name="gRNNo">Initial value of the GRNNo property.</param>
    ''' <param name="invoiceNo">Initial value of the InvoiceNo property.</param>
    ''' <param name="deliveryNoteNo">Initial value of the DeliveryNoteNo property.</param>
    Public Shared Function CreateDelivery(id As Global.System.Int32, purchaseOrderID As Global.System.Int32, receiveDate As Global.System.DateTime, gRNNo As Global.System.String, invoiceNo As Global.System.String, deliveryNoteNo As Global.System.String) As Delivery
        Dim delivery as Delivery = New Delivery
        delivery.ID = id
        delivery.PurchaseOrderID = purchaseOrderID
        delivery.ReceiveDate = receiveDate
        delivery.GRNNo = gRNNo
        delivery.InvoiceNo = invoiceNo
        delivery.DeliveryNoteNo = deliveryNoteNo
        Return delivery
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PurchaseOrderID() As Global.System.Int32
        Get
            Return _PurchaseOrderID
        End Get
        Set
            OnPurchaseOrderIDChanging(value)
            ReportPropertyChanging("PurchaseOrderID")
            _PurchaseOrderID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PurchaseOrderID")
            OnPurchaseOrderIDChanged()
        End Set
    End Property

    Private _PurchaseOrderID As Global.System.Int32
    Private Partial Sub OnPurchaseOrderIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPurchaseOrderIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ReceiveDate() As Global.System.DateTime
        Get
            Return _ReceiveDate
        End Get
        Set
            OnReceiveDateChanging(value)
            ReportPropertyChanging("ReceiveDate")
            _ReceiveDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ReceiveDate")
            OnReceiveDateChanged()
        End Set
    End Property

    Private _ReceiveDate As Global.System.DateTime
    Private Partial Sub OnReceiveDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnReceiveDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property GRNNo() As Global.System.String
        Get
            Return _GRNNo
        End Get
        Set
            OnGRNNoChanging(value)
            ReportPropertyChanging("GRNNo")
            _GRNNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("GRNNo")
            OnGRNNoChanged()
        End Set
    End Property

    Private _GRNNo As Global.System.String
    Private Partial Sub OnGRNNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnGRNNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InvoiceNo() As Global.System.String
        Get
            Return _InvoiceNo
        End Get
        Set
            OnInvoiceNoChanging(value)
            ReportPropertyChanging("InvoiceNo")
            _InvoiceNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InvoiceNo")
            OnInvoiceNoChanged()
        End Set
    End Property

    Private _InvoiceNo As Global.System.String
    Private Partial Sub OnInvoiceNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInvoiceNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DeliveryNoteNo() As Global.System.String
        Get
            Return _DeliveryNoteNo
        End Get
        Set
            OnDeliveryNoteNoChanging(value)
            ReportPropertyChanging("DeliveryNoteNo")
            _DeliveryNoteNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DeliveryNoteNo")
            OnDeliveryNoteNoChanged()
        End Set
    End Property

    Private _DeliveryNoteNo As Global.System.String
    Private Partial Sub OnDeliveryNoteNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDeliveryNoteNoChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Delivery_PurchaseOrder", "PurchaseOrder")>
    Public Property PurchaseOrder() As PurchaseOrder
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PurchaseOrder)("LMISModel.FK_Delivery_PurchaseOrder", "PurchaseOrder").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PurchaseOrder)("LMISModel.FK_Delivery_PurchaseOrder", "PurchaseOrder").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PurchaseOrderReference() As EntityReference(Of PurchaseOrder)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PurchaseOrder)("LMISModel.FK_Delivery_PurchaseOrder", "PurchaseOrder")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PurchaseOrder)("LMISModel.FK_Delivery_PurchaseOrder", "PurchaseOrder", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_DeliveryDetail_Delivery", "DeliveryDetail")>
     Public Property DeliveryDetails() As EntityCollection(Of DeliveryDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of DeliveryDetail)("LMISModel.FK_DeliveryDetail_Delivery", "DeliveryDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of DeliveryDetail)("LMISModel.FK_DeliveryDetail_Delivery", "DeliveryDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="DeliveryDetail")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class DeliveryDetail
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new DeliveryDetail object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="deliveryID">Initial value of the DeliveryID property.</param>
    ''' <param name="price">Initial value of the Price property.</param>
    ''' <param name="itemID">Initial value of the ItemID property.</param>
    ''' <param name="quantity">Initial value of the Quantity property.</param>
    Public Shared Function CreateDeliveryDetail(id As Global.System.Int32, deliveryID As Global.System.Int32, price As Global.System.Decimal, itemID As Global.System.String, quantity As Global.System.Decimal) As DeliveryDetail
        Dim deliveryDetail as DeliveryDetail = New DeliveryDetail
        deliveryDetail.ID = id
        deliveryDetail.DeliveryID = deliveryID
        deliveryDetail.Price = price
        deliveryDetail.ItemID = itemID
        deliveryDetail.Quantity = quantity
        Return deliveryDetail
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DeliveryID() As Global.System.Int32
        Get
            Return _DeliveryID
        End Get
        Set
            OnDeliveryIDChanging(value)
            ReportPropertyChanging("DeliveryID")
            _DeliveryID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DeliveryID")
            OnDeliveryIDChanged()
        End Set
    End Property

    Private _DeliveryID As Global.System.Int32
    Private Partial Sub OnDeliveryIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDeliveryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Price() As Global.System.Decimal
        Get
            Return _Price
        End Get
        Set
            OnPriceChanging(value)
            ReportPropertyChanging("Price")
            _Price = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Price")
            OnPriceChanged()
        End Set
    End Property

    Private _Price As Global.System.Decimal
    Private Partial Sub OnPriceChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnPriceChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ItemID() As Global.System.String
        Get
            Return _ItemID
        End Get
        Set
            OnItemIDChanging(value)
            ReportPropertyChanging("ItemID")
            _ItemID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ItemID")
            OnItemIDChanged()
        End Set
    End Property

    Private _ItemID As Global.System.String
    Private Partial Sub OnItemIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItemIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Quantity() As Global.System.Decimal
        Get
            Return _Quantity
        End Get
        Set
            OnQuantityChanging(value)
            ReportPropertyChanging("Quantity")
            _Quantity = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Quantity")
            OnQuantityChanged()
        End Set
    End Property

    Private _Quantity As Global.System.Decimal
    Private Partial Sub OnQuantityChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnQuantityChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_DeliveryDetail_Delivery", "Delivery")>
    Public Property Delivery() As Delivery
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Delivery)("LMISModel.FK_DeliveryDetail_Delivery", "Delivery").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Delivery)("LMISModel.FK_DeliveryDetail_Delivery", "Delivery").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DeliveryReference() As EntityReference(Of Delivery)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Delivery)("LMISModel.FK_DeliveryDetail_Delivery", "Delivery")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Delivery)("LMISModel.FK_DeliveryDetail_Delivery", "Delivery", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Department")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Department
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Department object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="facilityID">Initial value of the FacilityID property.</param>
    ''' <param name="departmentTypeID">Initial value of the DepartmentTypeID property.</param>
    ''' <param name="levelofUseID">Initial value of the LevelofUseID property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateDepartment(id As Global.System.String, name As Global.System.String, facilityID As Global.System.String, departmentTypeID As Global.System.Int32, levelofUseID As Global.System.Int32, active As Global.System.Boolean) As Department
        Dim department as Department = New Department
        department.ID = id
        department.Name = name
        department.FacilityID = facilityID
        department.DepartmentTypeID = departmentTypeID
        department.LevelofUseID = levelofUseID
        department.Active = active
        Return department
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FacilityID() As Global.System.String
        Get
            Return _FacilityID
        End Get
        Set
            OnFacilityIDChanging(value)
            ReportPropertyChanging("FacilityID")
            _FacilityID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("FacilityID")
            OnFacilityIDChanged()
        End Set
    End Property

    Private _FacilityID As Global.System.String
    Private Partial Sub OnFacilityIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFacilityIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentTypeID() As Global.System.Int32
        Get
            Return _DepartmentTypeID
        End Get
        Set
            OnDepartmentTypeIDChanging(value)
            ReportPropertyChanging("DepartmentTypeID")
            _DepartmentTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DepartmentTypeID")
            OnDepartmentTypeIDChanged()
        End Set
    End Property

    Private _DepartmentTypeID As Global.System.Int32
    Private Partial Sub OnDepartmentTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDepartmentTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property LevelofUseID() As Global.System.Int32
        Get
            Return _LevelofUseID
        End Get
        Set
            OnLevelofUseIDChanging(value)
            ReportPropertyChanging("LevelofUseID")
            _LevelofUseID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("LevelofUseID")
            OnLevelofUseIDChanged()
        End Set
    End Property

    Private _LevelofUseID As Global.System.Int32
    Private Partial Sub OnLevelofUseIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnLevelofUseIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_AdjustmentExchange_Departments", "AdjustmentExchange")>
     Public Property AdjustmentExchanges() As EntityCollection(Of AdjustmentExchange)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of AdjustmentExchange)("LMISModel.FK_AdjustmentExchange_Departments", "AdjustmentExchange")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of AdjustmentExchange)("LMISModel.FK_AdjustmentExchange_Departments", "AdjustmentExchange", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Departments_DepartmentType", "DepartmentType")>
    Public Property DepartmentType() As DepartmentType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of DepartmentType)("LMISModel.FK_Departments_DepartmentType", "DepartmentType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of DepartmentType)("LMISModel.FK_Departments_DepartmentType", "DepartmentType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentTypeReference() As EntityReference(Of DepartmentType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of DepartmentType)("LMISModel.FK_Departments_DepartmentType", "DepartmentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of DepartmentType)("LMISModel.FK_Departments_DepartmentType", "DepartmentType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Departments_Facility", "Facility")>
    Public Property Facility() As Facility
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Facility)("LMISModel.FK_Departments_Facility", "Facility").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Facility)("LMISModel.FK_Departments_Facility", "Facility").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property FacilityReference() As EntityReference(Of Facility)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Facility)("LMISModel.FK_Departments_Facility", "Facility")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Facility)("LMISModel.FK_Departments_Facility", "Facility", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Departments_LevelOfUse", "LevelOfUse")>
    Public Property LevelOfUse() As LevelOfUse
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LevelOfUse)("LMISModel.FK_Departments_LevelOfUse", "LevelOfUse").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LevelOfUse)("LMISModel.FK_Departments_LevelOfUse", "LevelOfUse").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property LevelOfUseReference() As EntityReference(Of LevelOfUse)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LevelOfUse)("LMISModel.FK_Departments_LevelOfUse", "LevelOfUse")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of LevelOfUse)("LMISModel.FK_Departments_LevelOfUse", "LevelOfUse", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_Departments", "Employees")>
     Public Property Employees() As EntityCollection(Of Employee)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Employee)("LMISModel.FK_Employees_Departments", "Employees")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Employee)("LMISModel.FK_Employees_Departments", "Employees", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournals_Departments", "InventoryJournals")>
     Public Property InventoryJournals() As EntityCollection(Of InventoryJournal)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournals_Departments", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournals_Departments", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_LMISOffice", "Requisition")>
     Public Property Requisitions() As EntityCollection(Of Requisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_LMISOffice", "Requisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_LMISOffice", "Requisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Rooms_Departments", "Rooms")>
     Public Property Rooms() As EntityCollection(Of Room)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Room)("LMISModel.FK_Rooms_Departments", "Rooms")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Room)("LMISModel.FK_Rooms_Departments", "Rooms", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Store_Store", "Store")>
     Public Property Stores() As EntityCollection(Of Store)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Store)("LMISModel.FK_Store_Store", "Store")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Store)("LMISModel.FK_Store_Store", "Store", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Request_LMISOffice", "Request")>
     Public Property Requests() As EntityCollection(Of Request)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Request)("LMISModel.FK_Request_LMISOffice", "Request")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Request)("LMISModel.FK_Request_LMISOffice", "Request", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="DepartmentType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class DepartmentType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new DepartmentType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    ''' <param name="rationDaysID">Initial value of the RationDaysID property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateDepartmentType(id As Global.System.Int32, type As Global.System.String, rationDaysID As Global.System.Int32, active As Global.System.Boolean) As DepartmentType
        Dim departmentType as DepartmentType = New DepartmentType
        departmentType.ID = id
        departmentType.Type = type
        departmentType.RationDaysID = rationDaysID
        departmentType.Active = active
        Return departmentType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Description() As Global.System.String
        Get
            Return _Description
        End Get
        Set
            OnDescriptionChanging(value)
            ReportPropertyChanging("Description")
            _Description = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Description")
            OnDescriptionChanged()
        End Set
    End Property

    Private _Description As Global.System.String
    Private Partial Sub OnDescriptionChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDescriptionChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RationDaysID() As Global.System.Int32
        Get
            Return _RationDaysID
        End Get
        Set
            OnRationDaysIDChanging(value)
            ReportPropertyChanging("RationDaysID")
            _RationDaysID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RationDaysID")
            OnRationDaysIDChanged()
        End Set
    End Property

    Private _RationDaysID As Global.System.Int32
    Private Partial Sub OnRationDaysIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnRationDaysIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Departments_DepartmentType", "Departments")>
     Public Property Departments() As EntityCollection(Of Department)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Department)("LMISModel.FK_Departments_DepartmentType", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Department)("LMISModel.FK_Departments_DepartmentType", "Departments", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_DepartmentType_RationDays", "RationDays")>
    Public Property RationDay() As RationDay
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RationDay)("LMISModel.FK_DepartmentType_RationDays", "RationDays").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RationDay)("LMISModel.FK_DepartmentType_RationDays", "RationDays").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RationDayReference() As EntityReference(Of RationDay)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RationDay)("LMISModel.FK_DepartmentType_RationDays", "RationDays")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of RationDay)("LMISModel.FK_DepartmentType_RationDays", "RationDays", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Employee")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Employee
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Employee object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="userName">Initial value of the UserName property.</param>
    ''' <param name="personID">Initial value of the PersonID property.</param>
    ''' <param name="employeeTypeID">Initial value of the EmployeeTypeID property.</param>
    ''' <param name="employeeStatusID">Initial value of the EmployeeStatusID property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    ''' <param name="isSystemUser">Initial value of the IsSystemUser property.</param>
    Public Shared Function CreateEmployee(id As Global.System.String, userName As Global.System.String, personID As Global.System.String, employeeTypeID As Global.System.Int32, employeeStatusID As Global.System.Int32, departmentID As Global.System.String, isSystemUser As Global.System.Boolean) As Employee
        Dim employee as Employee = New Employee
        employee.ID = id
        employee.UserName = userName
        employee.PersonID = personID
        employee.EmployeeTypeID = employeeTypeID
        employee.EmployeeStatusID = employeeStatusID
        employee.DepartmentID = departmentID
        employee.IsSystemUser = isSystemUser
        Return employee
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property UserName() As Global.System.String
        Get
            Return _UserName
        End Get
        Set
            OnUserNameChanging(value)
            ReportPropertyChanging("UserName")
            _UserName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("UserName")
            OnUserNameChanged()
        End Set
    End Property

    Private _UserName As Global.System.String
    Private Partial Sub OnUserNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnUserNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Password() As Global.System.String
        Get
            Return _Password
        End Get
        Set
            OnPasswordChanging(value)
            ReportPropertyChanging("Password")
            _Password = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Password")
            OnPasswordChanged()
        End Set
    End Property

    Private _Password As Global.System.String
    Private Partial Sub OnPasswordChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPasswordChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PersonID() As Global.System.String
        Get
            Return _PersonID
        End Get
        Set
            OnPersonIDChanging(value)
            ReportPropertyChanging("PersonID")
            _PersonID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PersonID")
            OnPersonIDChanged()
        End Set
    End Property

    Private _PersonID As Global.System.String
    Private Partial Sub OnPersonIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPersonIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property EmployeeTypeID() As Global.System.Int32
        Get
            Return _EmployeeTypeID
        End Get
        Set
            OnEmployeeTypeIDChanging(value)
            ReportPropertyChanging("EmployeeTypeID")
            _EmployeeTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("EmployeeTypeID")
            OnEmployeeTypeIDChanged()
        End Set
    End Property

    Private _EmployeeTypeID As Global.System.Int32
    Private Partial Sub OnEmployeeTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnEmployeeTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property EmployeeStatusID() As Global.System.Int32
        Get
            Return _EmployeeStatusID
        End Get
        Set
            OnEmployeeStatusIDChanging(value)
            ReportPropertyChanging("EmployeeStatusID")
            _EmployeeStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("EmployeeStatusID")
            OnEmployeeStatusIDChanged()
        End Set
    End Property

    Private _EmployeeStatusID As Global.System.Int32
    Private Partial Sub OnEmployeeStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnEmployeeStatusIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IsSystemUser() As Global.System.Boolean
        Get
            Return _IsSystemUser
        End Get
        Set
            OnIsSystemUserChanging(value)
            ReportPropertyChanging("IsSystemUser")
            _IsSystemUser = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("IsSystemUser")
            OnIsSystemUserChanged()
        End Set
    End Property

    Private _IsSystemUser As Global.System.Boolean
    Private Partial Sub OnIsSystemUserChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnIsSystemUserChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_Departments", "Departments")>
    Public Property Department() As Department
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Employees_Departments", "Departments").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Employees_Departments", "Departments").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentReference() As EntityReference(Of Department)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Employees_Departments", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("LMISModel.FK_Employees_Departments", "Departments", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_EmployeeStatus", "EmployeeStatus")>
    Public Property EmployeeStatu() As EmployeeStatu
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of EmployeeStatu)("LMISModel.FK_Employees_EmployeeStatus", "EmployeeStatus").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of EmployeeStatu)("LMISModel.FK_Employees_EmployeeStatus", "EmployeeStatus").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property EmployeeStatuReference() As EntityReference(Of EmployeeStatu)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of EmployeeStatu)("LMISModel.FK_Employees_EmployeeStatus", "EmployeeStatus")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of EmployeeStatu)("LMISModel.FK_Employees_EmployeeStatus", "EmployeeStatus", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_EmployeeTypes", "EmployeeTypes")>
    Public Property EmployeeType() As EmployeeType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of EmployeeType)("LMISModel.FK_Employees_EmployeeTypes", "EmployeeTypes").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of EmployeeType)("LMISModel.FK_Employees_EmployeeTypes", "EmployeeTypes").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property EmployeeTypeReference() As EntityReference(Of EmployeeType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of EmployeeType)("LMISModel.FK_Employees_EmployeeTypes", "EmployeeTypes")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of EmployeeType)("LMISModel.FK_Employees_EmployeeTypes", "EmployeeTypes", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_People", "Person")>
    Public Property Person() As Person
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Employees_People", "Person").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Employees_People", "Person").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonReference() As EntityReference(Of Person)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Employees_People", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Person)("LMISModel.FK_Employees_People", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournals_Employees", "InventoryJournals")>
     Public Property InventoryJournals() As EntityCollection(Of InventoryJournal)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournals_Employees", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournals_Employees", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDRequisition_Employees", "OPDRequisition")>
     Public Property OPDRequisitions() As EntityCollection(Of OPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPDRequisition_Employees", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPDRequisition_Employees", "OPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDRequisition_Employees1", "OPDRequisition")>
     Public Property OPDRequisitions1() As EntityCollection(Of OPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPDRequisition_Employees1", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPDRequisition_Employees1", "OPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OrderandAdminister_Employees", "OrderandAdminister")>
     Public Property OrderandAdministers() As EntityCollection(Of OrderandAdminister)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OrderandAdminister)("LMISModel.FK_OrderandAdminister_Employees", "OrderandAdminister")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OrderandAdminister)("LMISModel.FK_OrderandAdminister_Employees", "OrderandAdminister", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OrderandAdminister_Employees1", "OrderandAdminister")>
     Public Property OrderandAdministers1() As EntityCollection(Of OrderandAdminister)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OrderandAdminister)("LMISModel.FK_OrderandAdminister_Employees1", "OrderandAdminister")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OrderandAdminister)("LMISModel.FK_OrderandAdminister_Employees1", "OrderandAdminister", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="EmployeeStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class EmployeeStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new EmployeeStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateEmployeeStatu(id As Global.System.Int32, status As Global.System.String, active As Global.System.Boolean) As EmployeeStatu
        Dim employeeStatu as EmployeeStatu = New EmployeeStatu
        employeeStatu.ID = id
        employeeStatu.Status = status
        employeeStatu.Active = active
        Return employeeStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.String
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.String
    Private Partial Sub OnStatusChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_EmployeeStatus", "Employees")>
     Public Property Employees() As EntityCollection(Of Employee)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Employee)("LMISModel.FK_Employees_EmployeeStatus", "Employees")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Employee)("LMISModel.FK_Employees_EmployeeStatus", "Employees", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="EmployeeType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class EmployeeType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new EmployeeType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateEmployeeType(id As Global.System.Int32, name As Global.System.String, active As Global.System.Boolean) As EmployeeType
        Dim employeeType as EmployeeType = New EmployeeType
        employeeType.ID = id
        employeeType.Name = name
        employeeType.Active = active
        Return employeeType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_EmployeeTypes", "Employees")>
     Public Property Employees() As EntityCollection(Of Employee)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Employee)("LMISModel.FK_Employees_EmployeeTypes", "Employees")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Employee)("LMISModel.FK_Employees_EmployeeTypes", "Employees", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Facility")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Facility
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Facility object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="facilityName">Initial value of the FacilityName property.</param>
    ''' <param name="faciltyTypeID">Initial value of the FaciltyTypeID property.</param>
    ''' <param name="owner">Initial value of the Owner property.</param>
    ''' <param name="villageID">Initial value of the VillageID property.</param>
    ''' <param name="contactPerson">Initial value of the ContactPerson property.</param>
    ''' <param name="isNationalReferral">Initial value of the IsNationalReferral property.</param>
    ''' <param name="medicalStoreID">Initial value of the MedicalStoreID property.</param>
    Public Shared Function CreateFacility(id As Global.System.String, facilityName As Global.System.String, faciltyTypeID As Global.System.Int32, owner As Global.System.String, villageID As Global.System.Decimal, contactPerson As Global.System.String, isNationalReferral As Global.System.Boolean, medicalStoreID As Global.System.Int32) As Facility
        Dim facility as Facility = New Facility
        facility.ID = id
        facility.FacilityName = facilityName
        facility.FaciltyTypeID = faciltyTypeID
        facility.Owner = owner
        facility.VillageID = villageID
        facility.ContactPerson = contactPerson
        facility.IsNationalReferral = isNationalReferral
        facility.MedicalStoreID = medicalStoreID
        Return facility
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FacilityName() As Global.System.String
        Get
            Return _FacilityName
        End Get
        Set
            OnFacilityNameChanging(value)
            ReportPropertyChanging("FacilityName")
            _FacilityName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("FacilityName")
            OnFacilityNameChanged()
        End Set
    End Property

    Private _FacilityName As Global.System.String
    Private Partial Sub OnFacilityNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFacilityNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FaciltyTypeID() As Global.System.Int32
        Get
            Return _FaciltyTypeID
        End Get
        Set
            OnFaciltyTypeIDChanging(value)
            ReportPropertyChanging("FaciltyTypeID")
            _FaciltyTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("FaciltyTypeID")
            OnFaciltyTypeIDChanged()
        End Set
    End Property

    Private _FaciltyTypeID As Global.System.Int32
    Private Partial Sub OnFaciltyTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnFaciltyTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Owner() As Global.System.String
        Get
            Return _Owner
        End Get
        Set
            OnOwnerChanging(value)
            ReportPropertyChanging("Owner")
            _Owner = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Owner")
            OnOwnerChanged()
        End Set
    End Property

    Private _Owner As Global.System.String
    Private Partial Sub OnOwnerChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnOwnerChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property VillageID() As Global.System.Decimal
        Get
            Return _VillageID
        End Get
        Set
            OnVillageIDChanging(value)
            ReportPropertyChanging("VillageID")
            _VillageID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("VillageID")
            OnVillageIDChanged()
        End Set
    End Property

    Private _VillageID As Global.System.Decimal
    Private Partial Sub OnVillageIDChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnVillageIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ContactPerson() As Global.System.String
        Get
            Return _ContactPerson
        End Get
        Set
            OnContactPersonChanging(value)
            ReportPropertyChanging("ContactPerson")
            _ContactPerson = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ContactPerson")
            OnContactPersonChanged()
        End Set
    End Property

    Private _ContactPerson As Global.System.String
    Private Partial Sub OnContactPersonChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnContactPersonChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IsNationalReferral() As Global.System.Boolean
        Get
            Return _IsNationalReferral
        End Get
        Set
            OnIsNationalReferralChanging(value)
            ReportPropertyChanging("IsNationalReferral")
            _IsNationalReferral = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("IsNationalReferral")
            OnIsNationalReferralChanged()
        End Set
    End Property

    Private _IsNationalReferral As Global.System.Boolean
    Private Partial Sub OnIsNationalReferralChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnIsNationalReferralChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property MedicalStoreID() As Global.System.Int32
        Get
            Return _MedicalStoreID
        End Get
        Set
            OnMedicalStoreIDChanging(value)
            ReportPropertyChanging("MedicalStoreID")
            _MedicalStoreID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("MedicalStoreID")
            OnMedicalStoreIDChanged()
        End Set
    End Property

    Private _MedicalStoreID As Global.System.Int32
    Private Partial Sub OnMedicalStoreIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnMedicalStoreIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Departments_Facility", "Departments")>
     Public Property Departments() As EntityCollection(Of Department)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Department)("LMISModel.FK_Departments_Facility", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Department)("LMISModel.FK_Departments_Facility", "Departments", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Facility_FacilityType", "FacilityType")>
    Public Property FacilityType() As FacilityType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of FacilityType)("LMISModel.FK_Facility_FacilityType", "FacilityType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of FacilityType)("LMISModel.FK_Facility_FacilityType", "FacilityType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property FacilityTypeReference() As EntityReference(Of FacilityType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of FacilityType)("LMISModel.FK_Facility_FacilityType", "FacilityType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of FacilityType)("LMISModel.FK_Facility_FacilityType", "FacilityType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Facility_MedicalStore", "MedicalStore")>
    Public Property MedicalStore() As MedicalStore
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of MedicalStore)("LMISModel.FK_Facility_MedicalStore", "MedicalStore").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of MedicalStore)("LMISModel.FK_Facility_MedicalStore", "MedicalStore").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property MedicalStoreReference() As EntityReference(Of MedicalStore)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of MedicalStore)("LMISModel.FK_Facility_MedicalStore", "MedicalStore")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of MedicalStore)("LMISModel.FK_Facility_MedicalStore", "MedicalStore", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Facility_Village", "Village")>
    Public Property Village() As Village
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Village)("LMISModel.FK_Facility_Village", "Village").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Village)("LMISModel.FK_Facility_Village", "Village").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property VillageReference() As EntityReference(Of Village)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Village)("LMISModel.FK_Facility_Village", "Village")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Village)("LMISModel.FK_Facility_Village", "Village", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Facility_Addres")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Facility_Addres
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Facility_Addres object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="profitMargin">Initial value of the ProfitMargin property.</param>
    Public Shared Function CreateFacility_Addres(id As Global.System.Int32, profitMargin As Global.System.Decimal) As Facility_Addres
        Dim facility_Addres as Facility_Addres = New Facility_Addres
        facility_Addres.ID = id
        facility_Addres.ProfitMargin = profitMargin
        Return facility_Addres
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Tele1() As Global.System.String
        Get
            Return _Tele1
        End Get
        Set
            OnTele1Changing(value)
            ReportPropertyChanging("Tele1")
            _Tele1 = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Tele1")
            OnTele1Changed()
        End Set
    End Property

    Private _Tele1 As Global.System.String
    Private Partial Sub OnTele1Changing(value As Global.System.String)
    End Sub

    Private Partial Sub OnTele1Changed()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Tele2() As Global.System.String
        Get
            Return _Tele2
        End Get
        Set
            OnTele2Changing(value)
            ReportPropertyChanging("Tele2")
            _Tele2 = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Tele2")
            OnTele2Changed()
        End Set
    End Property

    Private _Tele2 As Global.System.String
    Private Partial Sub OnTele2Changing(value As Global.System.String)
    End Sub

    Private Partial Sub OnTele2Changed()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Fax() As Global.System.String
        Get
            Return _Fax
        End Get
        Set
            OnFaxChanging(value)
            ReportPropertyChanging("Fax")
            _Fax = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Fax")
            OnFaxChanged()
        End Set
    End Property

    Private _Fax As Global.System.String
    Private Partial Sub OnFaxChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFaxChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property PO_Box() As Global.System.String
        Get
            Return _PO_Box
        End Get
        Set
            OnPO_BoxChanging(value)
            ReportPropertyChanging("PO_Box")
            _PO_Box = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("PO_Box")
            OnPO_BoxChanged()
        End Set
    End Property

    Private _PO_Box As Global.System.String
    Private Partial Sub OnPO_BoxChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPO_BoxChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Email() As Global.System.String
        Get
            Return _Email
        End Get
        Set
            OnEmailChanging(value)
            ReportPropertyChanging("Email")
            _Email = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Email")
            OnEmailChanged()
        End Set
    End Property

    Private _Email As Global.System.String
    Private Partial Sub OnEmailChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnEmailChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Address() As Global.System.String
        Get
            Return _Address
        End Get
        Set
            OnAddressChanging(value)
            ReportPropertyChanging("Address")
            _Address = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Address")
            OnAddressChanged()
        End Set
    End Property

    Private _Address As Global.System.String
    Private Partial Sub OnAddressChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnAddressChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ProfitMargin() As Global.System.Decimal
        Get
            Return _ProfitMargin
        End Get
        Set
            OnProfitMarginChanging(value)
            ReportPropertyChanging("ProfitMargin")
            _ProfitMargin = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ProfitMargin")
            OnProfitMarginChanged()
        End Set
    End Property

    Private _ProfitMargin As Global.System.Decimal
    Private Partial Sub OnProfitMarginChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnProfitMarginChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="FacilityType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class FacilityType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new FacilityType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateFacilityType(id As Global.System.Int32, name As Global.System.String) As FacilityType
        Dim facilityType as FacilityType = New FacilityType
        facilityType.ID = id
        facilityType.Name = name
        Return facilityType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Description() As Global.System.String
        Get
            Return _Description
        End Get
        Set
            OnDescriptionChanging(value)
            ReportPropertyChanging("Description")
            _Description = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Description")
            OnDescriptionChanged()
        End Set
    End Property

    Private _Description As Global.System.String
    Private Partial Sub OnDescriptionChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDescriptionChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Facility_FacilityType", "Facility")>
     Public Property Facilities() As EntityCollection(Of Facility)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Facility)("LMISModel.FK_Facility_FacilityType", "Facility")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Facility)("LMISModel.FK_Facility_FacilityType", "Facility", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="GRN")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class GRN
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new GRN object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="supplierID">Initial value of the SupplierID property.</param>
    ''' <param name="referenceID">Initial value of the ReferenceID property.</param>
    Public Shared Function CreateGRN(id As Global.System.String, inventoryJournalID As Global.System.String, supplierID As Global.System.String, referenceID As Global.System.String) As GRN
        Dim gRN as GRN = New GRN
        gRN.ID = id
        gRN.InventoryJournalID = inventoryJournalID
        gRN.SupplierID = supplierID
        gRN.ReferenceID = referenceID
        Return gRN
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SupplierID() As Global.System.String
        Get
            Return _SupplierID
        End Get
        Set
            OnSupplierIDChanging(value)
            ReportPropertyChanging("SupplierID")
            _SupplierID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("SupplierID")
            OnSupplierIDChanged()
        End Set
    End Property

    Private _SupplierID As Global.System.String
    Private Partial Sub OnSupplierIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnSupplierIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ReferenceID() As Global.System.String
        Get
            Return _ReferenceID
        End Get
        Set
            OnReferenceIDChanging(value)
            ReportPropertyChanging("ReferenceID")
            _ReferenceID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ReferenceID")
            OnReferenceIDChanged()
        End Set
    End Property

    Private _ReferenceID As Global.System.String
    Private Partial Sub OnReferenceIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnReferenceIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_GRN_InventoryJournals", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_GRN_InventoryJournals", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_GRN_InventoryJournals", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_GRN_InventoryJournals", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_GRN_InventoryJournals", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_GRN_Suppliers", "Suppliers")>
    Public Property Supplier() As Supplier
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Supplier)("LMISModel.FK_GRN_Suppliers", "Suppliers").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Supplier)("LMISModel.FK_GRN_Suppliers", "Suppliers").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property SupplierReference() As EntityReference(Of Supplier)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Supplier)("LMISModel.FK_GRN_Suppliers", "Suppliers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Supplier)("LMISModel.FK_GRN_Suppliers", "Suppliers", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryBatch")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryBatch
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryBatch object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="costPrice">Initial value of the CostPrice property.</param>
    ''' <param name="inventoryBatchStatusID">Initial value of the InventoryBatchStatusID property.</param>
    ''' <param name="salesPrice">Initial value of the SalesPrice property.</param>
    Public Shared Function CreateInventoryBatch(id As Global.System.String, costPrice As Global.System.Decimal, inventoryBatchStatusID As Global.System.Int32, salesPrice As Global.System.Decimal) As InventoryBatch
        Dim inventoryBatch as InventoryBatch = New InventoryBatch
        inventoryBatch.ID = id
        inventoryBatch.CostPrice = costPrice
        inventoryBatch.InventoryBatchStatusID = inventoryBatchStatusID
        inventoryBatch.SalesPrice = salesPrice
        Return inventoryBatch
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ExpireDate() As Nullable(Of Global.System.DateTime)
        Get
            Return _ExpireDate
        End Get
        Set
            OnExpireDateChanging(value)
            ReportPropertyChanging("ExpireDate")
            _ExpireDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ExpireDate")
            OnExpireDateChanged()
        End Set
    End Property

    Private _ExpireDate As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnExpireDateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnExpireDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CostPrice() As Global.System.Decimal
        Get
            Return _CostPrice
        End Get
        Set
            OnCostPriceChanging(value)
            ReportPropertyChanging("CostPrice")
            _CostPrice = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CostPrice")
            OnCostPriceChanged()
        End Set
    End Property

    Private _CostPrice As Global.System.Decimal
    Private Partial Sub OnCostPriceChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnCostPriceChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryBatchStatusID() As Global.System.Int32
        Get
            Return _InventoryBatchStatusID
        End Get
        Set
            OnInventoryBatchStatusIDChanging(value)
            ReportPropertyChanging("InventoryBatchStatusID")
            _InventoryBatchStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryBatchStatusID")
            OnInventoryBatchStatusIDChanged()
        End Set
    End Property

    Private _InventoryBatchStatusID As Global.System.Int32
    Private Partial Sub OnInventoryBatchStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryBatchStatusIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SalesPrice() As Global.System.Decimal
        Get
            Return _SalesPrice
        End Get
        Set
            OnSalesPriceChanging(value)
            ReportPropertyChanging("SalesPrice")
            _SalesPrice = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SalesPrice")
            OnSalesPriceChanged()
        End Set
    End Property

    Private _SalesPrice As Global.System.Decimal
    Private Partial Sub OnSalesPriceChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnSalesPriceChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryJournalDetailsBatch")>
     Public Property InventoryJournalDetailsBatches() As EntityCollection(Of InventoryJournalDetailsBatch)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournalDetailsBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryJournalDetailsBatch")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournalDetailsBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryJournalDetailsBatch", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryBatchStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryBatchStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryBatchStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    Public Shared Function CreateInventoryBatchStatu(id As Global.System.Int32, status As Global.System.String) As InventoryBatchStatu
        Dim inventoryBatchStatu as InventoryBatchStatu = New InventoryBatchStatu
        inventoryBatchStatu.ID = id
        inventoryBatchStatu.Status = status
        Return inventoryBatchStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.String
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.String
    Private Partial Sub OnStatusChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryCategory")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryCategory
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryCategory object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="classificationID">Initial value of the ClassificationID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateInventoryCategory(id As Global.System.Int32, classificationID As Global.System.Int32, name As Global.System.String, active As Global.System.Boolean) As InventoryCategory
        Dim inventoryCategory as InventoryCategory = New InventoryCategory
        inventoryCategory.ID = id
        inventoryCategory.ClassificationID = classificationID
        inventoryCategory.Name = name
        inventoryCategory.Active = active
        Return inventoryCategory
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ClassificationID() As Global.System.Int32
        Get
            Return _ClassificationID
        End Get
        Set
            OnClassificationIDChanging(value)
            ReportPropertyChanging("ClassificationID")
            _ClassificationID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ClassificationID")
            OnClassificationIDChanged()
        End Set
    End Property

    Private _ClassificationID As Global.System.Int32
    Private Partial Sub OnClassificationIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnClassificationIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryCategories_Classification", "Classification")>
    Public Property Classification() As Classification
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Classification)("LMISModel.FK_InventoryCategories_Classification", "Classification").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Classification)("LMISModel.FK_InventoryCategories_Classification", "Classification").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ClassificationReference() As EntityReference(Of Classification)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Classification)("LMISModel.FK_InventoryCategories_Classification", "Classification")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Classification)("LMISModel.FK_InventoryCategories_Classification", "Classification", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_InventoryCategories", "ItemsCatalogue")>
     Public Property ItemsCatalogues() As EntityCollection(Of ItemsCatalogue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_InventoryCategories", "ItemsCatalogue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_InventoryCategories", "ItemsCatalogue", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryItem")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryItem
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryItem object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="itemsCatalogueID">Initial value of the ItemsCatalogueID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="unitID">Initial value of the UnitID property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    ''' <param name="packSize">Initial value of the PackSize property.</param>
    Public Shared Function CreateInventoryItem(id As Global.System.String, itemsCatalogueID As Global.System.String, name As Global.System.String, unitID As Global.System.Int32, active As Global.System.Boolean, packSize As Global.System.Decimal) As InventoryItem
        Dim inventoryItem as InventoryItem = New InventoryItem
        inventoryItem.ID = id
        inventoryItem.ItemsCatalogueID = itemsCatalogueID
        inventoryItem.Name = name
        inventoryItem.UnitID = unitID
        inventoryItem.Active = active
        inventoryItem.PackSize = packSize
        Return inventoryItem
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ItemsCatalogueID() As Global.System.String
        Get
            Return _ItemsCatalogueID
        End Get
        Set
            OnItemsCatalogueIDChanging(value)
            ReportPropertyChanging("ItemsCatalogueID")
            _ItemsCatalogueID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ItemsCatalogueID")
            OnItemsCatalogueIDChanged()
        End Set
    End Property

    Private _ItemsCatalogueID As Global.System.String
    Private Partial Sub OnItemsCatalogueIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItemsCatalogueIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property UnitID() As Global.System.Int32
        Get
            Return _UnitID
        End Get
        Set
            OnUnitIDChanging(value)
            ReportPropertyChanging("UnitID")
            _UnitID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("UnitID")
            OnUnitIDChanged()
        End Set
    End Property

    Private _UnitID As Global.System.Int32
    Private Partial Sub OnUnitIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnUnitIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property OldItemCode() As Global.System.String
        Get
            Return _OldItemCode
        End Get
        Set
            OnOldItemCodeChanging(value)
            ReportPropertyChanging("OldItemCode")
            _OldItemCode = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("OldItemCode")
            OnOldItemCodeChanged()
        End Set
    End Property

    Private _OldItemCode As Global.System.String
    Private Partial Sub OnOldItemCodeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnOldItemCodeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property MinQty() As Nullable(Of Global.System.Decimal)
        Get
            Return _MinQty
        End Get
        Set
            OnMinQtyChanging(value)
            ReportPropertyChanging("MinQty")
            _MinQty = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("MinQty")
            OnMinQtyChanged()
        End Set
    End Property

    Private _MinQty As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnMinQtyChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnMinQtyChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property MaxQty() As Nullable(Of Global.System.Decimal)
        Get
            Return _MaxQty
        End Get
        Set
            OnMaxQtyChanging(value)
            ReportPropertyChanging("MaxQty")
            _MaxQty = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("MaxQty")
            OnMaxQtyChanged()
        End Set
    End Property

    Private _MaxQty As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnMaxQtyChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnMaxQtyChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ReorderQty() As Nullable(Of Global.System.Decimal)
        Get
            Return _ReorderQty
        End Get
        Set
            OnReorderQtyChanging(value)
            ReportPropertyChanging("ReorderQty")
            _ReorderQty = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ReorderQty")
            OnReorderQtyChanged()
        End Set
    End Property

    Private _ReorderQty As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnReorderQtyChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnReorderQtyChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PackSize() As Global.System.Decimal
        Get
            Return _PackSize
        End Get
        Set
            OnPackSizeChanging(value)
            ReportPropertyChanging("PackSize")
            _PackSize = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PackSize")
            OnPackSizeChanged()
        End Set
    End Property

    Private _PackSize As Global.System.Decimal
    Private Partial Sub OnPackSizeChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnPackSizeChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryItemDetails_InventoryItems", "InventoryItemDetails")>
     Public Property InventoryItemDetails() As EntityCollection(Of InventoryItemDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryItemDetail)("LMISModel.FK_InventoryItemDetails_InventoryItems", "InventoryItemDetails")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryItemDetail)("LMISModel.FK_InventoryItemDetails_InventoryItems", "InventoryItemDetails", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryItems_ItemsCatalogue1", "ItemsCatalogue")>
    Public Property ItemsCatalogue() As ItemsCatalogue
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ItemsCatalogue)("LMISModel.FK_InventoryItems_ItemsCatalogue1", "ItemsCatalogue").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ItemsCatalogue)("LMISModel.FK_InventoryItems_ItemsCatalogue1", "ItemsCatalogue").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ItemsCatalogueReference() As EntityReference(Of ItemsCatalogue)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ItemsCatalogue)("LMISModel.FK_InventoryItems_ItemsCatalogue1", "ItemsCatalogue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ItemsCatalogue)("LMISModel.FK_InventoryItems_ItemsCatalogue1", "ItemsCatalogue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryItems_Units", "Units")>
    Public Property Unit() As Unit
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Unit)("LMISModel.FK_InventoryItems_Units", "Units").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Unit)("LMISModel.FK_InventoryItems_Units", "Units").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property UnitReference() As EntityReference(Of Unit)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Unit)("LMISModel.FK_InventoryItems_Units", "Units")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Unit)("LMISModel.FK_InventoryItems_Units", "Units", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetails_InventoryItems", "InventoryJournalDetails")>
     Public Property InventoryJournalDetails() As EntityCollection(Of InventoryJournalDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetails_InventoryItems", "InventoryJournalDetails")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetails_InventoryItems", "InventoryJournalDetails", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_QuotationDetail_InventoryItems", "QuotationDetail")>
     Public Property QuotationDetails() As EntityCollection(Of QuotationDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of QuotationDetail)("LMISModel.FK_QuotationDetail_InventoryItems", "QuotationDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of QuotationDetail)("LMISModel.FK_QuotationDetail_InventoryItems", "QuotationDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryItemDetail")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryItemDetail
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryItemDetail object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="itemCode">Initial value of the ItemCode property.</param>
    ''' <param name="inventoryItemID">Initial value of the InventoryItemID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateInventoryItemDetail(id As Global.System.Int32, itemCode As Global.System.String, inventoryItemID As Global.System.String, name As Global.System.String) As InventoryItemDetail
        Dim inventoryItemDetail as InventoryItemDetail = New InventoryItemDetail
        inventoryItemDetail.ID = id
        inventoryItemDetail.ItemCode = itemCode
        inventoryItemDetail.InventoryItemID = inventoryItemID
        inventoryItemDetail.Name = name
        Return inventoryItemDetail
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ItemCode() As Global.System.String
        Get
            Return _ItemCode
        End Get
        Set
            OnItemCodeChanging(value)
            ReportPropertyChanging("ItemCode")
            _ItemCode = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ItemCode")
            OnItemCodeChanged()
        End Set
    End Property

    Private _ItemCode As Global.System.String
    Private Partial Sub OnItemCodeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItemCodeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryItemID() As Global.System.String
        Get
            Return _InventoryItemID
        End Get
        Set
            OnInventoryItemIDChanging(value)
            ReportPropertyChanging("InventoryItemID")
            _InventoryItemID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryItemID")
            OnInventoryItemIDChanged()
        End Set
    End Property

    Private _InventoryItemID As Global.System.String
    Private Partial Sub OnInventoryItemIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryItemIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryItemDetails_InventoryItems", "InventoryItems")>
    Public Property InventoryItem() As InventoryItem
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryItemDetails_InventoryItems", "InventoryItems").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryItemDetails_InventoryItems", "InventoryItems").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryItemReference() As EntityReference(Of InventoryItem)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryItemDetails_InventoryItems", "InventoryItems")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryItemDetails_InventoryItems", "InventoryItems", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryJournal")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryJournal
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryJournal object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    ''' <param name="inventoryJournalTypeID">Initial value of the InventoryJournalTypeID property.</param>
    ''' <param name="transactionDate">Initial value of the TransactionDate property.</param>
    ''' <param name="voucherDate">Initial value of the VoucherDate property.</param>
    ''' <param name="employeeID">Initial value of the EmployeeID property.</param>
    ''' <param name="void">Initial value of the Void property.</param>
    ''' <param name="inventoryJournalStatusID">Initial value of the InventoryJournalStatusID property.</param>
    Public Shared Function CreateInventoryJournal(id As Global.System.String, departmentID As Global.System.String, inventoryJournalTypeID As Global.System.Int32, transactionDate As Global.System.DateTime, voucherDate As Global.System.DateTime, employeeID As Global.System.String, void As Global.System.Boolean, inventoryJournalStatusID As Global.System.Int32) As InventoryJournal
        Dim inventoryJournal as InventoryJournal = New InventoryJournal
        inventoryJournal.ID = id
        inventoryJournal.DepartmentID = departmentID
        inventoryJournal.InventoryJournalTypeID = inventoryJournalTypeID
        inventoryJournal.TransactionDate = transactionDate
        inventoryJournal.VoucherDate = voucherDate
        inventoryJournal.EmployeeID = employeeID
        inventoryJournal.Void = void
        inventoryJournal.InventoryJournalStatusID = inventoryJournalStatusID
        Return inventoryJournal
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalTypeID() As Global.System.Int32
        Get
            Return _InventoryJournalTypeID
        End Get
        Set
            OnInventoryJournalTypeIDChanging(value)
            ReportPropertyChanging("InventoryJournalTypeID")
            _InventoryJournalTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournalTypeID")
            OnInventoryJournalTypeIDChanged()
        End Set
    End Property

    Private _InventoryJournalTypeID As Global.System.Int32
    Private Partial Sub OnInventoryJournalTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryJournalTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TransactionDate() As Global.System.DateTime
        Get
            Return _TransactionDate
        End Get
        Set
            OnTransactionDateChanging(value)
            ReportPropertyChanging("TransactionDate")
            _TransactionDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TransactionDate")
            OnTransactionDateChanged()
        End Set
    End Property

    Private _TransactionDate As Global.System.DateTime
    Private Partial Sub OnTransactionDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnTransactionDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property VoucherDate() As Global.System.DateTime
        Get
            Return _VoucherDate
        End Get
        Set
            OnVoucherDateChanging(value)
            ReportPropertyChanging("VoucherDate")
            _VoucherDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("VoucherDate")
            OnVoucherDateChanged()
        End Set
    End Property

    Private _VoucherDate As Global.System.DateTime
    Private Partial Sub OnVoucherDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnVoucherDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Remark() As Global.System.String
        Get
            Return _Remark
        End Get
        Set
            OnRemarkChanging(value)
            ReportPropertyChanging("Remark")
            _Remark = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Remark")
            OnRemarkChanged()
        End Set
    End Property

    Private _Remark As Global.System.String
    Private Partial Sub OnRemarkChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRemarkChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property EmployeeID() As Global.System.String
        Get
            Return _EmployeeID
        End Get
        Set
            OnEmployeeIDChanging(value)
            ReportPropertyChanging("EmployeeID")
            _EmployeeID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("EmployeeID")
            OnEmployeeIDChanged()
        End Set
    End Property

    Private _EmployeeID As Global.System.String
    Private Partial Sub OnEmployeeIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnEmployeeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Void() As Global.System.Boolean
        Get
            Return _Void
        End Get
        Set
            OnVoidChanging(value)
            ReportPropertyChanging("Void")
            _Void = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Void")
            OnVoidChanged()
        End Set
    End Property

    Private _Void As Global.System.Boolean
    Private Partial Sub OnVoidChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnVoidChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalStatusID() As Global.System.Int32
        Get
            Return _InventoryJournalStatusID
        End Get
        Set
            OnInventoryJournalStatusIDChanging(value)
            ReportPropertyChanging("InventoryJournalStatusID")
            _InventoryJournalStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournalStatusID")
            OnInventoryJournalStatusIDChanged()
        End Set
    End Property

    Private _InventoryJournalStatusID As Global.System.Int32
    Private Partial Sub OnInventoryJournalStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryJournalStatusIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Adjustment_InventoryJournals", "Adjustment")>
     Public Property Adjustments() As EntityCollection(Of Adjustment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Adjustment)("LMISModel.FK_Adjustment_InventoryJournals", "Adjustment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Adjustment)("LMISModel.FK_Adjustment_InventoryJournals", "Adjustment", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournals_Departments", "Departments")>
    Public Property Department() As Department
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_InventoryJournals_Departments", "Departments").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_InventoryJournals_Departments", "Departments").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentReference() As EntityReference(Of Department)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_InventoryJournals_Departments", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("LMISModel.FK_InventoryJournals_Departments", "Departments", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournals_Employees", "Employees")>
    Public Property Employee() As Employee
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_InventoryJournals_Employees", "Employees").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_InventoryJournals_Employees", "Employees").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property EmployeeReference() As EntityReference(Of Employee)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_InventoryJournals_Employees", "Employees")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("LMISModel.FK_InventoryJournals_Employees", "Employees", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_GRN_InventoryJournals", "GRN")>
     Public Property GRNs() As EntityCollection(Of GRN)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of GRN)("LMISModel.FK_GRN_InventoryJournals", "GRN")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of GRN)("LMISModel.FK_GRN_InventoryJournals", "GRN", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetails_InventoryJournal", "InventoryJournalDetails")>
     Public Property InventoryJournalDetails() As EntityCollection(Of InventoryJournalDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetails_InventoryJournal", "InventoryJournalDetails")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetails_InventoryJournal", "InventoryJournalDetails", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournal_InventoryJournalType", "InventoryJournalTypes")>
    Public Property InventoryJournalType() As InventoryJournalType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalType)("LMISModel.FK_InventoryJournal_InventoryJournalType", "InventoryJournalTypes").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalType)("LMISModel.FK_InventoryJournal_InventoryJournalType", "InventoryJournalTypes").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalTypeReference() As EntityReference(Of InventoryJournalType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalType)("LMISModel.FK_InventoryJournal_InventoryJournalType", "InventoryJournalTypes")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalType)("LMISModel.FK_InventoryJournal_InventoryJournalType", "InventoryJournalTypes", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournals_InventoryJournalStatus", "InventoryJournalStatus")>
    Public Property InventoryJournalStatu() As InventoryJournalStatu
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalStatu)("LMISModel.FK_InventoryJournals_InventoryJournalStatus", "InventoryJournalStatus").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalStatu)("LMISModel.FK_InventoryJournals_InventoryJournalStatus", "InventoryJournalStatus").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalStatuReference() As EntityReference(Of InventoryJournalStatu)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalStatu)("LMISModel.FK_InventoryJournals_InventoryJournalStatus", "InventoryJournalStatus")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalStatu)("LMISModel.FK_InventoryJournals_InventoryJournalStatus", "InventoryJournalStatus", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPD_InventoryJournals1", "IPDRequisition")>
     Public Property IPDRequisitions() As EntityCollection(Of IPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPD_InventoryJournals1", "IPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPD_InventoryJournals1", "IPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPDIssue_InventoryJournals1", "IPDIssue")>
     Public Property IPDIssues() As EntityCollection(Of IPDIssue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of IPDIssue)("LMISModel.FK_IPDIssue_InventoryJournals1", "IPDIssue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of IPDIssue)("LMISModel.FK_IPDIssue_InventoryJournals1", "IPDIssue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Issue_InventoryJournals", "Issue")>
     Public Property Issues() As EntityCollection(Of Issue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Issue)("LMISModel.FK_Issue_InventoryJournals", "Issue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Issue)("LMISModel.FK_Issue_InventoryJournals", "Issue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPD_InventoryJournals", "OPDRequisition")>
     Public Property OPDRequisitions() As EntityCollection(Of OPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPD_InventoryJournals", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPD_InventoryJournals", "OPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDIssue_InventoryJournals", "OPDIssue")>
     Public Property OPDIssues() As EntityCollection(Of OPDIssue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OPDIssue)("LMISModel.FK_OPDIssue_InventoryJournals", "OPDIssue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OPDIssue)("LMISModel.FK_OPDIssue_InventoryJournals", "OPDIssue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PurchaseOrder_InventoryJournals", "PurchaseOrder")>
     Public Property PurchaseOrders() As EntityCollection(Of PurchaseOrder)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of PurchaseOrder)("LMISModel.FK_PurchaseOrder_InventoryJournals", "PurchaseOrder")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PurchaseOrder)("LMISModel.FK_PurchaseOrder_InventoryJournals", "PurchaseOrder", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Recieve_InventoryJournal", "Recieve")>
     Public Property Recieves() As EntityCollection(Of Recieve)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Recieve)("LMISModel.FK_Recieve_InventoryJournal", "Recieve")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Recieve)("LMISModel.FK_Recieve_InventoryJournal", "Recieve", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_InventoryJournals", "Requisition")>
     Public Property Requisitions() As EntityCollection(Of Requisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_InventoryJournals", "Requisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_InventoryJournals", "Requisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Request_InventoryJournals", "Request")>
     Public Property Requests() As EntityCollection(Of Request)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Request)("LMISModel.FK_Request_InventoryJournals", "Request")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Request)("LMISModel.FK_Request_InventoryJournals", "Request", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_InventoryJournals", "Transfer")>
     Public Property Transfers() As EntityCollection(Of Transfer)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Transfer)("LMISModel.FK_Transfers_InventoryJournals", "Transfer")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Transfer)("LMISModel.FK_Transfers_InventoryJournals", "Transfer", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_Locations", "Transfer")>
     Public Property Transfers1() As EntityCollection(Of Transfer)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Transfer)("LMISModel.FK_Transfers_Locations", "Transfer")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Transfer)("LMISModel.FK_Transfers_Locations", "Transfer", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryJournalDetail")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryJournalDetail
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryJournalDetail object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="itemID">Initial value of the ItemID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="quantity">Initial value of the Quantity property.</param>
    Public Shared Function CreateInventoryJournalDetail(id As Global.System.Int32, itemID As Global.System.String, inventoryJournalID As Global.System.String, quantity As Global.System.Decimal) As InventoryJournalDetail
        Dim inventoryJournalDetail as InventoryJournalDetail = New InventoryJournalDetail
        inventoryJournalDetail.ID = id
        inventoryJournalDetail.ItemID = itemID
        inventoryJournalDetail.InventoryJournalID = inventoryJournalID
        inventoryJournalDetail.Quantity = quantity
        Return inventoryJournalDetail
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ItemID() As Global.System.String
        Get
            Return _ItemID
        End Get
        Set
            OnItemIDChanging(value)
            ReportPropertyChanging("ItemID")
            _ItemID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ItemID")
            OnItemIDChanged()
        End Set
    End Property

    Private _ItemID As Global.System.String
    Private Partial Sub OnItemIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItemIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Quantity() As Global.System.Decimal
        Get
            Return _Quantity
        End Get
        Set
            OnQuantityChanging(value)
            ReportPropertyChanging("Quantity")
            _Quantity = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Quantity")
            OnQuantityChanged()
        End Set
    End Property

    Private _Quantity As Global.System.Decimal
    Private Partial Sub OnQuantityChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnQuantityChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Remark() As Global.System.String
        Get
            Return _Remark
        End Get
        Set
            OnRemarkChanging(value)
            ReportPropertyChanging("Remark")
            _Remark = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Remark")
            OnRemarkChanged()
        End Set
    End Property

    Private _Remark As Global.System.String
    Private Partial Sub OnRemarkChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRemarkChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ConsumedItems_InventoryJournalDetails", "ConsumedItems")>
     Public Property ConsumedItems() As EntityCollection(Of ConsumedItem)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of ConsumedItem)("LMISModel.FK_ConsumedItems_InventoryJournalDetails", "ConsumedItems")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ConsumedItem)("LMISModel.FK_ConsumedItems_InventoryJournalDetails", "ConsumedItems", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetails_InventoryItems", "InventoryItems")>
    Public Property InventoryItem() As InventoryItem
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryJournalDetails_InventoryItems", "InventoryItems").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryJournalDetails_InventoryItems", "InventoryItems").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryItemReference() As EntityReference(Of InventoryItem)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryJournalDetails_InventoryItems", "InventoryItems")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryItem)("LMISModel.FK_InventoryJournalDetails_InventoryItems", "InventoryItems", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetails_InventoryJournal", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_InventoryJournalDetails_InventoryJournal", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_InventoryJournalDetails_InventoryJournal", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_InventoryJournalDetails_InventoryJournal", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_InventoryJournalDetails_InventoryJournal", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetailsBatches")>
     Public Property InventoryJournalDetailsBatches() As EntityCollection(Of InventoryJournalDetailsBatch)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournalDetailsBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetailsBatches")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournalDetailsBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetailsBatches", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OrderandAdminister_InventoryJournalDetails", "OrderandAdminister")>
     Public Property OrderandAdministers() As EntityCollection(Of OrderandAdminister)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OrderandAdminister)("LMISModel.FK_OrderandAdminister_InventoryJournalDetails", "OrderandAdminister")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OrderandAdminister)("LMISModel.FK_OrderandAdminister_InventoryJournalDetails", "OrderandAdminister", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailIN_InventoryJournalDetails", "TransferDetailIN")>
     Public Property TransferDetailINs() As EntityCollection(Of TransferDetailIN)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of TransferDetailIN)("LMISModel.FK_TransferDetailIN_InventoryJournalDetails", "TransferDetailIN")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of TransferDetailIN)("LMISModel.FK_TransferDetailIN_InventoryJournalDetails", "TransferDetailIN", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailOut_InventoryJournalDetails", "TransferDetailOut")>
     Public Property TransferDetailOuts() As EntityCollection(Of TransferDetailOut)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of TransferDetailOut)("LMISModel.FK_TransferDetailOut_InventoryJournalDetails", "TransferDetailOut")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of TransferDetailOut)("LMISModel.FK_TransferDetailOut_InventoryJournalDetails", "TransferDetailOut", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryJournalDetailsBatch")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryJournalDetailsBatch
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryJournalDetailsBatch object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryBatchID">Initial value of the InventoryBatchID property.</param>
    ''' <param name="price">Initial value of the Price property.</param>
    ''' <param name="inventoryJournaDetaillID">Initial value of the InventoryJournaDetaillID property.</param>
    ''' <param name="locationID">Initial value of the LocationID property.</param>
    Public Shared Function CreateInventoryJournalDetailsBatch(id As Global.System.Int32, inventoryBatchID As Global.System.String, price As Global.System.Decimal, inventoryJournaDetaillID As Global.System.Int32, locationID As Global.System.String) As InventoryJournalDetailsBatch
        Dim inventoryJournalDetailsBatch as InventoryJournalDetailsBatch = New InventoryJournalDetailsBatch
        inventoryJournalDetailsBatch.ID = id
        inventoryJournalDetailsBatch.InventoryBatchID = inventoryBatchID
        inventoryJournalDetailsBatch.Price = price
        inventoryJournalDetailsBatch.InventoryJournaDetaillID = inventoryJournaDetaillID
        inventoryJournalDetailsBatch.LocationID = locationID
        Return inventoryJournalDetailsBatch
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryBatchID() As Global.System.String
        Get
            Return _InventoryBatchID
        End Get
        Set
            OnInventoryBatchIDChanging(value)
            ReportPropertyChanging("InventoryBatchID")
            _InventoryBatchID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryBatchID")
            OnInventoryBatchIDChanged()
        End Set
    End Property

    Private _InventoryBatchID As Global.System.String
    Private Partial Sub OnInventoryBatchIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryBatchIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Price() As Global.System.Decimal
        Get
            Return _Price
        End Get
        Set
            OnPriceChanging(value)
            ReportPropertyChanging("Price")
            _Price = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Price")
            OnPriceChanged()
        End Set
    End Property

    Private _Price As Global.System.Decimal
    Private Partial Sub OnPriceChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnPriceChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournaDetaillID() As Global.System.Int32
        Get
            Return _InventoryJournaDetaillID
        End Get
        Set
            OnInventoryJournaDetaillIDChanging(value)
            ReportPropertyChanging("InventoryJournaDetaillID")
            _InventoryJournaDetaillID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournaDetaillID")
            OnInventoryJournaDetaillIDChanged()
        End Set
    End Property

    Private _InventoryJournaDetaillID As Global.System.Int32
    Private Partial Sub OnInventoryJournaDetaillIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryJournaDetaillIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property LocationID() As Global.System.String
        Get
            Return _LocationID
        End Get
        Set
            OnLocationIDChanging(value)
            ReportPropertyChanging("LocationID")
            _LocationID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("LocationID")
            OnLocationIDChanged()
        End Set
    End Property

    Private _LocationID As Global.System.String
    Private Partial Sub OnLocationIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnLocationIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetails")>
    Public Property InventoryJournalDetail() As InventoryJournalDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetails").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetails").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailReference() As EntityReference(Of InventoryJournalDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetails")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryJournalDetails", "InventoryJournalDetails", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_Locations", "Locations")>
    Public Property Location() As Location
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("LMISModel.FK_InventoryJournalDetailsBatches_Locations", "Locations").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("LMISModel.FK_InventoryJournalDetailsBatches_Locations", "Locations").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property LocationReference() As EntityReference(Of Location)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("LMISModel.FK_InventoryJournalDetailsBatches_Locations", "Locations")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Location)("LMISModel.FK_InventoryJournalDetailsBatches_Locations", "Locations", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryBatch")>
    Public Property InventoryBatch() As InventoryBatch
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryBatch").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryBatch").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryBatchReference() As EntityReference(Of InventoryBatch)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryBatch")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryBatch)("LMISModel.FK_InventoryJournalDetailsBatches_InventoryBatches", "InventoryBatch", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryJournalStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryJournalStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryJournalStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateInventoryJournalStatu(id As Global.System.Int32, name As Global.System.String) As InventoryJournalStatu
        Dim inventoryJournalStatu as InventoryJournalStatu = New InventoryJournalStatu
        inventoryJournalStatu.ID = id
        inventoryJournalStatu.Name = name
        Return inventoryJournalStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournals_InventoryJournalStatus", "InventoryJournals")>
     Public Property InventoryJournals() As EntityCollection(Of InventoryJournal)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournals_InventoryJournalStatus", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournals_InventoryJournalStatus", "InventoryJournals", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="InventoryJournalType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class InventoryJournalType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new InventoryJournalType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    Public Shared Function CreateInventoryJournalType(id As Global.System.Int32, name As Global.System.String, type As Global.System.String) As InventoryJournalType
        Dim inventoryJournalType as InventoryJournalType = New InventoryJournalType
        inventoryJournalType.ID = id
        inventoryJournalType.Name = name
        inventoryJournalType.Type = type
        Return inventoryJournalType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournal_InventoryJournalType", "InventoryJournals")>
     Public Property InventoryJournals() As EntityCollection(Of InventoryJournal)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournal_InventoryJournalType", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournal)("LMISModel.FK_InventoryJournal_InventoryJournalType", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentType_InventoryJournalTypes", "PaymentType")>
     Public Property PaymentTypes() As EntityCollection(Of PaymentType)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of PaymentType)("LMISModel.FK_PaymentType_InventoryJournalTypes", "PaymentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PaymentType)("LMISModel.FK_PaymentType_InventoryJournalTypes", "PaymentType", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="IPDIssue")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class IPDIssue
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new IPDIssue object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="iPDRequisitionID">Initial value of the IPDRequisitionID property.</param>
    Public Shared Function CreateIPDIssue(id As Global.System.String, inventoryJournalID As Global.System.String, iPDRequisitionID As Global.System.String) As IPDIssue
        Dim iPDIssue as IPDIssue = New IPDIssue
        iPDIssue.ID = id
        iPDIssue.InventoryJournalID = inventoryJournalID
        iPDIssue.IPDRequisitionID = iPDRequisitionID
        Return iPDIssue
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IPDRequisitionID() As Global.System.String
        Get
            Return _IPDRequisitionID
        End Get
        Set
            OnIPDRequisitionIDChanging(value)
            ReportPropertyChanging("IPDRequisitionID")
            _IPDRequisitionID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("IPDRequisitionID")
            OnIPDRequisitionIDChanged()
        End Set
    End Property

    Private _IPDRequisitionID As Global.System.String
    Private Partial Sub OnIPDRequisitionIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIPDRequisitionIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPDIssue_InventoryJournals1", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_IPDIssue_InventoryJournals1", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_IPDIssue_InventoryJournals1", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_IPDIssue_InventoryJournals1", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_IPDIssue_InventoryJournals1", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPDIssue_IPDRequisition", "IPDRequisition")>
    Public Property IPDRequisition() As IPDRequisition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_IPDIssue_IPDRequisition", "IPDRequisition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_IPDIssue_IPDRequisition", "IPDRequisition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property IPDRequisitionReference() As EntityReference(Of IPDRequisition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_IPDIssue_IPDRequisition", "IPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of IPDRequisition)("LMISModel.FK_IPDIssue_IPDRequisition", "IPDRequisition", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="IPDRequisition")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class IPDRequisition
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new IPDRequisition object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="paymentTypeID">Initial value of the PaymentTypeID property.</param>
    ''' <param name="patientID">Initial value of the PatientID property.</param>
    ''' <param name="bedID">Initial value of the BedID property.</param>
    ''' <param name="admissionDate">Initial value of the AdmissionDate property.</param>
    ''' <param name="dischargeDate">Initial value of the DischargeDate property.</param>
    Public Shared Function CreateIPDRequisition(id As Global.System.String, paymentTypeID As Global.System.Int32, patientID As Global.System.String, bedID As Global.System.String, admissionDate As Global.System.DateTime, dischargeDate As Global.System.DateTime) As IPDRequisition
        Dim iPDRequisition as IPDRequisition = New IPDRequisition
        iPDRequisition.ID = id
        iPDRequisition.PaymentTypeID = paymentTypeID
        iPDRequisition.PatientID = patientID
        iPDRequisition.BedID = bedID
        iPDRequisition.AdmissionDate = admissionDate
        iPDRequisition.DischargeDate = dischargeDate
        Return iPDRequisition
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PaymentTypeID() As Global.System.Int32
        Get
            Return _PaymentTypeID
        End Get
        Set
            OnPaymentTypeIDChanging(value)
            ReportPropertyChanging("PaymentTypeID")
            _PaymentTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentTypeID")
            OnPaymentTypeIDChanged()
        End Set
    End Property

    Private _PaymentTypeID As Global.System.Int32
    Private Partial Sub OnPaymentTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPaymentTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PatientID() As Global.System.String
        Get
            Return _PatientID
        End Get
        Set
            OnPatientIDChanging(value)
            ReportPropertyChanging("PatientID")
            _PatientID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PatientID")
            OnPatientIDChanged()
        End Set
    End Property

    Private _PatientID As Global.System.String
    Private Partial Sub OnPatientIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPatientIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property BedID() As Global.System.String
        Get
            Return _BedID
        End Get
        Set
            OnBedIDChanging(value)
            ReportPropertyChanging("BedID")
            _BedID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("BedID")
            OnBedIDChanged()
        End Set
    End Property

    Private _BedID As Global.System.String
    Private Partial Sub OnBedIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBedIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AdmissionDate() As Global.System.DateTime
        Get
            Return _AdmissionDate
        End Get
        Set
            OnAdmissionDateChanging(value)
            ReportPropertyChanging("AdmissionDate")
            _AdmissionDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("AdmissionDate")
            OnAdmissionDateChanged()
        End Set
    End Property

    Private _AdmissionDate As Global.System.DateTime
    Private Partial Sub OnAdmissionDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnAdmissionDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DischargeDate() As Global.System.DateTime
        Get
            Return _DischargeDate
        End Get
        Set
            OnDischargeDateChanging(value)
            ReportPropertyChanging("DischargeDate")
            _DischargeDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DischargeDate")
            OnDischargeDateChanged()
        End Set
    End Property

    Private _DischargeDate As Global.System.DateTime
    Private Partial Sub OnDischargeDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnDischargeDateChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPD_Bed", "Bed")>
    Public Property Bed() As Bed
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Bed)("LMISModel.FK_IPD_Bed", "Bed").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Bed)("LMISModel.FK_IPD_Bed", "Bed").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property BedReference() As EntityReference(Of Bed)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Bed)("LMISModel.FK_IPD_Bed", "Bed")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Bed)("LMISModel.FK_IPD_Bed", "Bed", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPD_InventoryJournals1", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_IPD_InventoryJournals1", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_IPD_InventoryJournals1", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_IPD_InventoryJournals1", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_IPD_InventoryJournals1", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPDIssue_IPDRequisition", "IPDIssue")>
     Public Property IPDIssues() As EntityCollection(Of IPDIssue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of IPDIssue)("LMISModel.FK_IPDIssue_IPDRequisition", "IPDIssue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of IPDIssue)("LMISModel.FK_IPDIssue_IPDRequisition", "IPDIssue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPD_Patient", "Patient")>
    Public Property Patient() As Patient
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Patient)("LMISModel.FK_IPD_Patient", "Patient").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Patient)("LMISModel.FK_IPD_Patient", "Patient").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PatientReference() As EntityReference(Of Patient)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Patient)("LMISModel.FK_IPD_Patient", "Patient")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Patient)("LMISModel.FK_IPD_Patient", "Patient", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPDRequisition_PaymentType", "PaymentType")>
    Public Property PaymentType() As PaymentType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_IPDRequisition_PaymentType", "PaymentType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_IPDRequisition_PaymentType", "PaymentType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PaymentTypeReference() As EntityReference(Of PaymentType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_IPDRequisition_PaymentType", "PaymentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PaymentType)("LMISModel.FK_IPDRequisition_PaymentType", "PaymentType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminIPD_IPDRequisition", "PaymentAdminIPD")>
     Public Property PaymentAdminIPDs() As EntityCollection(Of PaymentAdminIPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of PaymentAdminIPD)("LMISModel.FK_PaymentAdminIPD_IPDRequisition", "PaymentAdminIPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PaymentAdminIPD)("LMISModel.FK_PaymentAdminIPD_IPDRequisition", "PaymentAdminIPD", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportIPD_IPDRequisition", "SickReportIPD")>
     Public Property SickReportIPDs() As EntityCollection(Of SickReportIPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of SickReportIPD)("LMISModel.FK_SickReportIPD_IPDRequisition", "SickReportIPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SickReportIPD)("LMISModel.FK_SickReportIPD_IPDRequisition", "SickReportIPD", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Issue")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Issue
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Issue object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="requisitionID">Initial value of the RequisitionID property.</param>
    Public Shared Function CreateIssue(id As Global.System.String, inventoryJournalID As Global.System.String, requisitionID As Global.System.String) As Issue
        Dim issue as Issue = New Issue
        issue.ID = id
        issue.InventoryJournalID = inventoryJournalID
        issue.RequisitionID = requisitionID
        Return issue
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RequisitionID() As Global.System.String
        Get
            Return _RequisitionID
        End Get
        Set
            OnRequisitionIDChanging(value)
            ReportPropertyChanging("RequisitionID")
            _RequisitionID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("RequisitionID")
            OnRequisitionIDChanged()
        End Set
    End Property

    Private _RequisitionID As Global.System.String
    Private Partial Sub OnRequisitionIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRequisitionIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Issue_InventoryJournals", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Issue_InventoryJournals", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Issue_InventoryJournals", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Issue_InventoryJournals", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_Issue_InventoryJournals", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Issue_Requisition", "Requisition")>
    Public Property Requisition() As Requisition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Requisition)("LMISModel.FK_Issue_Requisition", "Requisition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Requisition)("LMISModel.FK_Issue_Requisition", "Requisition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RequisitionReference() As EntityReference(Of Requisition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Requisition)("LMISModel.FK_Issue_Requisition", "Requisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Requisition)("LMISModel.FK_Issue_Requisition", "Requisition", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="ItemsCatalogue")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class ItemsCatalogue
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new ItemsCatalogue object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="inventoryCategoryID">Initial value of the InventoryCategoryID property.</param>
    ''' <param name="expires">Initial value of the Expires property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    ''' <param name="therapeuticClassID">Initial value of the TherapeuticClassID property.</param>
    ''' <param name="prescriptionStatusID">Initial value of the PrescriptionStatusID property.</param>
    ''' <param name="levelOfUseID">Initial value of the LevelOfUseID property.</param>
    ''' <param name="routeofAdministrationID">Initial value of the RouteofAdministrationID property.</param>
    Public Shared Function CreateItemsCatalogue(id As Global.System.String, name As Global.System.String, inventoryCategoryID As Global.System.Int32, expires As Global.System.Boolean, active As Global.System.Boolean, therapeuticClassID As Global.System.Int32, prescriptionStatusID As Global.System.Int32, levelOfUseID As Global.System.Int32, routeofAdministrationID As Global.System.Int32) As ItemsCatalogue
        Dim itemsCatalogue as ItemsCatalogue = New ItemsCatalogue
        itemsCatalogue.ID = id
        itemsCatalogue.Name = name
        itemsCatalogue.InventoryCategoryID = inventoryCategoryID
        itemsCatalogue.Expires = expires
        itemsCatalogue.Active = active
        itemsCatalogue.TherapeuticClassID = therapeuticClassID
        itemsCatalogue.PrescriptionStatusID = prescriptionStatusID
        itemsCatalogue.LevelOfUseID = levelOfUseID
        itemsCatalogue.RouteofAdministrationID = routeofAdministrationID
        Return itemsCatalogue
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryCategoryID() As Global.System.Int32
        Get
            Return _InventoryCategoryID
        End Get
        Set
            OnInventoryCategoryIDChanging(value)
            ReportPropertyChanging("InventoryCategoryID")
            _InventoryCategoryID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryCategoryID")
            OnInventoryCategoryIDChanged()
        End Set
    End Property

    Private _InventoryCategoryID As Global.System.Int32
    Private Partial Sub OnInventoryCategoryIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryCategoryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Expires() As Global.System.Boolean
        Get
            Return _Expires
        End Get
        Set
            OnExpiresChanging(value)
            ReportPropertyChanging("Expires")
            _Expires = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Expires")
            OnExpiresChanged()
        End Set
    End Property

    Private _Expires As Global.System.Boolean
    Private Partial Sub OnExpiresChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnExpiresChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TherapeuticClassID() As Global.System.Int32
        Get
            Return _TherapeuticClassID
        End Get
        Set
            OnTherapeuticClassIDChanging(value)
            ReportPropertyChanging("TherapeuticClassID")
            _TherapeuticClassID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TherapeuticClassID")
            OnTherapeuticClassIDChanged()
        End Set
    End Property

    Private _TherapeuticClassID As Global.System.Int32
    Private Partial Sub OnTherapeuticClassIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnTherapeuticClassIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PrescriptionStatusID() As Global.System.Int32
        Get
            Return _PrescriptionStatusID
        End Get
        Set
            OnPrescriptionStatusIDChanging(value)
            ReportPropertyChanging("PrescriptionStatusID")
            _PrescriptionStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PrescriptionStatusID")
            OnPrescriptionStatusIDChanged()
        End Set
    End Property

    Private _PrescriptionStatusID As Global.System.Int32
    Private Partial Sub OnPrescriptionStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPrescriptionStatusIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property LevelOfUseID() As Global.System.Int32
        Get
            Return _LevelOfUseID
        End Get
        Set
            OnLevelOfUseIDChanging(value)
            ReportPropertyChanging("LevelOfUseID")
            _LevelOfUseID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("LevelOfUseID")
            OnLevelOfUseIDChanged()
        End Set
    End Property

    Private _LevelOfUseID As Global.System.Int32
    Private Partial Sub OnLevelOfUseIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnLevelOfUseIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RouteofAdministrationID() As Global.System.Int32
        Get
            Return _RouteofAdministrationID
        End Get
        Set
            OnRouteofAdministrationIDChanging(value)
            ReportPropertyChanging("RouteofAdministrationID")
            _RouteofAdministrationID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RouteofAdministrationID")
            OnRouteofAdministrationIDChanged()
        End Set
    End Property

    Private _RouteofAdministrationID As Global.System.Int32
    Private Partial Sub OnRouteofAdministrationIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnRouteofAdministrationIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_InventoryCategories", "InventoryCategories")>
    Public Property InventoryCategory() As InventoryCategory
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryCategory)("LMISModel.FK_ItemsCatalogue_InventoryCategories", "InventoryCategories").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryCategory)("LMISModel.FK_ItemsCatalogue_InventoryCategories", "InventoryCategories").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryCategoryReference() As EntityReference(Of InventoryCategory)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryCategory)("LMISModel.FK_ItemsCatalogue_InventoryCategories", "InventoryCategories")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryCategory)("LMISModel.FK_ItemsCatalogue_InventoryCategories", "InventoryCategories", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryItems_ItemsCatalogue1", "InventoryItems")>
     Public Property InventoryItems() As EntityCollection(Of InventoryItem)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryItem)("LMISModel.FK_InventoryItems_ItemsCatalogue1", "InventoryItems")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryItem)("LMISModel.FK_InventoryItems_ItemsCatalogue1", "InventoryItems", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_LevelOfUse", "LevelOfUse")>
    Public Property LevelOfUse() As LevelOfUse
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LevelOfUse)("LMISModel.FK_ItemsCatalogue_LevelOfUse", "LevelOfUse").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LevelOfUse)("LMISModel.FK_ItemsCatalogue_LevelOfUse", "LevelOfUse").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property LevelOfUseReference() As EntityReference(Of LevelOfUse)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of LevelOfUse)("LMISModel.FK_ItemsCatalogue_LevelOfUse", "LevelOfUse")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of LevelOfUse)("LMISModel.FK_ItemsCatalogue_LevelOfUse", "LevelOfUse", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_PrescriptionStatus", "PrescriptionStatus")>
    Public Property PrescriptionStatu() As PrescriptionStatu
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PrescriptionStatu)("LMISModel.FK_ItemsCatalogue_PrescriptionStatus", "PrescriptionStatus").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PrescriptionStatu)("LMISModel.FK_ItemsCatalogue_PrescriptionStatus", "PrescriptionStatus").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PrescriptionStatuReference() As EntityReference(Of PrescriptionStatu)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PrescriptionStatu)("LMISModel.FK_ItemsCatalogue_PrescriptionStatus", "PrescriptionStatus")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PrescriptionStatu)("LMISModel.FK_ItemsCatalogue_PrescriptionStatus", "PrescriptionStatus", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_RouteOfAdministration", "RouteOfAdministration")>
    Public Property RouteOfAdministration() As RouteOfAdministration
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RouteOfAdministration)("LMISModel.FK_ItemsCatalogue_RouteOfAdministration", "RouteOfAdministration").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RouteOfAdministration)("LMISModel.FK_ItemsCatalogue_RouteOfAdministration", "RouteOfAdministration").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RouteOfAdministrationReference() As EntityReference(Of RouteOfAdministration)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RouteOfAdministration)("LMISModel.FK_ItemsCatalogue_RouteOfAdministration", "RouteOfAdministration")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of RouteOfAdministration)("LMISModel.FK_ItemsCatalogue_RouteOfAdministration", "RouteOfAdministration", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_TherapeuticClass", "TherapeuticClass")>
    Public Property TherapeuticClass() As TherapeuticClass
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TherapeuticClass)("LMISModel.FK_ItemsCatalogue_TherapeuticClass", "TherapeuticClass").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TherapeuticClass)("LMISModel.FK_ItemsCatalogue_TherapeuticClass", "TherapeuticClass").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TherapeuticClassReference() As EntityReference(Of TherapeuticClass)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TherapeuticClass)("LMISModel.FK_ItemsCatalogue_TherapeuticClass", "TherapeuticClass")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of TherapeuticClass)("LMISModel.FK_ItemsCatalogue_TherapeuticClass", "TherapeuticClass", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_StorageRequirements_ItemsCatalogue", "StorageRequirements")>
     Public Property StorageRequirements() As EntityCollection(Of StorageRequirement)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of StorageRequirement)("LMISModel.FK_StorageRequirements_ItemsCatalogue", "StorageRequirements")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of StorageRequirement)("LMISModel.FK_StorageRequirements_ItemsCatalogue", "StorageRequirements", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="LevelOfUse")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class LevelOfUse
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new LevelOfUse object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="description">Initial value of the Description property.</param>
    Public Shared Function CreateLevelOfUse(id As Global.System.Int32, description As Global.System.Int32) As LevelOfUse
        Dim levelOfUse as LevelOfUse = New LevelOfUse
        levelOfUse.ID = id
        levelOfUse.Description = description
        Return levelOfUse
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Description() As Global.System.Int32
        Get
            Return _Description
        End Get
        Set
            OnDescriptionChanging(value)
            ReportPropertyChanging("Description")
            _Description = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Description")
            OnDescriptionChanged()
        End Set
    End Property

    Private _Description As Global.System.Int32
    Private Partial Sub OnDescriptionChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDescriptionChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Departments_LevelOfUse", "Departments")>
     Public Property Departments() As EntityCollection(Of Department)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Department)("LMISModel.FK_Departments_LevelOfUse", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Department)("LMISModel.FK_Departments_LevelOfUse", "Departments", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_LevelOfUse", "ItemsCatalogue")>
     Public Property ItemsCatalogues() As EntityCollection(Of ItemsCatalogue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_LevelOfUse", "ItemsCatalogue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_LevelOfUse", "ItemsCatalogue", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Location")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Location
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Location object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    ''' <param name="storeID">Initial value of the StoreID property.</param>
    Public Shared Function CreateLocation(id As Global.System.String, name As Global.System.String, active As Global.System.Boolean, storeID As Global.System.String) As Location
        Dim location as Location = New Location
        location.ID = id
        location.Name = name
        location.Active = active
        location.StoreID = storeID
        Return location
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property StoreID() As Global.System.String
        Get
            Return _StoreID
        End Get
        Set
            OnStoreIDChanging(value)
            ReportPropertyChanging("StoreID")
            _StoreID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("StoreID")
            OnStoreIDChanged()
        End Set
    End Property

    Private _StoreID As Global.System.String
    Private Partial Sub OnStoreIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStoreIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryJournalDetailsBatches_Locations", "InventoryJournalDetailsBatches")>
     Public Property InventoryJournalDetailsBatches() As EntityCollection(Of InventoryJournalDetailsBatch)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryJournalDetailsBatch)("LMISModel.FK_InventoryJournalDetailsBatches_Locations", "InventoryJournalDetailsBatches")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryJournalDetailsBatch)("LMISModel.FK_InventoryJournalDetailsBatches_Locations", "InventoryJournalDetailsBatches", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Locations_Store", "Store")>
    Public Property Store() As Store
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Store)("LMISModel.FK_Locations_Store", "Store").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Store)("LMISModel.FK_Locations_Store", "Store").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property StoreReference() As EntityReference(Of Store)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Store)("LMISModel.FK_Locations_Store", "Store")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Store)("LMISModel.FK_Locations_Store", "Store", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_Locations1", "Transfer")>
     Public Property Transfers() As EntityCollection(Of Transfer)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Transfer)("LMISModel.FK_Transfers_Locations1", "Transfer")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Transfer)("LMISModel.FK_Transfers_Locations1", "Transfer", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Manufacturer")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Manufacturer
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Manufacturer object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateManufacturer(id As Global.System.Int32, name As Global.System.String, active As Global.System.Boolean) As Manufacturer
        Dim manufacturer as Manufacturer = New Manufacturer
        manufacturer.ID = id
        manufacturer.Name = name
        manufacturer.Active = active
        Return manufacturer
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="MedicalStore")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class MedicalStore
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new MedicalStore object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateMedicalStore(id As Global.System.Int32, name As Global.System.String, active As Global.System.Boolean) As MedicalStore
        Dim medicalStore as MedicalStore = New MedicalStore
        medicalStore.ID = id
        medicalStore.Name = name
        medicalStore.Active = active
        Return medicalStore
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Facility_MedicalStore", "Facility")>
     Public Property Facilities() As EntityCollection(Of Facility)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Facility)("LMISModel.FK_Facility_MedicalStore", "Facility")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Facility)("LMISModel.FK_Facility_MedicalStore", "Facility", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="OPDIssue")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class OPDIssue
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new OPDIssue object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="invetoryJournalID">Initial value of the InvetoryJournalID property.</param>
    ''' <param name="oPDRequisitionID">Initial value of the OPDRequisitionID property.</param>
    Public Shared Function CreateOPDIssue(id As Global.System.String, invetoryJournalID As Global.System.String, oPDRequisitionID As Global.System.String) As OPDIssue
        Dim oPDIssue as OPDIssue = New OPDIssue
        oPDIssue.ID = id
        oPDIssue.InvetoryJournalID = invetoryJournalID
        oPDIssue.OPDRequisitionID = oPDRequisitionID
        Return oPDIssue
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InvetoryJournalID() As Global.System.String
        Get
            Return _InvetoryJournalID
        End Get
        Set
            OnInvetoryJournalIDChanging(value)
            ReportPropertyChanging("InvetoryJournalID")
            _InvetoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InvetoryJournalID")
            OnInvetoryJournalIDChanged()
        End Set
    End Property

    Private _InvetoryJournalID As Global.System.String
    Private Partial Sub OnInvetoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInvetoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OPDRequisitionID() As Global.System.String
        Get
            Return _OPDRequisitionID
        End Get
        Set
            OnOPDRequisitionIDChanging(value)
            ReportPropertyChanging("OPDRequisitionID")
            _OPDRequisitionID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("OPDRequisitionID")
            OnOPDRequisitionIDChanged()
        End Set
    End Property

    Private _OPDRequisitionID As Global.System.String
    Private Partial Sub OnOPDRequisitionIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnOPDRequisitionIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDIssue_InventoryJournals", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_OPDIssue_InventoryJournals", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_OPDIssue_InventoryJournals", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_OPDIssue_InventoryJournals", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_OPDIssue_InventoryJournals", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDIssue_OPDRequisition", "OPDRequisition")>
    Public Property OPDRequisition() As OPDRequisition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_OPDIssue_OPDRequisition", "OPDRequisition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_OPDIssue_OPDRequisition", "OPDRequisition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property OPDRequisitionReference() As EntityReference(Of OPDRequisition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_OPDIssue_OPDRequisition", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of OPDRequisition)("LMISModel.FK_OPDIssue_OPDRequisition", "OPDRequisition", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="OPDRequisition")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class OPDRequisition
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new OPDRequisition object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="paymentTypeID">Initial value of the PaymentTypeID property.</param>
    ''' <param name="personID">Initial value of the PersonID property.</param>
    ''' <param name="prescribedBy">Initial value of the PrescribedBy property.</param>
    ''' <param name="dispensedBy">Initial value of the DispensedBy property.</param>
    ''' <param name="cardNo">Initial value of the CardNo property.</param>
    Public Shared Function CreateOPDRequisition(id As Global.System.String, paymentTypeID As Global.System.Int32, personID As Global.System.String, prescribedBy As Global.System.String, dispensedBy As Global.System.String, cardNo As Global.System.String) As OPDRequisition
        Dim oPDRequisition as OPDRequisition = New OPDRequisition
        oPDRequisition.ID = id
        oPDRequisition.PaymentTypeID = paymentTypeID
        oPDRequisition.PersonID = personID
        oPDRequisition.PrescribedBy = prescribedBy
        oPDRequisition.DispensedBy = dispensedBy
        oPDRequisition.CardNo = cardNo
        Return oPDRequisition
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property InvetoryJournalID() As Global.System.String
        Get
            Return _InvetoryJournalID
        End Get
        Set
            OnInvetoryJournalIDChanging(value)
            ReportPropertyChanging("InvetoryJournalID")
            _InvetoryJournalID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("InvetoryJournalID")
            OnInvetoryJournalIDChanged()
        End Set
    End Property

    Private _InvetoryJournalID As Global.System.String
    Private Partial Sub OnInvetoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInvetoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PaymentTypeID() As Global.System.Int32
        Get
            Return _PaymentTypeID
        End Get
        Set
            OnPaymentTypeIDChanging(value)
            ReportPropertyChanging("PaymentTypeID")
            _PaymentTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentTypeID")
            OnPaymentTypeIDChanged()
        End Set
    End Property

    Private _PaymentTypeID As Global.System.Int32
    Private Partial Sub OnPaymentTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPaymentTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PersonID() As Global.System.String
        Get
            Return _PersonID
        End Get
        Set
            OnPersonIDChanging(value)
            ReportPropertyChanging("PersonID")
            _PersonID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PersonID")
            OnPersonIDChanged()
        End Set
    End Property

    Private _PersonID As Global.System.String
    Private Partial Sub OnPersonIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPersonIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PrescribedBy() As Global.System.String
        Get
            Return _PrescribedBy
        End Get
        Set
            OnPrescribedByChanging(value)
            ReportPropertyChanging("PrescribedBy")
            _PrescribedBy = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PrescribedBy")
            OnPrescribedByChanged()
        End Set
    End Property

    Private _PrescribedBy As Global.System.String
    Private Partial Sub OnPrescribedByChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPrescribedByChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DispensedBy() As Global.System.String
        Get
            Return _DispensedBy
        End Get
        Set
            OnDispensedByChanging(value)
            ReportPropertyChanging("DispensedBy")
            _DispensedBy = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DispensedBy")
            OnDispensedByChanged()
        End Set
    End Property

    Private _DispensedBy As Global.System.String
    Private Partial Sub OnDispensedByChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDispensedByChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CardNo() As Global.System.String
        Get
            Return _CardNo
        End Get
        Set
            OnCardNoChanging(value)
            ReportPropertyChanging("CardNo")
            _CardNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("CardNo")
            OnCardNoChanged()
        End Set
    End Property

    Private _CardNo As Global.System.String
    Private Partial Sub OnCardNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnCardNoChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDRequisition_Employees", "Employees")>
    Public Property Employee() As Employee
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees", "Employees").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees", "Employees").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property EmployeeReference() As EntityReference(Of Employee)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees", "Employees")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees", "Employees", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDRequisition_Employees1", "Employees")>
    Public Property Employee1() As Employee
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees1", "Employees").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees1", "Employees").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property Employee1Reference() As EntityReference(Of Employee)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees1", "Employees")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("LMISModel.FK_OPDRequisition_Employees1", "Employees", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPD_InventoryJournals", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_OPD_InventoryJournals", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_OPD_InventoryJournals", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_OPD_InventoryJournals", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_OPD_InventoryJournals", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDIssue_OPDRequisition", "OPDIssue")>
     Public Property OPDIssues() As EntityCollection(Of OPDIssue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OPDIssue)("LMISModel.FK_OPDIssue_OPDRequisition", "OPDIssue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OPDIssue)("LMISModel.FK_OPDIssue_OPDRequisition", "OPDIssue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPD_PaymentType", "PaymentType")>
    Public Property PaymentType() As PaymentType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_OPD_PaymentType", "PaymentType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_OPD_PaymentType", "PaymentType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PaymentTypeReference() As EntityReference(Of PaymentType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_OPD_PaymentType", "PaymentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PaymentType)("LMISModel.FK_OPD_PaymentType", "PaymentType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDRequisition_Person", "Person")>
    Public Property Person() As Person
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_OPDRequisition_Person", "Person").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_OPDRequisition_Person", "Person").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonReference() As EntityReference(Of Person)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_OPDRequisition_Person", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Person)("LMISModel.FK_OPDRequisition_Person", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminOPD_OPDRequisition", "PaymentAdminOPD")>
     Public Property PaymentAdminOPDs() As EntityCollection(Of PaymentAdminOPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of PaymentAdminOPD)("LMISModel.FK_PaymentAdminOPD_OPDRequisition", "PaymentAdminOPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PaymentAdminOPD)("LMISModel.FK_PaymentAdminOPD_OPDRequisition", "PaymentAdminOPD", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportOPD_OPDRequisition", "SickReportOPD")>
     Public Property SickReportOPDs() As EntityCollection(Of SickReportOPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of SickReportOPD)("LMISModel.FK_SickReportOPD_OPDRequisition", "SickReportOPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SickReportOPD)("LMISModel.FK_SickReportOPD_OPDRequisition", "SickReportOPD", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="OrderandAdminister")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class OrderandAdminister
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new OrderandAdminister object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalDetailID">Initial value of the InventoryJournalDetailID property.</param>
    ''' <param name="orderedBy">Initial value of the OrderedBy property.</param>
    ''' <param name="administereBy">Initial value of the AdministereBy property.</param>
    Public Shared Function CreateOrderandAdminister(id As Global.System.String, inventoryJournalDetailID As Global.System.Int32, orderedBy As Global.System.String, administereBy As Global.System.String) As OrderandAdminister
        Dim orderandAdminister as OrderandAdminister = New OrderandAdminister
        orderandAdminister.ID = id
        orderandAdminister.InventoryJournalDetailID = inventoryJournalDetailID
        orderandAdminister.OrderedBy = orderedBy
        orderandAdminister.AdministereBy = administereBy
        Return orderandAdminister
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailID() As Global.System.Int32
        Get
            Return _InventoryJournalDetailID
        End Get
        Set
            OnInventoryJournalDetailIDChanging(value)
            ReportPropertyChanging("InventoryJournalDetailID")
            _InventoryJournalDetailID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournalDetailID")
            OnInventoryJournalDetailIDChanged()
        End Set
    End Property

    Private _InventoryJournalDetailID As Global.System.Int32
    Private Partial Sub OnInventoryJournalDetailIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryJournalDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OrderedBy() As Global.System.String
        Get
            Return _OrderedBy
        End Get
        Set
            OnOrderedByChanging(value)
            ReportPropertyChanging("OrderedBy")
            _OrderedBy = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("OrderedBy")
            OnOrderedByChanged()
        End Set
    End Property

    Private _OrderedBy As Global.System.String
    Private Partial Sub OnOrderedByChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnOrderedByChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AdministereBy() As Global.System.String
        Get
            Return _AdministereBy
        End Get
        Set
            OnAdministereByChanging(value)
            ReportPropertyChanging("AdministereBy")
            _AdministereBy = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("AdministereBy")
            OnAdministereByChanged()
        End Set
    End Property

    Private _AdministereBy As Global.System.String
    Private Partial Sub OnAdministereByChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnAdministereByChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property [Date]() As Nullable(Of Global.System.DateTime)
        Get
            Return _Date
        End Get
        Set
            OnDateChanging(value)
            ReportPropertyChanging("Date")
            _Date = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Date")
            OnDateChanged()
        End Set
    End Property

    Private _Date As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnDateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnDateChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OrderandAdminister_Employees", "Employee")>
    Public Property Employee() As Employee
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees", "Employee").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees", "Employee").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property EmployeeReference() As EntityReference(Of Employee)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees", "Employee")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees", "Employee", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OrderandAdminister_Employees1", "Employee")>
    Public Property Employee1() As Employee
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees1", "Employee").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees1", "Employee").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property Employee1Reference() As EntityReference(Of Employee)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees1", "Employee")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Employee)("LMISModel.FK_OrderandAdminister_Employees1", "Employee", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OrderandAdminister_InventoryJournalDetails", "InventoryJournalDetail")>
    Public Property InventoryJournalDetail() As InventoryJournalDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_OrderandAdminister_InventoryJournalDetails", "InventoryJournalDetail").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_OrderandAdminister_InventoryJournalDetails", "InventoryJournalDetail").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailReference() As EntityReference(Of InventoryJournalDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_OrderandAdminister_InventoryJournalDetails", "InventoryJournalDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_OrderandAdminister_InventoryJournalDetails", "InventoryJournalDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Patient")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Patient
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Patient object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="personID">Initial value of the PersonID property.</param>
    ''' <param name="invoiceID">Initial value of the InvoiceID property.</param>
    ''' <param name="cardNo">Initial value of the CardNo property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreatePatient(id As Global.System.String, personID As Global.System.String, invoiceID As Global.System.Int32, cardNo As Global.System.String, active As Global.System.Boolean) As Patient
        Dim patient as Patient = New Patient
        patient.ID = id
        patient.PersonID = personID
        patient.InvoiceID = invoiceID
        patient.CardNo = cardNo
        patient.Active = active
        Return patient
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PersonID() As Global.System.String
        Get
            Return _PersonID
        End Get
        Set
            OnPersonIDChanging(value)
            ReportPropertyChanging("PersonID")
            _PersonID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PersonID")
            OnPersonIDChanged()
        End Set
    End Property

    Private _PersonID As Global.System.String
    Private Partial Sub OnPersonIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPersonIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InvoiceID() As Global.System.Int32
        Get
            Return _InvoiceID
        End Get
        Set
            OnInvoiceIDChanging(value)
            ReportPropertyChanging("InvoiceID")
            _InvoiceID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InvoiceID")
            OnInvoiceIDChanged()
        End Set
    End Property

    Private _InvoiceID As Global.System.Int32
    Private Partial Sub OnInvoiceIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInvoiceIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CardNo() As Global.System.String
        Get
            Return _CardNo
        End Get
        Set
            OnCardNoChanging(value)
            ReportPropertyChanging("CardNo")
            _CardNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("CardNo")
            OnCardNoChanged()
        End Set
    End Property

    Private _CardNo As Global.System.String
    Private Partial Sub OnCardNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnCardNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ClinicalCardNo() As Global.System.String
        Get
            Return _ClinicalCardNo
        End Get
        Set
            OnClinicalCardNoChanging(value)
            ReportPropertyChanging("ClinicalCardNo")
            _ClinicalCardNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("ClinicalCardNo")
            OnClinicalCardNoChanged()
        End Set
    End Property

    Private _ClinicalCardNo As Global.System.String
    Private Partial Sub OnClinicalCardNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnClinicalCardNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property AllergiesOrInteraction() As Global.System.String
        Get
            Return _AllergiesOrInteraction
        End Get
        Set
            OnAllergiesOrInteractionChanging(value)
            ReportPropertyChanging("AllergiesOrInteraction")
            _AllergiesOrInteraction = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("AllergiesOrInteraction")
            OnAllergiesOrInteractionChanged()
        End Set
    End Property

    Private _AllergiesOrInteraction As Global.System.String
    Private Partial Sub OnAllergiesOrInteractionChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnAllergiesOrInteractionChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPD_Patient", "IPDRequisition")>
     Public Property IPDRequisitions() As EntityCollection(Of IPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPD_Patient", "IPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPD_Patient", "IPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Person_Patient", "Person")>
    Public Property Person() As Person
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Person_Patient", "Person").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Person_Patient", "Person").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonReference() As EntityReference(Of Person)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Person_Patient", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Person)("LMISModel.FK_Person_Patient", "Person", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Payment")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Payment
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Payment object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
    ''' <param name="paymentDate">Initial value of the PaymentDate property.</param>
    ''' <param name="paymentTermID">Initial value of the PaymentTermID property.</param>
    ''' <param name="paymentTypeID">Initial value of the PaymentTypeID property.</param>
    ''' <param name="amount">Initial value of the Amount property.</param>
    ''' <param name="bankCharge">Initial value of the BankCharge property.</param>
    Public Shared Function CreatePayment(id As Global.System.Int32, purchaseOrderID As Global.System.Int32, paymentDate As Global.System.DateTime, paymentTermID As Global.System.Int32, paymentTypeID As Global.System.Int32, amount As Global.System.Decimal, bankCharge As Global.System.Decimal) As Payment
        Dim payment as Payment = New Payment
        payment.ID = id
        payment.PurchaseOrderID = purchaseOrderID
        payment.PaymentDate = paymentDate
        payment.PaymentTermID = paymentTermID
        payment.PaymentTypeID = paymentTypeID
        payment.Amount = amount
        payment.BankCharge = bankCharge
        Return payment
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PurchaseOrderID() As Global.System.Int32
        Get
            Return _PurchaseOrderID
        End Get
        Set
            OnPurchaseOrderIDChanging(value)
            ReportPropertyChanging("PurchaseOrderID")
            _PurchaseOrderID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PurchaseOrderID")
            OnPurchaseOrderIDChanged()
        End Set
    End Property

    Private _PurchaseOrderID As Global.System.Int32
    Private Partial Sub OnPurchaseOrderIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPurchaseOrderIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PaymentDate() As Global.System.DateTime
        Get
            Return _PaymentDate
        End Get
        Set
            OnPaymentDateChanging(value)
            ReportPropertyChanging("PaymentDate")
            _PaymentDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentDate")
            OnPaymentDateChanged()
        End Set
    End Property

    Private _PaymentDate As Global.System.DateTime
    Private Partial Sub OnPaymentDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnPaymentDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PaymentTermID() As Global.System.Int32
        Get
            Return _PaymentTermID
        End Get
        Set
            OnPaymentTermIDChanging(value)
            ReportPropertyChanging("PaymentTermID")
            _PaymentTermID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentTermID")
            OnPaymentTermIDChanged()
        End Set
    End Property

    Private _PaymentTermID As Global.System.Int32
    Private Partial Sub OnPaymentTermIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPaymentTermIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PaymentTypeID() As Global.System.Int32
        Get
            Return _PaymentTypeID
        End Get
        Set
            OnPaymentTypeIDChanging(value)
            ReportPropertyChanging("PaymentTypeID")
            _PaymentTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentTypeID")
            OnPaymentTypeIDChanged()
        End Set
    End Property

    Private _PaymentTypeID As Global.System.Int32
    Private Partial Sub OnPaymentTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPaymentTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ReceiptNo() As Global.System.String
        Get
            Return _ReceiptNo
        End Get
        Set
            OnReceiptNoChanging(value)
            ReportPropertyChanging("ReceiptNo")
            _ReceiptNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("ReceiptNo")
            OnReceiptNoChanged()
        End Set
    End Property

    Private _ReceiptNo As Global.System.String
    Private Partial Sub OnReceiptNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnReceiptNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Amount() As Global.System.Decimal
        Get
            Return _Amount
        End Get
        Set
            OnAmountChanging(value)
            ReportPropertyChanging("Amount")
            _Amount = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Amount")
            OnAmountChanged()
        End Set
    End Property

    Private _Amount As Global.System.Decimal
    Private Partial Sub OnAmountChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnAmountChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property BankCharge() As Global.System.Decimal
        Get
            Return _BankCharge
        End Get
        Set
            OnBankChargeChanging(value)
            ReportPropertyChanging("BankCharge")
            _BankCharge = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("BankCharge")
            OnBankChargeChanged()
        End Set
    End Property

    Private _BankCharge As Global.System.Decimal
    Private Partial Sub OnBankChargeChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnBankChargeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property BankRef() As Global.System.String
        Get
            Return _BankRef
        End Get
        Set
            OnBankRefChanging(value)
            ReportPropertyChanging("BankRef")
            _BankRef = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("BankRef")
            OnBankRefChanged()
        End Set
    End Property

    Private _BankRef As Global.System.String
    Private Partial Sub OnBankRefChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBankRefChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Remark() As Global.System.String
        Get
            Return _Remark
        End Get
        Set
            OnRemarkChanging(value)
            ReportPropertyChanging("Remark")
            _Remark = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Remark")
            OnRemarkChanged()
        End Set
    End Property

    Private _Remark As Global.System.String
    Private Partial Sub OnRemarkChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRemarkChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Payment_PaymentTerm", "PaymentTerm")>
    Public Property PaymentTerm() As PaymentTerm
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentTerm)("LMISModel.FK_Payment_PaymentTerm", "PaymentTerm").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentTerm)("LMISModel.FK_Payment_PaymentTerm", "PaymentTerm").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PaymentTermReference() As EntityReference(Of PaymentTerm)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentTerm)("LMISModel.FK_Payment_PaymentTerm", "PaymentTerm")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PaymentTerm)("LMISModel.FK_Payment_PaymentTerm", "PaymentTerm", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Payment_PaymentType", "PaymentType")>
    Public Property PaymentType() As PaymentType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_Payment_PaymentType", "PaymentType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_Payment_PaymentType", "PaymentType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PaymentTypeReference() As EntityReference(Of PaymentType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_Payment_PaymentType", "PaymentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PaymentType)("LMISModel.FK_Payment_PaymentType", "PaymentType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Payment_PurchaseOrder", "PurchaseOrder")>
    Public Property PurchaseOrder() As PurchaseOrder
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PurchaseOrder)("LMISModel.FK_Payment_PurchaseOrder", "PurchaseOrder").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PurchaseOrder)("LMISModel.FK_Payment_PurchaseOrder", "PurchaseOrder").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PurchaseOrderReference() As EntityReference(Of PurchaseOrder)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PurchaseOrder)("LMISModel.FK_Payment_PurchaseOrder", "PurchaseOrder")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PurchaseOrder)("LMISModel.FK_Payment_PurchaseOrder", "PurchaseOrder", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PaymentAdminIPD")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PaymentAdminIPD
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PaymentAdminIPD object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="zoneID">Initial value of the ZoneID property.</param>
    ''' <param name="iPDRequisitionID">Initial value of the IPDRequisitionID property.</param>
    Public Shared Function CreatePaymentAdminIPD(id As Global.System.String, zoneID As Global.System.Int32, iPDRequisitionID As Global.System.String) As PaymentAdminIPD
        Dim paymentAdminIPD as PaymentAdminIPD = New PaymentAdminIPD
        paymentAdminIPD.ID = id
        paymentAdminIPD.ZoneID = zoneID
        paymentAdminIPD.IPDRequisitionID = iPDRequisitionID
        Return paymentAdminIPD
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ZoneID() As Global.System.Int32
        Get
            Return _ZoneID
        End Get
        Set
            OnZoneIDChanging(value)
            ReportPropertyChanging("ZoneID")
            _ZoneID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ZoneID")
            OnZoneIDChanged()
        End Set
    End Property

    Private _ZoneID As Global.System.Int32
    Private Partial Sub OnZoneIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnZoneIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IPDRequisitionID() As Global.System.String
        Get
            Return _IPDRequisitionID
        End Get
        Set
            OnIPDRequisitionIDChanging(value)
            ReportPropertyChanging("IPDRequisitionID")
            _IPDRequisitionID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("IPDRequisitionID")
            OnIPDRequisitionIDChanged()
        End Set
    End Property

    Private _IPDRequisitionID As Global.System.String
    Private Partial Sub OnIPDRequisitionIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIPDRequisitionIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminIPD_IPDRequisition", "IPDRequisition")>
    Public Property IPDRequisition() As IPDRequisition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_PaymentAdminIPD_IPDRequisition", "IPDRequisition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_PaymentAdminIPD_IPDRequisition", "IPDRequisition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property IPDRequisitionReference() As EntityReference(Of IPDRequisition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_PaymentAdminIPD_IPDRequisition", "IPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of IPDRequisition)("LMISModel.FK_PaymentAdminIPD_IPDRequisition", "IPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminIPD_Zone", "Zone")>
    Public Property Zone() As Zone
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminIPD_Zone", "Zone").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminIPD_Zone", "Zone").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ZoneReference() As EntityReference(Of Zone)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminIPD_Zone", "Zone")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminIPD_Zone", "Zone", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PaymentAdminOPD")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PaymentAdminOPD
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PaymentAdminOPD object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="zoneID">Initial value of the ZoneID property.</param>
    ''' <param name="oPDRequisitionID">Initial value of the OPDRequisitionID property.</param>
    Public Shared Function CreatePaymentAdminOPD(id As Global.System.String, zoneID As Global.System.Int32, oPDRequisitionID As Global.System.String) As PaymentAdminOPD
        Dim paymentAdminOPD as PaymentAdminOPD = New PaymentAdminOPD
        paymentAdminOPD.ID = id
        paymentAdminOPD.ZoneID = zoneID
        paymentAdminOPD.OPDRequisitionID = oPDRequisitionID
        Return paymentAdminOPD
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ZoneID() As Global.System.Int32
        Get
            Return _ZoneID
        End Get
        Set
            OnZoneIDChanging(value)
            ReportPropertyChanging("ZoneID")
            _ZoneID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ZoneID")
            OnZoneIDChanged()
        End Set
    End Property

    Private _ZoneID As Global.System.Int32
    Private Partial Sub OnZoneIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnZoneIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OPDRequisitionID() As Global.System.String
        Get
            Return _OPDRequisitionID
        End Get
        Set
            OnOPDRequisitionIDChanging(value)
            ReportPropertyChanging("OPDRequisitionID")
            _OPDRequisitionID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("OPDRequisitionID")
            OnOPDRequisitionIDChanged()
        End Set
    End Property

    Private _OPDRequisitionID As Global.System.String
    Private Partial Sub OnOPDRequisitionIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnOPDRequisitionIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminOPD_OPDRequisition", "OPDRequisition")>
    Public Property OPDRequisition() As OPDRequisition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_PaymentAdminOPD_OPDRequisition", "OPDRequisition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_PaymentAdminOPD_OPDRequisition", "OPDRequisition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property OPDRequisitionReference() As EntityReference(Of OPDRequisition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_PaymentAdminOPD_OPDRequisition", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of OPDRequisition)("LMISModel.FK_PaymentAdminOPD_OPDRequisition", "OPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminOPD_Zone", "Zone")>
    Public Property Zone() As Zone
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminOPD_Zone", "Zone").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminOPD_Zone", "Zone").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ZoneReference() As EntityReference(Of Zone)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminOPD_Zone", "Zone")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Zone)("LMISModel.FK_PaymentAdminOPD_Zone", "Zone", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PaymentTerm")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PaymentTerm
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PaymentTerm object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    Public Shared Function CreatePaymentTerm(id As Global.System.Int32, type As Global.System.String) As PaymentTerm
        Dim paymentTerm as PaymentTerm = New PaymentTerm
        paymentTerm.ID = id
        paymentTerm.Type = type
        Return paymentTerm
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Payment_PaymentTerm", "Payment")>
     Public Property Payments() As EntityCollection(Of Payment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Payment)("LMISModel.FK_Payment_PaymentTerm", "Payment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Payment)("LMISModel.FK_Payment_PaymentTerm", "Payment", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Quotation_PaymentTerm", "Quotation")>
     Public Property Quotations() As EntityCollection(Of Quotation)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Quotation)("LMISModel.FK_Quotation_PaymentTerm", "Quotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Quotation)("LMISModel.FK_Quotation_PaymentTerm", "Quotation", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PaymentType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PaymentType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PaymentType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    ''' <param name="inventoryJournalTypeID">Initial value of the InventoryJournalTypeID property.</param>
    Public Shared Function CreatePaymentType(id As Global.System.Int32, type As Global.System.String, inventoryJournalTypeID As Global.System.Int32) As PaymentType
        Dim paymentType as PaymentType = New PaymentType
        paymentType.ID = id
        paymentType.Type = type
        paymentType.InventoryJournalTypeID = inventoryJournalTypeID
        Return paymentType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalTypeID() As Global.System.Int32
        Get
            Return _InventoryJournalTypeID
        End Get
        Set
            OnInventoryJournalTypeIDChanging(value)
            ReportPropertyChanging("InventoryJournalTypeID")
            _InventoryJournalTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournalTypeID")
            OnInventoryJournalTypeIDChanged()
        End Set
    End Property

    Private _InventoryJournalTypeID As Global.System.Int32
    Private Partial Sub OnInventoryJournalTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInventoryJournalTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property BankAccNo() As Global.System.String
        Get
            Return _BankAccNo
        End Get
        Set
            OnBankAccNoChanging(value)
            ReportPropertyChanging("BankAccNo")
            _BankAccNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("BankAccNo")
            OnBankAccNoChanged()
        End Set
    End Property

    Private _BankAccNo As Global.System.String
    Private Partial Sub OnBankAccNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBankAccNoChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentType_InventoryJournalTypes", "InventoryJournalTypes")>
    Public Property InventoryJournalType() As InventoryJournalType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalType)("LMISModel.FK_PaymentType_InventoryJournalTypes", "InventoryJournalTypes").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalType)("LMISModel.FK_PaymentType_InventoryJournalTypes", "InventoryJournalTypes").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalTypeReference() As EntityReference(Of InventoryJournalType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalType)("LMISModel.FK_PaymentType_InventoryJournalTypes", "InventoryJournalTypes")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalType)("LMISModel.FK_PaymentType_InventoryJournalTypes", "InventoryJournalTypes", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_IPDRequisition_PaymentType", "IPDRequisition")>
     Public Property IPDRequisitions() As EntityCollection(Of IPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPDRequisition_PaymentType", "IPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of IPDRequisition)("LMISModel.FK_IPDRequisition_PaymentType", "IPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPD_PaymentType", "OPDRequisition")>
     Public Property OPDRequisitions() As EntityCollection(Of OPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPD_PaymentType", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPD_PaymentType", "OPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Payment_PaymentType", "Payment")>
     Public Property Payments() As EntityCollection(Of Payment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Payment)("LMISModel.FK_Payment_PaymentType", "Payment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Payment)("LMISModel.FK_Payment_PaymentType", "Payment", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Quotation_PaymentType", "Quotation")>
     Public Property Quotations() As EntityCollection(Of Quotation)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Quotation)("LMISModel.FK_Quotation_PaymentType", "Quotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Quotation)("LMISModel.FK_Quotation_PaymentType", "Quotation", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Person")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Person
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Person object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="iDNO">Initial value of the IDNO property.</param>
    ''' <param name="firstNameID">Initial value of the FirstNameID property.</param>
    ''' <param name="middleNameID">Initial value of the MiddleNameID property.</param>
    ''' <param name="dOB">Initial value of the DOB property.</param>
    ''' <param name="phoneNo">Initial value of the PhoneNo property.</param>
    ''' <param name="gender">Initial value of the Gender property.</param>
    ''' <param name="countryID">Initial value of the CountryID property.</param>
    ''' <param name="personStatusID">Initial value of the PersonStatusID property.</param>
    ''' <param name="emailAddress">Initial value of the EmailAddress property.</param>
    Public Shared Function CreatePerson(id As Global.System.String, iDNO As Global.System.String, firstNameID As Global.System.String, middleNameID As Global.System.String, dOB As Global.System.DateTime, phoneNo As Global.System.String, gender As Global.System.String, countryID As Global.System.Int32, personStatusID As Global.System.Int32, emailAddress As Global.System.String) As Person
        Dim person as Person = New Person
        person.ID = id
        person.IDNO = iDNO
        person.FirstNameID = firstNameID
        person.MiddleNameID = middleNameID
        person.DOB = dOB
        person.PhoneNo = phoneNo
        person.Gender = gender
        person.CountryID = countryID
        person.PersonStatusID = personStatusID
        person.EmailAddress = emailAddress
        Return person
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IDNO() As Global.System.String
        Get
            Return _IDNO
        End Get
        Set
            OnIDNOChanging(value)
            ReportPropertyChanging("IDNO")
            _IDNO = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("IDNO")
            OnIDNOChanged()
        End Set
    End Property

    Private _IDNO As Global.System.String
    Private Partial Sub OnIDNOChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDNOChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FirstNameID() As Global.System.String
        Get
            Return _FirstNameID
        End Get
        Set
            OnFirstNameIDChanging(value)
            ReportPropertyChanging("FirstNameID")
            _FirstNameID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("FirstNameID")
            OnFirstNameIDChanged()
        End Set
    End Property

    Private _FirstNameID As Global.System.String
    Private Partial Sub OnFirstNameIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFirstNameIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property MiddleNameID() As Global.System.String
        Get
            Return _MiddleNameID
        End Get
        Set
            OnMiddleNameIDChanging(value)
            ReportPropertyChanging("MiddleNameID")
            _MiddleNameID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("MiddleNameID")
            OnMiddleNameIDChanged()
        End Set
    End Property

    Private _MiddleNameID As Global.System.String
    Private Partial Sub OnMiddleNameIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnMiddleNameIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property LastNameID() As Global.System.String
        Get
            Return _LastNameID
        End Get
        Set
            OnLastNameIDChanging(value)
            ReportPropertyChanging("LastNameID")
            _LastNameID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("LastNameID")
            OnLastNameIDChanged()
        End Set
    End Property

    Private _LastNameID As Global.System.String
    Private Partial Sub OnLastNameIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnLastNameIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DOB() As Global.System.DateTime
        Get
            Return _DOB
        End Get
        Set
            OnDOBChanging(value)
            ReportPropertyChanging("DOB")
            _DOB = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DOB")
            OnDOBChanged()
        End Set
    End Property

    Private _DOB As Global.System.DateTime
    Private Partial Sub OnDOBChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnDOBChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PhoneNo() As Global.System.String
        Get
            Return _PhoneNo
        End Get
        Set
            OnPhoneNoChanging(value)
            ReportPropertyChanging("PhoneNo")
            _PhoneNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PhoneNo")
            OnPhoneNoChanged()
        End Set
    End Property

    Private _PhoneNo As Global.System.String
    Private Partial Sub OnPhoneNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPhoneNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Gender() As Global.System.String
        Get
            Return _Gender
        End Get
        Set
            OnGenderChanging(value)
            ReportPropertyChanging("Gender")
            _Gender = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Gender")
            OnGenderChanged()
        End Set
    End Property

    Private _Gender As Global.System.String
    Private Partial Sub OnGenderChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnGenderChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CountryID() As Global.System.Int32
        Get
            Return _CountryID
        End Get
        Set
            OnCountryIDChanging(value)
            ReportPropertyChanging("CountryID")
            _CountryID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CountryID")
            OnCountryIDChanged()
        End Set
    End Property

    Private _CountryID As Global.System.Int32
    Private Partial Sub OnCountryIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCountryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PersonStatusID() As Global.System.Int32
        Get
            Return _PersonStatusID
        End Get
        Set
            OnPersonStatusIDChanging(value)
            ReportPropertyChanging("PersonStatusID")
            _PersonStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PersonStatusID")
            OnPersonStatusIDChanged()
        End Set
    End Property

    Private _PersonStatusID As Global.System.Int32
    Private Partial Sub OnPersonStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPersonStatusIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property EmailAddress() As Global.System.String
        Get
            Return _EmailAddress
        End Get
        Set
            OnEmailAddressChanging(value)
            ReportPropertyChanging("EmailAddress")
            _EmailAddress = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("EmailAddress")
            OnEmailAddressChanged()
        End Set
    End Property

    Private _EmailAddress As Global.System.String
    Private Partial Sub OnEmailAddressChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnEmailAddressChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Person_Countries", "Countries")>
    Public Property Country() As Country
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Country)("LMISModel.FK_Person_Countries", "Countries").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Country)("LMISModel.FK_Person_Countries", "Countries").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CountryReference() As EntityReference(Of Country)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Country)("LMISModel.FK_Person_Countries", "Countries")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Country)("LMISModel.FK_Person_Countries", "Countries", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Customers_Person", "Customers")>
     Public Property Customers() As EntityCollection(Of Customer)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Customer)("LMISModel.FK_Customers_Person", "Customers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Customer)("LMISModel.FK_Customers_Person", "Customers", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Employees_People", "Employees")>
     Public Property Employees() As EntityCollection(Of Employee)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Employee)("LMISModel.FK_Employees_People", "Employees")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Employee)("LMISModel.FK_Employees_People", "Employees", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_OPDRequisition_Person", "OPDRequisition")>
     Public Property OPDRequisitions() As EntityCollection(Of OPDRequisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPDRequisition_Person", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of OPDRequisition)("LMISModel.FK_OPDRequisition_Person", "OPDRequisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Person_Patient", "Patient")>
     Public Property Patients() As EntityCollection(Of Patient)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Patient)("LMISModel.FK_Person_Patient", "Patient")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Patient)("LMISModel.FK_Person_Patient", "Patient", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_People_PersonNames", "PersonNames")>
    Public Property PersonName() As PersonName
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames", "PersonNames").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames", "PersonNames").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonNameReference() As EntityReference(Of PersonName)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames", "PersonNames")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames", "PersonNames", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_People_PersonNames1", "PersonNames")>
    Public Property PersonName1() As PersonName
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames1", "PersonNames").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames1", "PersonNames").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonName1Reference() As EntityReference(Of PersonName)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames1", "PersonNames")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames1", "PersonNames", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_People_PersonNames2", "PersonNames")>
    Public Property PersonName2() As PersonName
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames2", "PersonNames").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames2", "PersonNames").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonName2Reference() As EntityReference(Of PersonName)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames2", "PersonNames")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PersonName)("LMISModel.FK_People_PersonNames2", "PersonNames", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Person_PersonStatus", "PersonStatus")>
    Public Property PersonStatu() As PersonStatu
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonStatu)("LMISModel.FK_Person_PersonStatus", "PersonStatus").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonStatu)("LMISModel.FK_Person_PersonStatus", "PersonStatus").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonStatuReference() As EntityReference(Of PersonStatu)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonStatu)("LMISModel.FK_Person_PersonStatus", "PersonStatus")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PersonStatu)("LMISModel.FK_Person_PersonStatus", "PersonStatus", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Suppliers_People", "Suppliers")>
     Public Property Suppliers() As EntityCollection(Of Supplier)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Supplier)("LMISModel.FK_Suppliers_People", "Suppliers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Supplier)("LMISModel.FK_Suppliers_People", "Suppliers", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PersonName")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PersonName
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PersonName object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreatePersonName(id As Global.System.String, name As Global.System.String) As PersonName
        Dim personName as PersonName = New PersonName
        personName.ID = id
        personName.Name = name
        Return personName
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_People_PersonNames", "Person")>
     Public Property People() As EntityCollection(Of Person)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Person)("LMISModel.FK_People_PersonNames", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Person)("LMISModel.FK_People_PersonNames", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_People_PersonNames1", "Person")>
     Public Property People1() As EntityCollection(Of Person)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Person)("LMISModel.FK_People_PersonNames1", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Person)("LMISModel.FK_People_PersonNames1", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_People_PersonNames2", "Person")>
     Public Property People2() As EntityCollection(Of Person)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Person)("LMISModel.FK_People_PersonNames2", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Person)("LMISModel.FK_People_PersonNames2", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_PersonNames", "Requisition")>
     Public Property Requisitions() As EntityCollection(Of Requisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_PersonNames", "Requisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_PersonNames", "Requisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_PersonNames1", "Requisition")>
     Public Property Requisitions1() As EntityCollection(Of Requisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_PersonNames1", "Requisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_PersonNames1", "Requisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_PersonNames2", "Requisition")>
     Public Property Requisitions2() As EntityCollection(Of Requisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_PersonNames2", "Requisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_PersonNames2", "Requisition", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PersonStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PersonStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PersonStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreatePersonStatu(id As Global.System.Int32, status As Global.System.String, active As Global.System.Boolean) As PersonStatu
        Dim personStatu as PersonStatu = New PersonStatu
        personStatu.ID = id
        personStatu.Status = status
        personStatu.Active = active
        Return personStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.String
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.String
    Private Partial Sub OnStatusChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Person_PersonStatus", "Person")>
     Public Property People() As EntityCollection(Of Person)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Person)("LMISModel.FK_Person_PersonStatus", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Person)("LMISModel.FK_Person_PersonStatus", "Person", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PrescriptionStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PrescriptionStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PrescriptionStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    Public Shared Function CreatePrescriptionStatu(id As Global.System.Int32, status As Global.System.String) As PrescriptionStatu
        Dim prescriptionStatu as PrescriptionStatu = New PrescriptionStatu
        prescriptionStatu.ID = id
        prescriptionStatu.Status = status
        Return prescriptionStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.String
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.String
    Private Partial Sub OnStatusChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_PrescriptionStatus", "ItemsCatalogue")>
     Public Property ItemsCatalogues() As EntityCollection(Of ItemsCatalogue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_PrescriptionStatus", "ItemsCatalogue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_PrescriptionStatus", "ItemsCatalogue", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Procurement")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Procurement
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Procurement object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="requestID">Initial value of the RequestID property.</param>
    ''' <param name="requestDate">Initial value of the RequestDate property.</param>
    Public Shared Function CreateProcurement(id As Global.System.Int32, requestID As Global.System.String, requestDate As Global.System.DateTime) As Procurement
        Dim procurement as Procurement = New Procurement
        procurement.ID = id
        procurement.RequestID = requestID
        procurement.RequestDate = requestDate
        Return procurement
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RequestID() As Global.System.String
        Get
            Return _RequestID
        End Get
        Set
            OnRequestIDChanging(value)
            ReportPropertyChanging("RequestID")
            _RequestID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("RequestID")
            OnRequestIDChanged()
        End Set
    End Property

    Private _RequestID As Global.System.String
    Private Partial Sub OnRequestIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRequestIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RequestDate() As Global.System.DateTime
        Get
            Return _RequestDate
        End Get
        Set
            OnRequestDateChanging(value)
            ReportPropertyChanging("RequestDate")
            _RequestDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RequestDate")
            OnRequestDateChanged()
        End Set
    End Property

    Private _RequestDate As Global.System.DateTime
    Private Partial Sub OnRequestDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnRequestDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property RefNo() As Global.System.String
        Get
            Return _RefNo
        End Get
        Set
            OnRefNoChanging(value)
            ReportPropertyChanging("RefNo")
            _RefNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("RefNo")
            OnRefNoChanged()
        End Set
    End Property

    Private _RefNo As Global.System.String
    Private Partial Sub OnRefNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRefNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Remark() As Global.System.String
        Get
            Return _Remark
        End Get
        Set
            OnRemarkChanging(value)
            ReportPropertyChanging("Remark")
            _Remark = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Remark")
            OnRemarkChanged()
        End Set
    End Property

    Private _Remark As Global.System.String
    Private Partial Sub OnRemarkChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRemarkChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_RequestForProposal_Procurement", "RequestForQuotation")>
     Public Property RequestForQuotations() As EntityCollection(Of RequestForQuotation)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of RequestForQuotation)("LMISModel.FK_RequestForProposal_Procurement", "RequestForQuotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of RequestForQuotation)("LMISModel.FK_RequestForProposal_Procurement", "RequestForQuotation", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Procurement_Request", "Request")>
    Public Property Request() As Request
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Request)("LMISModel.FK_Procurement_Request", "Request").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Request)("LMISModel.FK_Procurement_Request", "Request").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RequestReference() As EntityReference(Of Request)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Request)("LMISModel.FK_Procurement_Request", "Request")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Request)("LMISModel.FK_Procurement_Request", "Request", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PurchaseOrder")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PurchaseOrder
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PurchaseOrder object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="quotationID">Initial value of the QuotationID property.</param>
    Public Shared Function CreatePurchaseOrder(id As Global.System.Int32, inventoryJournalID As Global.System.String, quotationID As Global.System.Int32) As PurchaseOrder
        Dim purchaseOrder as PurchaseOrder = New PurchaseOrder
        purchaseOrder.ID = id
        purchaseOrder.InventoryJournalID = inventoryJournalID
        purchaseOrder.QuotationID = quotationID
        Return purchaseOrder
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property QuotationID() As Global.System.Int32
        Get
            Return _QuotationID
        End Get
        Set
            OnQuotationIDChanging(value)
            ReportPropertyChanging("QuotationID")
            _QuotationID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("QuotationID")
            OnQuotationIDChanged()
        End Set
    End Property

    Private _QuotationID As Global.System.Int32
    Private Partial Sub OnQuotationIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnQuotationIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Delivery_PurchaseOrder", "Delivery")>
     Public Property Deliveries() As EntityCollection(Of Delivery)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Delivery)("LMISModel.FK_Delivery_PurchaseOrder", "Delivery")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Delivery)("LMISModel.FK_Delivery_PurchaseOrder", "Delivery", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PurchaseOrder_InventoryJournals", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_PurchaseOrder_InventoryJournals", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_PurchaseOrder_InventoryJournals", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_PurchaseOrder_InventoryJournals", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_PurchaseOrder_InventoryJournals", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Payment_PurchaseOrder", "Payment")>
     Public Property Payments() As EntityCollection(Of Payment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Payment)("LMISModel.FK_Payment_PurchaseOrder", "Payment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Payment)("LMISModel.FK_Payment_PurchaseOrder", "Payment", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PurchaseOrder_Quotation", "Quotation")>
    Public Property Quotation() As Quotation
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Quotation)("LMISModel.FK_PurchaseOrder_Quotation", "Quotation").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Quotation)("LMISModel.FK_PurchaseOrder_Quotation", "Quotation").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property QuotationReference() As EntityReference(Of Quotation)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Quotation)("LMISModel.FK_PurchaseOrder_Quotation", "Quotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Quotation)("LMISModel.FK_PurchaseOrder_Quotation", "Quotation", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="PurchaseOrderDetail")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class PurchaseOrderDetail
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new PurchaseOrderDetail object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="arrivalExpected">Initial value of the ArrivalExpected property.</param>
    ''' <param name="pOInventoryJournalDetailID">Initial value of the POInventoryJournalDetailID property.</param>
    ''' <param name="pRInventoryJournalDetailID">Initial value of the PRInventoryJournalDetailID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    Public Shared Function CreatePurchaseOrderDetail(id As Global.System.Int32, arrivalExpected As Global.System.DateTime, pOInventoryJournalDetailID As Global.System.String, pRInventoryJournalDetailID As Global.System.String, status As Global.System.Boolean) As PurchaseOrderDetail
        Dim purchaseOrderDetail as PurchaseOrderDetail = New PurchaseOrderDetail
        purchaseOrderDetail.ID = id
        purchaseOrderDetail.ArrivalExpected = arrivalExpected
        purchaseOrderDetail.POInventoryJournalDetailID = pOInventoryJournalDetailID
        purchaseOrderDetail.PRInventoryJournalDetailID = pRInventoryJournalDetailID
        purchaseOrderDetail.Status = status
        Return purchaseOrderDetail
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ArrivalExpected() As Global.System.DateTime
        Get
            Return _ArrivalExpected
        End Get
        Set
            OnArrivalExpectedChanging(value)
            ReportPropertyChanging("ArrivalExpected")
            _ArrivalExpected = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ArrivalExpected")
            OnArrivalExpectedChanged()
        End Set
    End Property

    Private _ArrivalExpected As Global.System.DateTime
    Private Partial Sub OnArrivalExpectedChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnArrivalExpectedChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property POInventoryJournalDetailID() As Global.System.String
        Get
            Return _POInventoryJournalDetailID
        End Get
        Set
            OnPOInventoryJournalDetailIDChanging(value)
            ReportPropertyChanging("POInventoryJournalDetailID")
            _POInventoryJournalDetailID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("POInventoryJournalDetailID")
            OnPOInventoryJournalDetailIDChanged()
        End Set
    End Property

    Private _POInventoryJournalDetailID As Global.System.String
    Private Partial Sub OnPOInventoryJournalDetailIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPOInventoryJournalDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PRInventoryJournalDetailID() As Global.System.String
        Get
            Return _PRInventoryJournalDetailID
        End Get
        Set
            OnPRInventoryJournalDetailIDChanging(value)
            ReportPropertyChanging("PRInventoryJournalDetailID")
            _PRInventoryJournalDetailID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PRInventoryJournalDetailID")
            OnPRInventoryJournalDetailIDChanged()
        End Set
    End Property

    Private _PRInventoryJournalDetailID As Global.System.String
    Private Partial Sub OnPRInventoryJournalDetailIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPRInventoryJournalDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.Boolean
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.Boolean
    Private Partial Sub OnStatusChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Quotation")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Quotation
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Quotation object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="paymentTermID">Initial value of the PaymentTermID property.</param>
    ''' <param name="paymentTypeID">Initial value of the PaymentTypeID property.</param>
    ''' <param name="receiveDate">Initial value of the ReceiveDate property.</param>
    ''' <param name="freightCost">Initial value of the FreightCost property.</param>
    ''' <param name="insuranceCost">Initial value of the InsuranceCost property.</param>
    ''' <param name="otherCost">Initial value of the OtherCost property.</param>
    ''' <param name="requestForProposalDetailID">Initial value of the RequestForProposalDetailID property.</param>
    ''' <param name="quotationStatusID">Initial value of the QuotationStatusID property.</param>
    Public Shared Function CreateQuotation(id As Global.System.Int32, paymentTermID As Global.System.Int32, paymentTypeID As Global.System.Int32, receiveDate As Global.System.DateTime, freightCost As Global.System.Decimal, insuranceCost As Global.System.Decimal, otherCost As Global.System.Decimal, requestForProposalDetailID As Global.System.Int32, quotationStatusID As Global.System.Int32) As Quotation
        Dim quotation as Quotation = New Quotation
        quotation.ID = id
        quotation.PaymentTermID = paymentTermID
        quotation.PaymentTypeID = paymentTypeID
        quotation.ReceiveDate = receiveDate
        quotation.FreightCost = freightCost
        quotation.InsuranceCost = insuranceCost
        quotation.OtherCost = otherCost
        quotation.RequestForProposalDetailID = requestForProposalDetailID
        quotation.QuotationStatusID = quotationStatusID
        Return quotation
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PaymentTermID() As Global.System.Int32
        Get
            Return _PaymentTermID
        End Get
        Set
            OnPaymentTermIDChanging(value)
            ReportPropertyChanging("PaymentTermID")
            _PaymentTermID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentTermID")
            OnPaymentTermIDChanged()
        End Set
    End Property

    Private _PaymentTermID As Global.System.Int32
    Private Partial Sub OnPaymentTermIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPaymentTermIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PaymentTypeID() As Global.System.Int32
        Get
            Return _PaymentTypeID
        End Get
        Set
            OnPaymentTypeIDChanging(value)
            ReportPropertyChanging("PaymentTypeID")
            _PaymentTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentTypeID")
            OnPaymentTypeIDChanged()
        End Set
    End Property

    Private _PaymentTypeID As Global.System.Int32
    Private Partial Sub OnPaymentTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnPaymentTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ReceiveDate() As Global.System.DateTime
        Get
            Return _ReceiveDate
        End Get
        Set
            OnReceiveDateChanging(value)
            ReportPropertyChanging("ReceiveDate")
            _ReceiveDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ReceiveDate")
            OnReceiveDateChanged()
        End Set
    End Property

    Private _ReceiveDate As Global.System.DateTime
    Private Partial Sub OnReceiveDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnReceiveDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FreightCost() As Global.System.Decimal
        Get
            Return _FreightCost
        End Get
        Set
            OnFreightCostChanging(value)
            ReportPropertyChanging("FreightCost")
            _FreightCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("FreightCost")
            OnFreightCostChanged()
        End Set
    End Property

    Private _FreightCost As Global.System.Decimal
    Private Partial Sub OnFreightCostChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnFreightCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InsuranceCost() As Global.System.Decimal
        Get
            Return _InsuranceCost
        End Get
        Set
            OnInsuranceCostChanging(value)
            ReportPropertyChanging("InsuranceCost")
            _InsuranceCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InsuranceCost")
            OnInsuranceCostChanged()
        End Set
    End Property

    Private _InsuranceCost As Global.System.Decimal
    Private Partial Sub OnInsuranceCostChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnInsuranceCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OtherCost() As Global.System.Decimal
        Get
            Return _OtherCost
        End Get
        Set
            OnOtherCostChanging(value)
            ReportPropertyChanging("OtherCost")
            _OtherCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("OtherCost")
            OnOtherCostChanged()
        End Set
    End Property

    Private _OtherCost As Global.System.Decimal
    Private Partial Sub OnOtherCostChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnOtherCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RequestForProposalDetailID() As Global.System.Int32
        Get
            Return _RequestForProposalDetailID
        End Get
        Set
            OnRequestForProposalDetailIDChanging(value)
            ReportPropertyChanging("RequestForProposalDetailID")
            _RequestForProposalDetailID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RequestForProposalDetailID")
            OnRequestForProposalDetailIDChanged()
        End Set
    End Property

    Private _RequestForProposalDetailID As Global.System.Int32
    Private Partial Sub OnRequestForProposalDetailIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnRequestForProposalDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property QuotationStatusID() As Global.System.Int32
        Get
            Return _QuotationStatusID
        End Get
        Set
            OnQuotationStatusIDChanging(value)
            ReportPropertyChanging("QuotationStatusID")
            _QuotationStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("QuotationStatusID")
            OnQuotationStatusIDChanged()
        End Set
    End Property

    Private _QuotationStatusID As Global.System.Int32
    Private Partial Sub OnQuotationStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnQuotationStatusIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Quotation_PaymentTerm", "PaymentTerm")>
    Public Property PaymentTerm() As PaymentTerm
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentTerm)("LMISModel.FK_Quotation_PaymentTerm", "PaymentTerm").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentTerm)("LMISModel.FK_Quotation_PaymentTerm", "PaymentTerm").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PaymentTermReference() As EntityReference(Of PaymentTerm)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentTerm)("LMISModel.FK_Quotation_PaymentTerm", "PaymentTerm")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PaymentTerm)("LMISModel.FK_Quotation_PaymentTerm", "PaymentTerm", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Quotation_PaymentType", "PaymentType")>
    Public Property PaymentType() As PaymentType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_Quotation_PaymentType", "PaymentType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_Quotation_PaymentType", "PaymentType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PaymentTypeReference() As EntityReference(Of PaymentType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PaymentType)("LMISModel.FK_Quotation_PaymentType", "PaymentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PaymentType)("LMISModel.FK_Quotation_PaymentType", "PaymentType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PurchaseOrder_Quotation", "PurchaseOrder")>
     Public Property PurchaseOrders() As EntityCollection(Of PurchaseOrder)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of PurchaseOrder)("LMISModel.FK_PurchaseOrder_Quotation", "PurchaseOrder")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PurchaseOrder)("LMISModel.FK_PurchaseOrder_Quotation", "PurchaseOrder", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Quotation_RequestForQuotationDetail", "RequestForQuotationDetail")>
    Public Property RequestForQuotationDetail() As RequestForQuotationDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RequestForQuotationDetail)("LMISModel.FK_Quotation_RequestForQuotationDetail", "RequestForQuotationDetail").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RequestForQuotationDetail)("LMISModel.FK_Quotation_RequestForQuotationDetail", "RequestForQuotationDetail").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RequestForQuotationDetailReference() As EntityReference(Of RequestForQuotationDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RequestForQuotationDetail)("LMISModel.FK_Quotation_RequestForQuotationDetail", "RequestForQuotationDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of RequestForQuotationDetail)("LMISModel.FK_Quotation_RequestForQuotationDetail", "RequestForQuotationDetail", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_QuotationDetail_Quotation", "QuotationDetail")>
     Public Property QuotationDetails() As EntityCollection(Of QuotationDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of QuotationDetail)("LMISModel.FK_QuotationDetail_Quotation", "QuotationDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of QuotationDetail)("LMISModel.FK_QuotationDetail_Quotation", "QuotationDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="QuotationDetail")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class QuotationDetail
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new QuotationDetail object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="quotationID">Initial value of the QuotationID property.</param>
    ''' <param name="itemID">Initial value of the ItemID property.</param>
    ''' <param name="quantity">Initial value of the Quantity property.</param>
    ''' <param name="price">Initial value of the Price property.</param>
    ''' <param name="deliveryDate">Initial value of the DeliveryDate property.</param>
    Public Shared Function CreateQuotationDetail(id As Global.System.Int32, quotationID As Global.System.Int32, itemID As Global.System.String, quantity As Global.System.Decimal, price As Global.System.Decimal, deliveryDate As Global.System.DateTime) As QuotationDetail
        Dim quotationDetail as QuotationDetail = New QuotationDetail
        quotationDetail.ID = id
        quotationDetail.QuotationID = quotationID
        quotationDetail.ItemID = itemID
        quotationDetail.Quantity = quantity
        quotationDetail.Price = price
        quotationDetail.DeliveryDate = deliveryDate
        Return quotationDetail
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property QuotationID() As Global.System.Int32
        Get
            Return _QuotationID
        End Get
        Set
            If (_QuotationID <> Value) Then
                OnQuotationIDChanging(value)
                ReportPropertyChanging("QuotationID")
                _QuotationID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("QuotationID")
                OnQuotationIDChanged()
            End If
        End Set
    End Property

    Private _QuotationID As Global.System.Int32
    Private Partial Sub OnQuotationIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnQuotationIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ItemID() As Global.System.String
        Get
            Return _ItemID
        End Get
        Set
            If (_ItemID <> Value) Then
                OnItemIDChanging(value)
                ReportPropertyChanging("ItemID")
                _ItemID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ItemID")
                OnItemIDChanged()
            End If
        End Set
    End Property

    Private _ItemID As Global.System.String
    Private Partial Sub OnItemIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItemIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Quantity() As Global.System.Decimal
        Get
            Return _Quantity
        End Get
        Set
            If (_Quantity <> Value) Then
                OnQuantityChanging(value)
                ReportPropertyChanging("Quantity")
                _Quantity = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Quantity")
                OnQuantityChanged()
            End If
        End Set
    End Property

    Private _Quantity As Global.System.Decimal
    Private Partial Sub OnQuantityChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnQuantityChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Price() As Global.System.Decimal
        Get
            Return _Price
        End Get
        Set
            If (_Price <> Value) Then
                OnPriceChanging(value)
                ReportPropertyChanging("Price")
                _Price = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Price")
                OnPriceChanged()
            End If
        End Set
    End Property

    Private _Price As Global.System.Decimal
    Private Partial Sub OnPriceChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnPriceChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DeliveryDate() As Global.System.DateTime
        Get
            Return _DeliveryDate
        End Get
        Set
            If (_DeliveryDate <> Value) Then
                OnDeliveryDateChanging(value)
                ReportPropertyChanging("DeliveryDate")
                _DeliveryDate = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("DeliveryDate")
                OnDeliveryDateChanged()
            End If
        End Set
    End Property

    Private _DeliveryDate As Global.System.DateTime
    Private Partial Sub OnDeliveryDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnDeliveryDateChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_QuotationDetail_InventoryItems", "InventoryItems")>
    Public Property InventoryItem() As InventoryItem
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_QuotationDetail_InventoryItems", "InventoryItems").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_QuotationDetail_InventoryItems", "InventoryItems").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryItemReference() As EntityReference(Of InventoryItem)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryItem)("LMISModel.FK_QuotationDetail_InventoryItems", "InventoryItems")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryItem)("LMISModel.FK_QuotationDetail_InventoryItems", "InventoryItems", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_QuotationDetail_Quotation", "Quotation")>
    Public Property Quotation() As Quotation
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Quotation)("LMISModel.FK_QuotationDetail_Quotation", "Quotation").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Quotation)("LMISModel.FK_QuotationDetail_Quotation", "Quotation").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property QuotationReference() As EntityReference(Of Quotation)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Quotation)("LMISModel.FK_QuotationDetail_Quotation", "Quotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Quotation)("LMISModel.FK_QuotationDetail_Quotation", "Quotation", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="RationDay")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class RationDay
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new RationDay object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="days">Initial value of the Days property.</param>
    Public Shared Function CreateRationDay(id As Global.System.Int32, days As Global.System.Int32) As RationDay
        Dim rationDay as RationDay = New RationDay
        rationDay.ID = id
        rationDay.Days = days
        Return rationDay
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Days() As Global.System.Int32
        Get
            Return _Days
        End Get
        Set
            OnDaysChanging(value)
            ReportPropertyChanging("Days")
            _Days = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Days")
            OnDaysChanged()
        End Set
    End Property

    Private _Days As Global.System.Int32
    Private Partial Sub OnDaysChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDaysChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_DepartmentType_RationDays", "DepartmentType")>
     Public Property DepartmentTypes() As EntityCollection(Of DepartmentType)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of DepartmentType)("LMISModel.FK_DepartmentType_RationDays", "DepartmentType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of DepartmentType)("LMISModel.FK_DepartmentType_RationDays", "DepartmentType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SupplyPeriod_RationDays", "SupplyPeriod")>
     Public Property SupplyPeriods() As EntityCollection(Of SupplyPeriod)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of SupplyPeriod)("LMISModel.FK_SupplyPeriod_RationDays", "SupplyPeriod")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SupplyPeriod)("LMISModel.FK_SupplyPeriod_RationDays", "SupplyPeriod", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Recieve")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Recieve
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Recieve object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="requestID">Initial value of the RequestID property.</param>
    ''' <param name="referenceID">Initial value of the ReferenceID property.</param>
    Public Shared Function CreateRecieve(id As Global.System.String, inventoryJournalID As Global.System.String, requestID As Global.System.String, referenceID As Global.System.String) As Recieve
        Dim recieve as Recieve = New Recieve
        recieve.ID = id
        recieve.InventoryJournalID = inventoryJournalID
        recieve.RequestID = requestID
        recieve.ReferenceID = referenceID
        Return recieve
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RequestID() As Global.System.String
        Get
            Return _RequestID
        End Get
        Set
            OnRequestIDChanging(value)
            ReportPropertyChanging("RequestID")
            _RequestID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("RequestID")
            OnRequestIDChanged()
        End Set
    End Property

    Private _RequestID As Global.System.String
    Private Partial Sub OnRequestIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRequestIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ReferenceID() As Global.System.String
        Get
            Return _ReferenceID
        End Get
        Set
            OnReferenceIDChanging(value)
            ReportPropertyChanging("ReferenceID")
            _ReferenceID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ReferenceID")
            OnReferenceIDChanged()
        End Set
    End Property

    Private _ReferenceID As Global.System.String
    Private Partial Sub OnReferenceIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnReferenceIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Recieve_InventoryJournal", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Recieve_InventoryJournal", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Recieve_InventoryJournal", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Recieve_InventoryJournal", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_Recieve_InventoryJournal", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Recieve_Request", "Request")>
    Public Property Request() As Request
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Request)("LMISModel.FK_Recieve_Request", "Request").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Request)("LMISModel.FK_Recieve_Request", "Request").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RequestReference() As EntityReference(Of Request)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Request)("LMISModel.FK_Recieve_Request", "Request")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Request)("LMISModel.FK_Recieve_Request", "Request", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Request")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Request
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Request object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    ''' <param name="supplyPeriodID">Initial value of the SupplyPeriodID property.</param>
    Public Shared Function CreateRequest(id As Global.System.String, inventoryJournalID As Global.System.String, departmentID As Global.System.String, supplyPeriodID As Global.System.Int32) As Request
        Dim request as Request = New Request
        request.ID = id
        request.InventoryJournalID = inventoryJournalID
        request.DepartmentID = departmentID
        request.SupplyPeriodID = supplyPeriodID
        Return request
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SupplyPeriodID() As Global.System.Int32
        Get
            Return _SupplyPeriodID
        End Get
        Set
            OnSupplyPeriodIDChanging(value)
            ReportPropertyChanging("SupplyPeriodID")
            _SupplyPeriodID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplyPeriodID")
            OnSupplyPeriodIDChanged()
        End Set
    End Property

    Private _SupplyPeriodID As Global.System.Int32
    Private Partial Sub OnSupplyPeriodIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnSupplyPeriodIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Request_LMISOffice", "Department")>
    Public Property Department() As Department
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Request_LMISOffice", "Department").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Request_LMISOffice", "Department").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentReference() As EntityReference(Of Department)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Request_LMISOffice", "Department")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("LMISModel.FK_Request_LMISOffice", "Department", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Request_InventoryJournals", "InventoryJournal")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Request_InventoryJournals", "InventoryJournal").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Request_InventoryJournals", "InventoryJournal").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Request_InventoryJournals", "InventoryJournal")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_Request_InventoryJournals", "InventoryJournal", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Procurement_Request", "Procurement")>
     Public Property Procurements() As EntityCollection(Of Procurement)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Procurement)("LMISModel.FK_Procurement_Request", "Procurement")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Procurement)("LMISModel.FK_Procurement_Request", "Procurement", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Recieve_Request", "Recieve")>
     Public Property Recieves() As EntityCollection(Of Recieve)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Recieve)("LMISModel.FK_Recieve_Request", "Recieve")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Recieve)("LMISModel.FK_Recieve_Request", "Recieve", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Request_SupplyPeriod", "SupplyPeriod")>
    Public Property SupplyPeriod() As SupplyPeriod
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplyPeriod)("LMISModel.FK_Request_SupplyPeriod", "SupplyPeriod").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplyPeriod)("LMISModel.FK_Request_SupplyPeriod", "SupplyPeriod").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property SupplyPeriodReference() As EntityReference(Of SupplyPeriod)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplyPeriod)("LMISModel.FK_Request_SupplyPeriod", "SupplyPeriod")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SupplyPeriod)("LMISModel.FK_Request_SupplyPeriod", "SupplyPeriod", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="RequestForQuotation")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class RequestForQuotation
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new RequestForQuotation object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="procurementID">Initial value of the ProcurementID property.</param>
    ''' <param name="tenderTypeID">Initial value of the TenderTypeID property.</param>
    ''' <param name="deadLine">Initial value of the DeadLine property.</param>
    Public Shared Function CreateRequestForQuotation(id As Global.System.Int32, procurementID As Global.System.Int32, tenderTypeID As Global.System.Int32, deadLine As Global.System.DateTime) As RequestForQuotation
        Dim requestForQuotation as RequestForQuotation = New RequestForQuotation
        requestForQuotation.ID = id
        requestForQuotation.ProcurementID = procurementID
        requestForQuotation.TenderTypeID = tenderTypeID
        requestForQuotation.DeadLine = deadLine
        Return requestForQuotation
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ProcurementID() As Global.System.Int32
        Get
            Return _ProcurementID
        End Get
        Set
            OnProcurementIDChanging(value)
            ReportPropertyChanging("ProcurementID")
            _ProcurementID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ProcurementID")
            OnProcurementIDChanged()
        End Set
    End Property

    Private _ProcurementID As Global.System.Int32
    Private Partial Sub OnProcurementIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnProcurementIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ReferenceNo() As Global.System.String
        Get
            Return _ReferenceNo
        End Get
        Set
            OnReferenceNoChanging(value)
            ReportPropertyChanging("ReferenceNo")
            _ReferenceNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("ReferenceNo")
            OnReferenceNoChanged()
        End Set
    End Property

    Private _ReferenceNo As Global.System.String
    Private Partial Sub OnReferenceNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnReferenceNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TenderTypeID() As Global.System.Int32
        Get
            Return _TenderTypeID
        End Get
        Set
            OnTenderTypeIDChanging(value)
            ReportPropertyChanging("TenderTypeID")
            _TenderTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TenderTypeID")
            OnTenderTypeIDChanged()
        End Set
    End Property

    Private _TenderTypeID As Global.System.Int32
    Private Partial Sub OnTenderTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnTenderTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DeadLine() As Global.System.DateTime
        Get
            Return _DeadLine
        End Get
        Set
            OnDeadLineChanging(value)
            ReportPropertyChanging("DeadLine")
            _DeadLine = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DeadLine")
            OnDeadLineChanged()
        End Set
    End Property

    Private _DeadLine As Global.System.DateTime
    Private Partial Sub OnDeadLineChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnDeadLineChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_RequestForProposal_Procurement", "Procurement")>
    Public Property Procurement() As Procurement
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Procurement)("LMISModel.FK_RequestForProposal_Procurement", "Procurement").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Procurement)("LMISModel.FK_RequestForProposal_Procurement", "Procurement").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ProcurementReference() As EntityReference(Of Procurement)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Procurement)("LMISModel.FK_RequestForProposal_Procurement", "Procurement")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Procurement)("LMISModel.FK_RequestForProposal_Procurement", "Procurement", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_RequestForProposal_TenderType", "TenderType")>
    Public Property TenderType() As TenderType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TenderType)("LMISModel.FK_RequestForProposal_TenderType", "TenderType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TenderType)("LMISModel.FK_RequestForProposal_TenderType", "TenderType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TenderTypeReference() As EntityReference(Of TenderType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TenderType)("LMISModel.FK_RequestForProposal_TenderType", "TenderType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of TenderType)("LMISModel.FK_RequestForProposal_TenderType", "TenderType", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotationDetail")>
     Public Property RequestForQuotationDetails() As EntityCollection(Of RequestForQuotationDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of RequestForQuotationDetail)("LMISModel.FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotationDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of RequestForQuotationDetail)("LMISModel.FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotationDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="RequestForQuotationDetail")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class RequestForQuotationDetail
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new RequestForQuotationDetail object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="requestForProposalID">Initial value of the RequestForProposalID property.</param>
    ''' <param name="supplierID">Initial value of the SupplierID property.</param>
    ''' <param name="rFQStatusID">Initial value of the RFQStatusID property.</param>
    Public Shared Function CreateRequestForQuotationDetail(id As Global.System.Int32, requestForProposalID As Global.System.Int32, supplierID As Global.System.Int32, rFQStatusID As Global.System.Int32) As RequestForQuotationDetail
        Dim requestForQuotationDetail as RequestForQuotationDetail = New RequestForQuotationDetail
        requestForQuotationDetail.ID = id
        requestForQuotationDetail.RequestForProposalID = requestForProposalID
        requestForQuotationDetail.SupplierID = supplierID
        requestForQuotationDetail.RFQStatusID = rFQStatusID
        Return requestForQuotationDetail
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RequestForProposalID() As Global.System.Int32
        Get
            Return _RequestForProposalID
        End Get
        Set
            OnRequestForProposalIDChanging(value)
            ReportPropertyChanging("RequestForProposalID")
            _RequestForProposalID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RequestForProposalID")
            OnRequestForProposalIDChanged()
        End Set
    End Property

    Private _RequestForProposalID As Global.System.Int32
    Private Partial Sub OnRequestForProposalIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnRequestForProposalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SupplierID() As Global.System.Int32
        Get
            Return _SupplierID
        End Get
        Set
            OnSupplierIDChanging(value)
            ReportPropertyChanging("SupplierID")
            _SupplierID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplierID")
            OnSupplierIDChanged()
        End Set
    End Property

    Private _SupplierID As Global.System.Int32
    Private Partial Sub OnSupplierIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnSupplierIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RFQStatusID() As Global.System.Int32
        Get
            Return _RFQStatusID
        End Get
        Set
            OnRFQStatusIDChanging(value)
            ReportPropertyChanging("RFQStatusID")
            _RFQStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RFQStatusID")
            OnRFQStatusIDChanged()
        End Set
    End Property

    Private _RFQStatusID As Global.System.Int32
    Private Partial Sub OnRFQStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnRFQStatusIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Quotation_RequestForQuotationDetail", "Quotation")>
     Public Property Quotations() As EntityCollection(Of Quotation)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Quotation)("LMISModel.FK_Quotation_RequestForQuotationDetail", "Quotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Quotation)("LMISModel.FK_Quotation_RequestForQuotationDetail", "Quotation", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotation")>
    Public Property RequestForQuotation() As RequestForQuotation
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RequestForQuotation)("LMISModel.FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotation").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RequestForQuotation)("LMISModel.FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotation").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RequestForQuotationReference() As EntityReference(Of RequestForQuotation)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RequestForQuotation)("LMISModel.FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of RequestForQuotation)("LMISModel.FK_RequestForProposalDetail_RequestForProposal", "RequestForQuotation", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Requisition")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Requisition
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Requisition object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalID">Initial value of the InventoryJournalID property.</param>
    ''' <param name="referenceID">Initial value of the ReferenceID property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    ''' <param name="supplyPeriodID">Initial value of the SupplyPeriodID property.</param>
    Public Shared Function CreateRequisition(id As Global.System.String, inventoryJournalID As Global.System.String, referenceID As Global.System.String, departmentID As Global.System.String, supplyPeriodID As Global.System.Int32) As Requisition
        Dim requisition as Requisition = New Requisition
        requisition.ID = id
        requisition.InventoryJournalID = inventoryJournalID
        requisition.ReferenceID = referenceID
        requisition.DepartmentID = departmentID
        requisition.SupplyPeriodID = supplyPeriodID
        Return requisition
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalID() As Global.System.String
        Get
            Return _InventoryJournalID
        End Get
        Set
            OnInventoryJournalIDChanging(value)
            ReportPropertyChanging("InventoryJournalID")
            _InventoryJournalID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalID")
            OnInventoryJournalIDChanged()
        End Set
    End Property

    Private _InventoryJournalID As Global.System.String
    Private Partial Sub OnInventoryJournalIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ReferenceID() As Global.System.String
        Get
            Return _ReferenceID
        End Get
        Set
            OnReferenceIDChanging(value)
            ReportPropertyChanging("ReferenceID")
            _ReferenceID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ReferenceID")
            OnReferenceIDChanged()
        End Set
    End Property

    Private _ReferenceID As Global.System.String
    Private Partial Sub OnReferenceIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnReferenceIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SupplyPeriodID() As Global.System.Int32
        Get
            Return _SupplyPeriodID
        End Get
        Set
            OnSupplyPeriodIDChanging(value)
            ReportPropertyChanging("SupplyPeriodID")
            _SupplyPeriodID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplyPeriodID")
            OnSupplyPeriodIDChanged()
        End Set
    End Property

    Private _SupplyPeriodID As Global.System.Int32
    Private Partial Sub OnSupplyPeriodIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnSupplyPeriodIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property FirstNameID() As Global.System.String
        Get
            Return _FirstNameID
        End Get
        Set
            OnFirstNameIDChanging(value)
            ReportPropertyChanging("FirstNameID")
            _FirstNameID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("FirstNameID")
            OnFirstNameIDChanged()
        End Set
    End Property

    Private _FirstNameID As Global.System.String
    Private Partial Sub OnFirstNameIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFirstNameIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property MiddleNameID() As Global.System.String
        Get
            Return _MiddleNameID
        End Get
        Set
            OnMiddleNameIDChanging(value)
            ReportPropertyChanging("MiddleNameID")
            _MiddleNameID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("MiddleNameID")
            OnMiddleNameIDChanged()
        End Set
    End Property

    Private _MiddleNameID As Global.System.String
    Private Partial Sub OnMiddleNameIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnMiddleNameIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property LastNameID() As Global.System.String
        Get
            Return _LastNameID
        End Get
        Set
            OnLastNameIDChanging(value)
            ReportPropertyChanging("LastNameID")
            _LastNameID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("LastNameID")
            OnLastNameIDChanged()
        End Set
    End Property

    Private _LastNameID As Global.System.String
    Private Partial Sub OnLastNameIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnLastNameIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_LMISOffice", "Departments")>
    Public Property Department() As Department
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Requisition_LMISOffice", "Departments").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Requisition_LMISOffice", "Departments").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentReference() As EntityReference(Of Department)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Requisition_LMISOffice", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("LMISModel.FK_Requisition_LMISOffice", "Departments", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_InventoryJournals", "InventoryJournals")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Requisition_InventoryJournals", "InventoryJournals").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Requisition_InventoryJournals", "InventoryJournals").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Requisition_InventoryJournals", "InventoryJournals")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_Requisition_InventoryJournals", "InventoryJournals", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Issue_Requisition", "Issue")>
     Public Property Issues() As EntityCollection(Of Issue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Issue)("LMISModel.FK_Issue_Requisition", "Issue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Issue)("LMISModel.FK_Issue_Requisition", "Issue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_PersonNames", "PersonNames")>
    Public Property PersonName() As PersonName
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames", "PersonNames").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames", "PersonNames").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonNameReference() As EntityReference(Of PersonName)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames", "PersonNames")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames", "PersonNames", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_PersonNames1", "PersonNames")>
    Public Property PersonName1() As PersonName
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames1", "PersonNames").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames1", "PersonNames").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonName1Reference() As EntityReference(Of PersonName)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames1", "PersonNames")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames1", "PersonNames", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_PersonNames2", "PersonNames")>
    Public Property PersonName2() As PersonName
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames2", "PersonNames").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames2", "PersonNames").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonName2Reference() As EntityReference(Of PersonName)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames2", "PersonNames")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of PersonName)("LMISModel.FK_Requisition_PersonNames2", "PersonNames", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_SupplyPeriod", "SupplyPeriod")>
    Public Property SupplyPeriod() As SupplyPeriod
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplyPeriod)("LMISModel.FK_Requisition_SupplyPeriod", "SupplyPeriod").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplyPeriod)("LMISModel.FK_Requisition_SupplyPeriod", "SupplyPeriod").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property SupplyPeriodReference() As EntityReference(Of SupplyPeriod)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplyPeriod)("LMISModel.FK_Requisition_SupplyPeriod", "SupplyPeriod")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SupplyPeriod)("LMISModel.FK_Requisition_SupplyPeriod", "SupplyPeriod", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Room")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Room
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Room object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    ''' <param name="roomNo">Initial value of the RoomNo property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateRoom(id As Global.System.String, departmentID As Global.System.String, roomNo As Global.System.String, active As Global.System.Boolean) As Room
        Dim room as Room = New Room
        room.ID = id
        room.DepartmentID = departmentID
        room.RoomNo = roomNo
        room.Active = active
        Return room
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RoomNo() As Global.System.String
        Get
            Return _RoomNo
        End Get
        Set
            OnRoomNoChanging(value)
            ReportPropertyChanging("RoomNo")
            _RoomNo = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("RoomNo")
            OnRoomNoChanged()
        End Set
    End Property

    Private _RoomNo As Global.System.String
    Private Partial Sub OnRoomNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRoomNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Bed_Rooms", "Bed")>
     Public Property Beds() As EntityCollection(Of Bed)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Bed)("LMISModel.FK_Bed_Rooms", "Bed")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Bed)("LMISModel.FK_Bed_Rooms", "Bed", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Rooms_Departments", "Departments")>
    Public Property Department() As Department
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Rooms_Departments", "Departments").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Rooms_Departments", "Departments").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentReference() As EntityReference(Of Department)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Rooms_Departments", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("LMISModel.FK_Rooms_Departments", "Departments", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="RouteOfAdministration")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class RouteOfAdministration
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new RouteOfAdministration object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateRouteOfAdministration(id As Global.System.Int32, name As Global.System.String) As RouteOfAdministration
        Dim routeOfAdministration as RouteOfAdministration = New RouteOfAdministration
        routeOfAdministration.ID = id
        routeOfAdministration.Name = name
        Return routeOfAdministration
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_RouteOfAdministration", "ItemsCatalogue")>
     Public Property ItemsCatalogues() As EntityCollection(Of ItemsCatalogue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_RouteOfAdministration", "ItemsCatalogue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_RouteOfAdministration", "ItemsCatalogue", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Section")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Section
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Section object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateSection(id As Global.System.Int32, name As Global.System.String, departmentID As Global.System.Int32, active As Global.System.Boolean) As Section
        Dim section as Section = New Section
        section.ID = id
        section.Name = name
        section.DepartmentID = departmentID
        section.Active = active
        Return section
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.Int32
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.Int32
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="SickReportIPD")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class SickReportIPD
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new SickReportIPD object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="companyID">Initial value of the CompanyID property.</param>
    Public Shared Function CreateSickReportIPD(id As Global.System.String, companyID As Global.System.Int32) As SickReportIPD
        Dim sickReportIPD as SickReportIPD = New SickReportIPD
        sickReportIPD.ID = id
        sickReportIPD.CompanyID = companyID
        Return sickReportIPD
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CompanyID() As Global.System.Int32
        Get
            Return _CompanyID
        End Get
        Set
            OnCompanyIDChanging(value)
            ReportPropertyChanging("CompanyID")
            _CompanyID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CompanyID")
            OnCompanyIDChanged()
        End Set
    End Property

    Private _CompanyID As Global.System.Int32
    Private Partial Sub OnCompanyIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCompanyIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property IPDRequisitionID() As Global.System.String
        Get
            Return _IPDRequisitionID
        End Get
        Set
            OnIPDRequisitionIDChanging(value)
            ReportPropertyChanging("IPDRequisitionID")
            _IPDRequisitionID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("IPDRequisitionID")
            OnIPDRequisitionIDChanged()
        End Set
    End Property

    Private _IPDRequisitionID As Global.System.String
    Private Partial Sub OnIPDRequisitionIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIPDRequisitionIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportIPD_Companies", "Companies")>
    Public Property Company() As Company
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_SickReportIPD_Companies", "Companies").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_SickReportIPD_Companies", "Companies").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CompanyReference() As EntityReference(Of Company)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_SickReportIPD_Companies", "Companies")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Company)("LMISModel.FK_SickReportIPD_Companies", "Companies", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportIPD_IPDRequisition", "IPDRequisition")>
    Public Property IPDRequisition() As IPDRequisition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_SickReportIPD_IPDRequisition", "IPDRequisition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_SickReportIPD_IPDRequisition", "IPDRequisition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property IPDRequisitionReference() As EntityReference(Of IPDRequisition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of IPDRequisition)("LMISModel.FK_SickReportIPD_IPDRequisition", "IPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of IPDRequisition)("LMISModel.FK_SickReportIPD_IPDRequisition", "IPDRequisition", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="SickReportOPD")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class SickReportOPD
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new SickReportOPD object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="companyID">Initial value of the CompanyID property.</param>
    Public Shared Function CreateSickReportOPD(id As Global.System.String, companyID As Global.System.Int32) As SickReportOPD
        Dim sickReportOPD as SickReportOPD = New SickReportOPD
        sickReportOPD.ID = id
        sickReportOPD.CompanyID = companyID
        Return sickReportOPD
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CompanyID() As Global.System.Int32
        Get
            Return _CompanyID
        End Get
        Set
            OnCompanyIDChanging(value)
            ReportPropertyChanging("CompanyID")
            _CompanyID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CompanyID")
            OnCompanyIDChanged()
        End Set
    End Property

    Private _CompanyID As Global.System.Int32
    Private Partial Sub OnCompanyIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCompanyIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property OPDRequisitionID() As Global.System.String
        Get
            Return _OPDRequisitionID
        End Get
        Set
            OnOPDRequisitionIDChanging(value)
            ReportPropertyChanging("OPDRequisitionID")
            _OPDRequisitionID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("OPDRequisitionID")
            OnOPDRequisitionIDChanged()
        End Set
    End Property

    Private _OPDRequisitionID As Global.System.String
    Private Partial Sub OnOPDRequisitionIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnOPDRequisitionIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportOPD_Companies", "Companies")>
    Public Property Company() As Company
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_SickReportOPD_Companies", "Companies").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_SickReportOPD_Companies", "Companies").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CompanyReference() As EntityReference(Of Company)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_SickReportOPD_Companies", "Companies")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Company)("LMISModel.FK_SickReportOPD_Companies", "Companies", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SickReportOPD_OPDRequisition", "OPDRequisition")>
    Public Property OPDRequisition() As OPDRequisition
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_SickReportOPD_OPDRequisition", "OPDRequisition").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_SickReportOPD_OPDRequisition", "OPDRequisition").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property OPDRequisitionReference() As EntityReference(Of OPDRequisition)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of OPDRequisition)("LMISModel.FK_SickReportOPD_OPDRequisition", "OPDRequisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of OPDRequisition)("LMISModel.FK_SickReportOPD_OPDRequisition", "OPDRequisition", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="StorageRequirement")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class StorageRequirement
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new StorageRequirement object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="itemsCatalogueID">Initial value of the ItemsCatalogueID property.</param>
    ''' <param name="storageRequirementTypeID">Initial value of the StorageRequirementTypeID property.</param>
    ''' <param name="maxValue">Initial value of the MaxValue property.</param>
    ''' <param name="minValue">Initial value of the MinValue property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateStorageRequirement(id As Global.System.Int32, itemsCatalogueID As Global.System.String, storageRequirementTypeID As Global.System.Int32, maxValue As Global.System.Decimal, minValue As Global.System.Decimal, active As Global.System.Boolean) As StorageRequirement
        Dim storageRequirement as StorageRequirement = New StorageRequirement
        storageRequirement.ID = id
        storageRequirement.ItemsCatalogueID = itemsCatalogueID
        storageRequirement.StorageRequirementTypeID = storageRequirementTypeID
        storageRequirement.MaxValue = maxValue
        storageRequirement.MinValue = minValue
        storageRequirement.Active = active
        Return storageRequirement
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ItemsCatalogueID() As Global.System.String
        Get
            Return _ItemsCatalogueID
        End Get
        Set
            OnItemsCatalogueIDChanging(value)
            ReportPropertyChanging("ItemsCatalogueID")
            _ItemsCatalogueID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ItemsCatalogueID")
            OnItemsCatalogueIDChanged()
        End Set
    End Property

    Private _ItemsCatalogueID As Global.System.String
    Private Partial Sub OnItemsCatalogueIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItemsCatalogueIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property StorageRequirementTypeID() As Global.System.Int32
        Get
            Return _StorageRequirementTypeID
        End Get
        Set
            OnStorageRequirementTypeIDChanging(value)
            ReportPropertyChanging("StorageRequirementTypeID")
            _StorageRequirementTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("StorageRequirementTypeID")
            OnStorageRequirementTypeIDChanged()
        End Set
    End Property

    Private _StorageRequirementTypeID As Global.System.Int32
    Private Partial Sub OnStorageRequirementTypeIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnStorageRequirementTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property MaxValue() As Global.System.Decimal
        Get
            Return _MaxValue
        End Get
        Set
            OnMaxValueChanging(value)
            ReportPropertyChanging("MaxValue")
            _MaxValue = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("MaxValue")
            OnMaxValueChanged()
        End Set
    End Property

    Private _MaxValue As Global.System.Decimal
    Private Partial Sub OnMaxValueChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnMaxValueChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property MinValue() As Global.System.Decimal
        Get
            Return _MinValue
        End Get
        Set
            OnMinValueChanging(value)
            ReportPropertyChanging("MinValue")
            _MinValue = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("MinValue")
            OnMinValueChanged()
        End Set
    End Property

    Private _MinValue As Global.System.Decimal
    Private Partial Sub OnMinValueChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnMinValueChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_StorageRequirements_ItemsCatalogue", "ItemsCatalogue")>
    Public Property ItemsCatalogue() As ItemsCatalogue
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ItemsCatalogue)("LMISModel.FK_StorageRequirements_ItemsCatalogue", "ItemsCatalogue").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ItemsCatalogue)("LMISModel.FK_StorageRequirements_ItemsCatalogue", "ItemsCatalogue").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ItemsCatalogueReference() As EntityReference(Of ItemsCatalogue)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ItemsCatalogue)("LMISModel.FK_StorageRequirements_ItemsCatalogue", "ItemsCatalogue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ItemsCatalogue)("LMISModel.FK_StorageRequirements_ItemsCatalogue", "ItemsCatalogue", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_StorageRequirements_StorageRequirementType", "StorageRequirementType")>
    Public Property StorageRequirementType() As StorageRequirementType
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of StorageRequirementType)("LMISModel.FK_StorageRequirements_StorageRequirementType", "StorageRequirementType").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of StorageRequirementType)("LMISModel.FK_StorageRequirements_StorageRequirementType", "StorageRequirementType").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property StorageRequirementTypeReference() As EntityReference(Of StorageRequirementType)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of StorageRequirementType)("LMISModel.FK_StorageRequirements_StorageRequirementType", "StorageRequirementType")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of StorageRequirementType)("LMISModel.FK_StorageRequirements_StorageRequirementType", "StorageRequirementType", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="StorageRequirementType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class StorageRequirementType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new StorageRequirementType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateStorageRequirementType(id As Global.System.Int32, type As Global.System.String, active As Global.System.Boolean) As StorageRequirementType
        Dim storageRequirementType as StorageRequirementType = New StorageRequirementType
        storageRequirementType.ID = id
        storageRequirementType.Type = type
        storageRequirementType.Active = active
        Return storageRequirementType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_StorageRequirements_StorageRequirementType", "StorageRequirements")>
     Public Property StorageRequirements() As EntityCollection(Of StorageRequirement)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of StorageRequirement)("LMISModel.FK_StorageRequirements_StorageRequirementType", "StorageRequirements")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of StorageRequirement)("LMISModel.FK_StorageRequirements_StorageRequirementType", "StorageRequirements", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Store")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Store
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Store object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    Public Shared Function CreateStore(id As Global.System.String, name As Global.System.String, departmentID As Global.System.String) As Store
        Dim store as Store = New Store
        store.ID = id
        store.Name = name
        store.DepartmentID = departmentID
        Return store
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Active() As Nullable(Of Global.System.Boolean)
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Nullable(Of Global.System.Boolean)
    Private Partial Sub OnActiveChanging(value As Nullable(Of Global.System.Boolean))
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Store_Store", "Departments")>
    Public Property Department() As Department
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Store_Store", "Departments").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Store_Store", "Departments").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property DepartmentReference() As EntityReference(Of Department)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Department)("LMISModel.FK_Store_Store", "Departments")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Department)("LMISModel.FK_Store_Store", "Departments", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Locations_Store", "Locations")>
     Public Property Locations() As EntityCollection(Of Location)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Location)("LMISModel.FK_Locations_Store", "Locations")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Location)("LMISModel.FK_Locations_Store", "Locations", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="SubZone")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class SubZone
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new SubZone object.
    ''' </summary>
    ''' <param name="subZoneID">Initial value of the SubZoneID property.</param>
    ''' <param name="subZoneName">Initial value of the SubZoneName property.</param>
    ''' <param name="zoneID">Initial value of the ZoneID property.</param>
    Public Shared Function CreateSubZone(subZoneID As Global.System.Int32, subZoneName As Global.System.String, zoneID As Global.System.Int32) As SubZone
        Dim subZone as SubZone = New SubZone
        subZone.SubZoneID = subZoneID
        subZone.SubZoneName = subZoneName
        subZone.ZoneID = zoneID
        Return subZone
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SubZoneID() As Global.System.Int32
        Get
            Return _SubZoneID
        End Get
        Set
            If (_SubZoneID <> Value) Then
                OnSubZoneIDChanging(value)
                ReportPropertyChanging("SubZoneID")
                _SubZoneID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("SubZoneID")
                OnSubZoneIDChanged()
            End If
        End Set
    End Property

    Private _SubZoneID As Global.System.Int32
    Private Partial Sub OnSubZoneIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnSubZoneIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SubZoneName() As Global.System.String
        Get
            Return _SubZoneName
        End Get
        Set
            OnSubZoneNameChanging(value)
            ReportPropertyChanging("SubZoneName")
            _SubZoneName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("SubZoneName")
            OnSubZoneNameChanged()
        End Set
    End Property

    Private _SubZoneName As Global.System.String
    Private Partial Sub OnSubZoneNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnSubZoneNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ZoneID() As Global.System.Int32
        Get
            Return _ZoneID
        End Get
        Set
            OnZoneIDChanging(value)
            ReportPropertyChanging("ZoneID")
            _ZoneID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ZoneID")
            OnZoneIDChanged()
        End Set
    End Property

    Private _ZoneID As Global.System.Int32
    Private Partial Sub OnZoneIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnZoneIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SubZone_Zone", "Zone")>
    Public Property Zone() As Zone
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_SubZone_Zone", "Zone").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_SubZone_Zone", "Zone").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ZoneReference() As EntityReference(Of Zone)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Zone)("LMISModel.FK_SubZone_Zone", "Zone")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Zone)("LMISModel.FK_SubZone_Zone", "Zone", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Village_SubZone", "Village")>
     Public Property Villages() As EntityCollection(Of Village)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Village)("LMISModel.FK_Village_SubZone", "Village")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Village)("LMISModel.FK_Village_SubZone", "Village", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Supplier")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Supplier
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Supplier object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="personID">Initial value of the PersonID property.</param>
    ''' <param name="companyID">Initial value of the CompanyID property.</param>
    ''' <param name="supplierStatusID">Initial value of the SupplierStatusID property.</param>
    Public Shared Function CreateSupplier(id As Global.System.String, personID As Global.System.String, companyID As Global.System.Int32, supplierStatusID As Global.System.Int32) As Supplier
        Dim supplier as Supplier = New Supplier
        supplier.ID = id
        supplier.PersonID = personID
        supplier.CompanyID = companyID
        supplier.SupplierStatusID = supplierStatusID
        Return supplier
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PersonID() As Global.System.String
        Get
            Return _PersonID
        End Get
        Set
            OnPersonIDChanging(value)
            ReportPropertyChanging("PersonID")
            _PersonID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("PersonID")
            OnPersonIDChanged()
        End Set
    End Property

    Private _PersonID As Global.System.String
    Private Partial Sub OnPersonIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPersonIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CompanyID() As Global.System.Int32
        Get
            Return _CompanyID
        End Get
        Set
            OnCompanyIDChanging(value)
            ReportPropertyChanging("CompanyID")
            _CompanyID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("CompanyID")
            OnCompanyIDChanged()
        End Set
    End Property

    Private _CompanyID As Global.System.Int32
    Private Partial Sub OnCompanyIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCompanyIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SupplierStatusID() As Global.System.Int32
        Get
            Return _SupplierStatusID
        End Get
        Set
            OnSupplierStatusIDChanging(value)
            ReportPropertyChanging("SupplierStatusID")
            _SupplierStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplierStatusID")
            OnSupplierStatusIDChanged()
        End Set
    End Property

    Private _SupplierStatusID As Global.System.Int32
    Private Partial Sub OnSupplierStatusIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnSupplierStatusIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Suppliers_Companies", "Companies")>
    Public Property Company() As Company
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_Suppliers_Companies", "Companies").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_Suppliers_Companies", "Companies").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property CompanyReference() As EntityReference(Of Company)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Company)("LMISModel.FK_Suppliers_Companies", "Companies")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Company)("LMISModel.FK_Suppliers_Companies", "Companies", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_GRN_Suppliers", "GRN")>
     Public Property GRNs() As EntityCollection(Of GRN)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of GRN)("LMISModel.FK_GRN_Suppliers", "GRN")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of GRN)("LMISModel.FK_GRN_Suppliers", "GRN", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Suppliers_People", "Person")>
    Public Property Person() As Person
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Suppliers_People", "Person").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Suppliers_People", "Person").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonReference() As EntityReference(Of Person)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("LMISModel.FK_Suppliers_People", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Person)("LMISModel.FK_Suppliers_People", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Suppliers_SupplierStatus", "SupplierStatus")>
    Public Property SupplierStatu() As SupplierStatu
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplierStatu)("LMISModel.FK_Suppliers_SupplierStatus", "SupplierStatus").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplierStatu)("LMISModel.FK_Suppliers_SupplierStatus", "SupplierStatus").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property SupplierStatuReference() As EntityReference(Of SupplierStatu)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SupplierStatu)("LMISModel.FK_Suppliers_SupplierStatus", "SupplierStatus")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SupplierStatu)("LMISModel.FK_Suppliers_SupplierStatus", "SupplierStatus", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="SupplierStatu")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class SupplierStatu
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new SupplierStatu object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="status">Initial value of the Status property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateSupplierStatu(id As Global.System.Int32, status As Global.System.String, active As Global.System.Boolean) As SupplierStatu
        Dim supplierStatu as SupplierStatu = New SupplierStatu
        supplierStatu.ID = id
        supplierStatu.Status = status
        supplierStatu.Active = active
        Return supplierStatu
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Status() As Global.System.String
        Get
            Return _Status
        End Get
        Set
            OnStatusChanging(value)
            ReportPropertyChanging("Status")
            _Status = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Status")
            OnStatusChanged()
        End Set
    End Property

    Private _Status As Global.System.String
    Private Partial Sub OnStatusChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStatusChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Suppliers_SupplierStatus", "Suppliers")>
     Public Property Suppliers() As EntityCollection(Of Supplier)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Supplier)("LMISModel.FK_Suppliers_SupplierStatus", "Suppliers")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Supplier)("LMISModel.FK_Suppliers_SupplierStatus", "Suppliers", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="SupplyPeriod")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class SupplyPeriod
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new SupplyPeriod object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="period">Initial value of the Period property.</param>
    ''' <param name="monthFrom">Initial value of the MonthFrom property.</param>
    ''' <param name="monthTo">Initial value of the MonthTo property.</param>
    ''' <param name="dateFrom">Initial value of the DateFrom property.</param>
    ''' <param name="dateTo">Initial value of the DateTo property.</param>
    ''' <param name="rationDaysID">Initial value of the RationDaysID property.</param>
    Public Shared Function CreateSupplyPeriod(id As Global.System.Int32, period As Global.System.String, monthFrom As Global.System.Int32, monthTo As Global.System.Int32, dateFrom As Global.System.Int32, dateTo As Global.System.Int32, rationDaysID As Global.System.Int32) As SupplyPeriod
        Dim supplyPeriod as SupplyPeriod = New SupplyPeriod
        supplyPeriod.ID = id
        supplyPeriod.Period = period
        supplyPeriod.MonthFrom = monthFrom
        supplyPeriod.MonthTo = monthTo
        supplyPeriod.DateFrom = dateFrom
        supplyPeriod.DateTo = dateTo
        supplyPeriod.RationDaysID = rationDaysID
        Return supplyPeriod
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Period() As Global.System.String
        Get
            Return _Period
        End Get
        Set
            OnPeriodChanging(value)
            ReportPropertyChanging("Period")
            _Period = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Period")
            OnPeriodChanged()
        End Set
    End Property

    Private _Period As Global.System.String
    Private Partial Sub OnPeriodChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPeriodChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property MonthFrom() As Global.System.Int32
        Get
            Return _MonthFrom
        End Get
        Set
            OnMonthFromChanging(value)
            ReportPropertyChanging("MonthFrom")
            _MonthFrom = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("MonthFrom")
            OnMonthFromChanged()
        End Set
    End Property

    Private _MonthFrom As Global.System.Int32
    Private Partial Sub OnMonthFromChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnMonthFromChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property MonthTo() As Global.System.Int32
        Get
            Return _MonthTo
        End Get
        Set
            OnMonthToChanging(value)
            ReportPropertyChanging("MonthTo")
            _MonthTo = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("MonthTo")
            OnMonthToChanged()
        End Set
    End Property

    Private _MonthTo As Global.System.Int32
    Private Partial Sub OnMonthToChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnMonthToChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DateFrom() As Global.System.Int32
        Get
            Return _DateFrom
        End Get
        Set
            OnDateFromChanging(value)
            ReportPropertyChanging("DateFrom")
            _DateFrom = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DateFrom")
            OnDateFromChanged()
        End Set
    End Property

    Private _DateFrom As Global.System.Int32
    Private Partial Sub OnDateFromChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDateFromChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DateTo() As Global.System.Int32
        Get
            Return _DateTo
        End Get
        Set
            OnDateToChanging(value)
            ReportPropertyChanging("DateTo")
            _DateTo = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DateTo")
            OnDateToChanged()
        End Set
    End Property

    Private _DateTo As Global.System.Int32
    Private Partial Sub OnDateToChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDateToChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property RationDaysID() As Global.System.Int32
        Get
            Return _RationDaysID
        End Get
        Set
            OnRationDaysIDChanging(value)
            ReportPropertyChanging("RationDaysID")
            _RationDaysID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("RationDaysID")
            OnRationDaysIDChanged()
        End Set
    End Property

    Private _RationDaysID As Global.System.Int32
    Private Partial Sub OnRationDaysIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnRationDaysIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SupplyPeriod_RationDays", "RationDays")>
    Public Property RationDay() As RationDay
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RationDay)("LMISModel.FK_SupplyPeriod_RationDays", "RationDays").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RationDay)("LMISModel.FK_SupplyPeriod_RationDays", "RationDays").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property RationDayReference() As EntityReference(Of RationDay)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of RationDay)("LMISModel.FK_SupplyPeriod_RationDays", "RationDays")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of RationDay)("LMISModel.FK_SupplyPeriod_RationDays", "RationDays", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Requisition_SupplyPeriod", "Requisition")>
     Public Property Requisitions() As EntityCollection(Of Requisition)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_SupplyPeriod", "Requisition")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Requisition)("LMISModel.FK_Requisition_SupplyPeriod", "Requisition", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Request_SupplyPeriod", "Request")>
     Public Property Requests() As EntityCollection(Of Request)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Request)("LMISModel.FK_Request_SupplyPeriod", "Request")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Request)("LMISModel.FK_Request_SupplyPeriod", "Request", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Table")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Table
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Table object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="tableName">Initial value of the TableName property.</param>
    ''' <param name="departmentID">Initial value of the DepartmentID property.</param>
    Public Shared Function CreateTable(id As Global.System.Int32, tableName As Global.System.String, departmentID As Global.System.Int32) As Table
        Dim table as Table = New Table
        table.ID = id
        table.TableName = tableName
        table.DepartmentID = departmentID
        Return table
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TableName() As Global.System.String
        Get
            Return _TableName
        End Get
        Set
            OnTableNameChanging(value)
            ReportPropertyChanging("TableName")
            _TableName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("TableName")
            OnTableNameChanged()
        End Set
    End Property

    Private _TableName As Global.System.String
    Private Partial Sub OnTableNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTableNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.Int32
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.Int32
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="TenderType")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TenderType
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TenderType object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="type">Initial value of the Type property.</param>
    Public Shared Function CreateTenderType(id As Global.System.Int32, type As Global.System.String) As TenderType
        Dim tenderType as TenderType = New TenderType
        tenderType.ID = id
        tenderType.Type = type
        Return tenderType
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Type() As Global.System.String
        Get
            Return _Type
        End Get
        Set
            OnTypeChanging(value)
            ReportPropertyChanging("Type")
            _Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Type")
            OnTypeChanged()
        End Set
    End Property

    Private _Type As Global.System.String
    Private Partial Sub OnTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTypeChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_RequestForProposal_TenderType", "RequestForQuotation")>
     Public Property RequestForQuotations() As EntityCollection(Of RequestForQuotation)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of RequestForQuotation)("LMISModel.FK_RequestForProposal_TenderType", "RequestForQuotation")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of RequestForQuotation)("LMISModel.FK_RequestForProposal_TenderType", "RequestForQuotation", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="TherapeuticClass")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TherapeuticClass
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TherapeuticClass object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateTherapeuticClass(id As Global.System.Int32, name As Global.System.String) As TherapeuticClass
        Dim therapeuticClass as TherapeuticClass = New TherapeuticClass
        therapeuticClass.ID = id
        therapeuticClass.Name = name
        Return therapeuticClass
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_ItemsCatalogue_TherapeuticClass", "ItemsCatalogue")>
     Public Property ItemsCatalogues() As EntityCollection(Of ItemsCatalogue)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_TherapeuticClass", "ItemsCatalogue")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ItemsCatalogue)("LMISModel.FK_ItemsCatalogue_TherapeuticClass", "ItemsCatalogue", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Transfer")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Transfer
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Transfer object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="inventoryJournalOutID">Initial value of the InventoryJournalOutID property.</param>
    ''' <param name="inventoryJournalInID">Initial value of the InventoryJournalInID property.</param>
    Public Shared Function CreateTransfer(id As Global.System.String, inventoryJournalOutID As Global.System.String, inventoryJournalInID As Global.System.String) As Transfer
        Dim transfer as Transfer = New Transfer
        transfer.ID = id
        transfer.InventoryJournalOutID = inventoryJournalOutID
        transfer.InventoryJournalInID = inventoryJournalInID
        Return transfer
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalOutID() As Global.System.String
        Get
            Return _InventoryJournalOutID
        End Get
        Set
            OnInventoryJournalOutIDChanging(value)
            ReportPropertyChanging("InventoryJournalOutID")
            _InventoryJournalOutID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalOutID")
            OnInventoryJournalOutIDChanged()
        End Set
    End Property

    Private _InventoryJournalOutID As Global.System.String
    Private Partial Sub OnInventoryJournalOutIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalOutIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalInID() As Global.System.String
        Get
            Return _InventoryJournalInID
        End Get
        Set
            OnInventoryJournalInIDChanging(value)
            ReportPropertyChanging("InventoryJournalInID")
            _InventoryJournalInID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InventoryJournalInID")
            OnInventoryJournalInIDChanged()
        End Set
    End Property

    Private _InventoryJournalInID As Global.System.String
    Private Partial Sub OnInventoryJournalInIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalInIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property FromLocation() As Global.System.String
        Get
            Return _FromLocation
        End Get
        Set
            OnFromLocationChanging(value)
            ReportPropertyChanging("FromLocation")
            _FromLocation = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("FromLocation")
            OnFromLocationChanged()
        End Set
    End Property

    Private _FromLocation As Global.System.String
    Private Partial Sub OnFromLocationChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFromLocationChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ToLocation() As Global.System.String
        Get
            Return _ToLocation
        End Get
        Set
            OnToLocationChanging(value)
            ReportPropertyChanging("ToLocation")
            _ToLocation = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("ToLocation")
            OnToLocationChanged()
        End Set
    End Property

    Private _ToLocation As Global.System.String
    Private Partial Sub OnToLocationChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnToLocationChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Remark() As Global.System.String
        Get
            Return _Remark
        End Get
        Set
            OnRemarkChanging(value)
            ReportPropertyChanging("Remark")
            _Remark = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Remark")
            OnRemarkChanged()
        End Set
    End Property

    Private _Remark As Global.System.String
    Private Partial Sub OnRemarkChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRemarkChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_InventoryJournals", "InventoryJournal")>
    Public Property InventoryJournal() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_InventoryJournals", "InventoryJournal").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_InventoryJournals", "InventoryJournal").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalReference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_InventoryJournals", "InventoryJournal")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_InventoryJournals", "InventoryJournal", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_Locations", "InventoryJournal")>
    Public Property InventoryJournal1() As InventoryJournal
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_Locations", "InventoryJournal").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_Locations", "InventoryJournal").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournal1Reference() As EntityReference(Of InventoryJournal)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_Locations", "InventoryJournal")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournal)("LMISModel.FK_Transfers_Locations", "InventoryJournal", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_Locations1", "Location")>
    Public Property Location() As Location
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("LMISModel.FK_Transfers_Locations1", "Location").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("LMISModel.FK_Transfers_Locations1", "Location").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property LocationReference() As EntityReference(Of Location)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Location)("LMISModel.FK_Transfers_Locations1", "Location")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Location)("LMISModel.FK_Transfers_Locations1", "Location", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_Transfers", "Transfer1")>
    Public Property Transfers1() As Transfer
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer1").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer1").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property Transfers1Reference() As EntityReference(Of Transfer)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer1")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer1", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Transfers_Transfers", "Transfer")>
    Public Property Transfer1() As Transfer
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property Transfer1Reference() As EntityReference(Of Transfer)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Transfer)("LMISModel.FK_Transfers_Transfers", "Transfer", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetail_Transfers", "TransferDetail")>
     Public Property TransferDetails() As EntityCollection(Of TransferDetail)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of TransferDetail)("LMISModel.FK_TransferDetail_Transfers", "TransferDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of TransferDetail)("LMISModel.FK_TransferDetail_Transfers", "TransferDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="TransferDetail")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TransferDetail
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TransferDetail object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    Public Shared Function CreateTransferDetail(id As Global.System.Int32) As TransferDetail
        Dim transferDetail as TransferDetail = New TransferDetail
        transferDetail.ID = id
        Return transferDetail
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TransaferID() As Global.System.String
        Get
            Return _TransaferID
        End Get
        Set
            OnTransaferIDChanging(value)
            ReportPropertyChanging("TransaferID")
            _TransaferID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("TransaferID")
            OnTransaferIDChanged()
        End Set
    End Property

    Private _TransaferID As Global.System.String
    Private Partial Sub OnTransaferIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnTransaferIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetail_Transfers", "Transfer")>
    Public Property Transfer() As Transfer
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_TransferDetail_Transfers", "Transfer").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_TransferDetail_Transfers", "Transfer").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TransferReference() As EntityReference(Of Transfer)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Transfer)("LMISModel.FK_TransferDetail_Transfers", "Transfer")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Transfer)("LMISModel.FK_TransferDetail_Transfers", "Transfer", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailIN_TransferDetail", "TransferDetailIN")>
     Public Property TransferDetailINs() As EntityCollection(Of TransferDetailIN)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of TransferDetailIN)("LMISModel.FK_TransferDetailIN_TransferDetail", "TransferDetailIN")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of TransferDetailIN)("LMISModel.FK_TransferDetailIN_TransferDetail", "TransferDetailIN", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailOut_TransferDetail", "TransferDetailOut")>
     Public Property TransferDetailOuts() As EntityCollection(Of TransferDetailOut)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of TransferDetailOut)("LMISModel.FK_TransferDetailOut_TransferDetail", "TransferDetailOut")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of TransferDetailOut)("LMISModel.FK_TransferDetailOut_TransferDetail", "TransferDetailOut", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="TransferDetailIN")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TransferDetailIN
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TransferDetailIN object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    Public Shared Function CreateTransferDetailIN(id As Global.System.Int32) As TransferDetailIN
        Dim transferDetailIN as TransferDetailIN = New TransferDetailIN
        transferDetailIN.ID = id
        Return transferDetailIN
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TransferDetailID() As Nullable(Of Global.System.Int32)
        Get
            Return _TransferDetailID
        End Get
        Set
            OnTransferDetailIDChanging(value)
            ReportPropertyChanging("TransferDetailID")
            _TransferDetailID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TransferDetailID")
            OnTransferDetailIDChanged()
        End Set
    End Property

    Private _TransferDetailID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnTransferDetailIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnTransferDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailID() As Nullable(Of Global.System.Int32)
        Get
            Return _InventoryJournalDetailID
        End Get
        Set
            OnInventoryJournalDetailIDChanging(value)
            ReportPropertyChanging("InventoryJournalDetailID")
            _InventoryJournalDetailID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournalDetailID")
            OnInventoryJournalDetailIDChanged()
        End Set
    End Property

    Private _InventoryJournalDetailID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnInventoryJournalDetailIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnInventoryJournalDetailIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailIN_InventoryJournalDetails", "InventoryJournalDetail")>
    Public Property InventoryJournalDetail() As InventoryJournalDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailIN_InventoryJournalDetails", "InventoryJournalDetail").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailIN_InventoryJournalDetails", "InventoryJournalDetail").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailReference() As EntityReference(Of InventoryJournalDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailIN_InventoryJournalDetails", "InventoryJournalDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailIN_InventoryJournalDetails", "InventoryJournalDetail", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailIN_TransferDetail", "TransferDetail")>
    Public Property TransferDetail() As TransferDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailIN_TransferDetail", "TransferDetail").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailIN_TransferDetail", "TransferDetail").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TransferDetailReference() As EntityReference(Of TransferDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailIN_TransferDetail", "TransferDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailIN_TransferDetail", "TransferDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="TransferDetailOut")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TransferDetailOut
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TransferDetailOut object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    Public Shared Function CreateTransferDetailOut(id As Global.System.Int32) As TransferDetailOut
        Dim transferDetailOut as TransferDetailOut = New TransferDetailOut
        transferDetailOut.ID = id
        Return transferDetailOut
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TransferDetailID() As Nullable(Of Global.System.Int32)
        Get
            Return _TransferDetailID
        End Get
        Set
            OnTransferDetailIDChanging(value)
            ReportPropertyChanging("TransferDetailID")
            _TransferDetailID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TransferDetailID")
            OnTransferDetailIDChanged()
        End Set
    End Property

    Private _TransferDetailID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnTransferDetailIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnTransferDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailID() As Nullable(Of Global.System.Int32)
        Get
            Return _InventoryJournalDetailID
        End Get
        Set
            OnInventoryJournalDetailIDChanging(value)
            ReportPropertyChanging("InventoryJournalDetailID")
            _InventoryJournalDetailID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InventoryJournalDetailID")
            OnInventoryJournalDetailIDChanged()
        End Set
    End Property

    Private _InventoryJournalDetailID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnInventoryJournalDetailIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnInventoryJournalDetailIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailOut_InventoryJournalDetails", "InventoryJournalDetail")>
    Public Property InventoryJournalDetail() As InventoryJournalDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailOut_InventoryJournalDetails", "InventoryJournalDetail").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailOut_InventoryJournalDetails", "InventoryJournalDetail").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InventoryJournalDetailReference() As EntityReference(Of InventoryJournalDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailOut_InventoryJournalDetails", "InventoryJournalDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of InventoryJournalDetail)("LMISModel.FK_TransferDetailOut_InventoryJournalDetails", "InventoryJournalDetail", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_TransferDetailOut_TransferDetail", "TransferDetail")>
    Public Property TransferDetail() As TransferDetail
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailOut_TransferDetail", "TransferDetail").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailOut_TransferDetail", "TransferDetail").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TransferDetailReference() As EntityReference(Of TransferDetail)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailOut_TransferDetail", "TransferDetail")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of TransferDetail)("LMISModel.FK_TransferDetailOut_TransferDetail", "TransferDetail", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="TransfersView")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TransfersView
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TransfersView object.
    ''' </summary>
    ''' <param name="date">Initial value of the Date property.</param>
    ''' <param name="item_ID">Initial value of the Item_ID property.</param>
    ''' <param name="item_Name">Initial value of the Item_Name property.</param>
    ''' <param name="batch_No">Initial value of the Batch_No property.</param>
    ''' <param name="quantity">Initial value of the Quantity property.</param>
    ''' <param name="unit">Initial value of the Unit property.</param>
    ''' <param name="uPrice">Initial value of the UPrice property.</param>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="toStore">Initial value of the ToStore property.</param>
    ''' <param name="toLocation">Initial value of the ToLocation property.</param>
    ''' <param name="fromLocationID">Initial value of the FromLocationID property.</param>
    ''' <param name="fromStore">Initial value of the FromStore property.</param>
    ''' <param name="fromLocation">Initial value of the FromLocation property.</param>
    ''' <param name="toLocationID">Initial value of the ToLocationID property.</param>
    ''' <param name="iJDetIn">Initial value of the IJDetIn property.</param>
    ''' <param name="iJDetout">Initial value of the IJDetout property.</param>
    ''' <param name="transDetailID">Initial value of the transDetailID property.</param>
    ''' <param name="inventoryJournalOutID">Initial value of the InventoryJournalOutID property.</param>
    ''' <param name="inventoryJournalInID">Initial value of the InventoryJournalInID property.</param>
    Public Shared Function CreateTransfersView([date] As Global.System.DateTime, item_ID As Global.System.String, item_Name As Global.System.String, batch_No As Global.System.String, quantity As Global.System.Decimal, unit As Global.System.String, uPrice As Global.System.Decimal, id As Global.System.String, toStore As Global.System.String, toLocation As Global.System.String, fromLocationID As Global.System.String, fromStore As Global.System.String, fromLocation As Global.System.String, toLocationID As Global.System.String, iJDetIn As Global.System.Int32, iJDetout As Global.System.Int32, transDetailID As Global.System.Int32, inventoryJournalOutID As Global.System.String, inventoryJournalInID As Global.System.String) As TransfersView
        Dim transfersView as TransfersView = New TransfersView
        transfersView.[Date] = [date]
        transfersView.Item_ID = item_ID
        transfersView.Item_Name = item_Name
        transfersView.Batch_No = batch_No
        transfersView.Quantity = quantity
        transfersView.Unit = unit
        transfersView.UPrice = uPrice
        transfersView.ID = id
        transfersView.ToStore = toStore
        transfersView.ToLocation = toLocation
        transfersView.FromLocationID = fromLocationID
        transfersView.FromStore = fromStore
        transfersView.FromLocation = fromLocation
        transfersView.ToLocationID = toLocationID
        transfersView.IJDetIn = iJDetIn
        transfersView.IJDetout = iJDetout
        transfersView.transDetailID = transDetailID
        transfersView.InventoryJournalOutID = inventoryJournalOutID
        transfersView.InventoryJournalInID = inventoryJournalInID
        Return transfersView
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property [Date]() As Global.System.DateTime
        Get
            Return _Date
        End Get
        Set
            If (_Date <> Value) Then
                OnDateChanging(value)
                ReportPropertyChanging("Date")
                _Date = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Date")
                OnDateChanged()
            End If
        End Set
    End Property

    Private _Date As Global.System.DateTime
    Private Partial Sub OnDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Remark() As Global.System.String
        Get
            Return _Remark
        End Get
        Set
            OnRemarkChanging(value)
            ReportPropertyChanging("Remark")
            _Remark = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Remark")
            OnRemarkChanged()
        End Set
    End Property

    Private _Remark As Global.System.String
    Private Partial Sub OnRemarkChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRemarkChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_ID() As Global.System.String
        Get
            Return _Item_ID
        End Get
        Set
            If (_Item_ID <> Value) Then
                OnItem_IDChanging(value)
                ReportPropertyChanging("Item_ID")
                _Item_ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Item_ID")
                OnItem_IDChanged()
            End If
        End Set
    End Property

    Private _Item_ID As Global.System.String
    Private Partial Sub OnItem_IDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_IDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_Name() As Global.System.String
        Get
            Return _Item_Name
        End Get
        Set
            If (_Item_Name <> Value) Then
                OnItem_NameChanging(value)
                ReportPropertyChanging("Item_Name")
                _Item_Name = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Item_Name")
                OnItem_NameChanged()
            End If
        End Set
    End Property

    Private _Item_Name As Global.System.String
    Private Partial Sub OnItem_NameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_NameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Batch_No() As Global.System.String
        Get
            Return _Batch_No
        End Get
        Set
            If (_Batch_No <> Value) Then
                OnBatch_NoChanging(value)
                ReportPropertyChanging("Batch_No")
                _Batch_No = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Batch_No")
                OnBatch_NoChanged()
            End If
        End Set
    End Property

    Private _Batch_No As Global.System.String
    Private Partial Sub OnBatch_NoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBatch_NoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ExpireDate() As Nullable(Of Global.System.DateTime)
        Get
            Return _ExpireDate
        End Get
        Set
            OnExpireDateChanging(value)
            ReportPropertyChanging("ExpireDate")
            _ExpireDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ExpireDate")
            OnExpireDateChanged()
        End Set
    End Property

    Private _ExpireDate As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnExpireDateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnExpireDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Quantity() As Global.System.Decimal
        Get
            Return _Quantity
        End Get
        Set
            If (_Quantity <> Value) Then
                OnQuantityChanging(value)
                ReportPropertyChanging("Quantity")
                _Quantity = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Quantity")
                OnQuantityChanged()
            End If
        End Set
    End Property

    Private _Quantity As Global.System.Decimal
    Private Partial Sub OnQuantityChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnQuantityChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Unit() As Global.System.String
        Get
            Return _Unit
        End Get
        Set
            If (_Unit <> Value) Then
                OnUnitChanging(value)
                ReportPropertyChanging("Unit")
                _Unit = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Unit")
                OnUnitChanged()
            End If
        End Set
    End Property

    Private _Unit As Global.System.String
    Private Partial Sub OnUnitChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnUnitChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property UPrice() As Global.System.Decimal
        Get
            Return _UPrice
        End Get
        Set
            If (_UPrice <> Value) Then
                OnUPriceChanging(value)
                ReportPropertyChanging("UPrice")
                _UPrice = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("UPrice")
                OnUPriceChanged()
            End If
        End Set
    End Property

    Private _UPrice As Global.System.Decimal
    Private Partial Sub OnUPriceChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnUPriceChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TPrice() As Nullable(Of Global.System.Decimal)
        Get
            Return _TPrice
        End Get
        Set
            OnTPriceChanging(value)
            ReportPropertyChanging("TPrice")
            _TPrice = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TPrice")
            OnTPriceChanged()
        End Set
    End Property

    Private _TPrice As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnTPriceChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnTPriceChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ToStore() As Global.System.String
        Get
            Return _ToStore
        End Get
        Set
            If (_ToStore <> Value) Then
                OnToStoreChanging(value)
                ReportPropertyChanging("ToStore")
                _ToStore = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ToStore")
                OnToStoreChanged()
            End If
        End Set
    End Property

    Private _ToStore As Global.System.String
    Private Partial Sub OnToStoreChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnToStoreChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ToLocation() As Global.System.String
        Get
            Return _ToLocation
        End Get
        Set
            If (_ToLocation <> Value) Then
                OnToLocationChanging(value)
                ReportPropertyChanging("ToLocation")
                _ToLocation = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ToLocation")
                OnToLocationChanged()
            End If
        End Set
    End Property

    Private _ToLocation As Global.System.String
    Private Partial Sub OnToLocationChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnToLocationChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FromLocationID() As Global.System.String
        Get
            Return _FromLocationID
        End Get
        Set
            If (_FromLocationID <> Value) Then
                OnFromLocationIDChanging(value)
                ReportPropertyChanging("FromLocationID")
                _FromLocationID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("FromLocationID")
                OnFromLocationIDChanged()
            End If
        End Set
    End Property

    Private _FromLocationID As Global.System.String
    Private Partial Sub OnFromLocationIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFromLocationIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FromStore() As Global.System.String
        Get
            Return _FromStore
        End Get
        Set
            If (_FromStore <> Value) Then
                OnFromStoreChanging(value)
                ReportPropertyChanging("FromStore")
                _FromStore = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("FromStore")
                OnFromStoreChanged()
            End If
        End Set
    End Property

    Private _FromStore As Global.System.String
    Private Partial Sub OnFromStoreChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFromStoreChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property FromLocation() As Global.System.String
        Get
            Return _FromLocation
        End Get
        Set
            If (_FromLocation <> Value) Then
                OnFromLocationChanging(value)
                ReportPropertyChanging("FromLocation")
                _FromLocation = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("FromLocation")
                OnFromLocationChanged()
            End If
        End Set
    End Property

    Private _FromLocation As Global.System.String
    Private Partial Sub OnFromLocationChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFromLocationChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ToLocationID() As Global.System.String
        Get
            Return _ToLocationID
        End Get
        Set
            If (_ToLocationID <> Value) Then
                OnToLocationIDChanging(value)
                ReportPropertyChanging("ToLocationID")
                _ToLocationID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ToLocationID")
                OnToLocationIDChanged()
            End If
        End Set
    End Property

    Private _ToLocationID As Global.System.String
    Private Partial Sub OnToLocationIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnToLocationIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IJDetIn() As Global.System.Int32
        Get
            Return _IJDetIn
        End Get
        Set
            If (_IJDetIn <> Value) Then
                OnIJDetInChanging(value)
                ReportPropertyChanging("IJDetIn")
                _IJDetIn = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("IJDetIn")
                OnIJDetInChanged()
            End If
        End Set
    End Property

    Private _IJDetIn As Global.System.Int32
    Private Partial Sub OnIJDetInChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIJDetInChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property IJDetout() As Global.System.Int32
        Get
            Return _IJDetout
        End Get
        Set
            If (_IJDetout <> Value) Then
                OnIJDetoutChanging(value)
                ReportPropertyChanging("IJDetout")
                _IJDetout = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("IJDetout")
                OnIJDetoutChanged()
            End If
        End Set
    End Property

    Private _IJDetout As Global.System.Int32
    Private Partial Sub OnIJDetoutChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIJDetoutChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property transDetailID() As Global.System.Int32
        Get
            Return _transDetailID
        End Get
        Set
            If (_transDetailID <> Value) Then
                OntransDetailIDChanging(value)
                ReportPropertyChanging("transDetailID")
                _transDetailID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("transDetailID")
                OntransDetailIDChanged()
            End If
        End Set
    End Property

    Private _transDetailID As Global.System.Int32
    Private Partial Sub OntransDetailIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OntransDetailIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalOutID() As Global.System.String
        Get
            Return _InventoryJournalOutID
        End Get
        Set
            If (_InventoryJournalOutID <> Value) Then
                OnInventoryJournalOutIDChanging(value)
                ReportPropertyChanging("InventoryJournalOutID")
                _InventoryJournalOutID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("InventoryJournalOutID")
                OnInventoryJournalOutIDChanged()
            End If
        End Set
    End Property

    Private _InventoryJournalOutID As Global.System.String
    Private Partial Sub OnInventoryJournalOutIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalOutIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InventoryJournalInID() As Global.System.String
        Get
            Return _InventoryJournalInID
        End Get
        Set
            If (_InventoryJournalInID <> Value) Then
                OnInventoryJournalInIDChanging(value)
                ReportPropertyChanging("InventoryJournalInID")
                _InventoryJournalInID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("InventoryJournalInID")
                OnInventoryJournalInIDChanged()
            End If
        End Set
    End Property

    Private _InventoryJournalInID As Global.System.String
    Private Partial Sub OnInventoryJournalInIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInventoryJournalInIDChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Unit")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Unit
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Unit object.
    ''' </summary>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="amountPerUnit">Initial value of the AmountPerUnit property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateUnit(id As Global.System.Int32, name As Global.System.String, amountPerUnit As Global.System.Decimal, active As Global.System.Boolean) As Unit
        Dim unit as Unit = New Unit
        unit.ID = id
        unit.Name = name
        unit.AmountPerUnit = amountPerUnit
        unit.Active = active
        Return unit
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.Int32
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.Int32
    Private Partial Sub OnIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AmountPerUnit() As Global.System.Decimal
        Get
            Return _AmountPerUnit
        End Get
        Set
            OnAmountPerUnitChanging(value)
            ReportPropertyChanging("AmountPerUnit")
            _AmountPerUnit = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("AmountPerUnit")
            OnAmountPerUnitChanged()
        End Set
    End Property

    Private _AmountPerUnit As Global.System.Decimal
    Private Partial Sub OnAmountPerUnitChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnAmountPerUnitChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_InventoryItems_Units", "InventoryItems")>
     Public Property InventoryItems() As EntityCollection(Of InventoryItem)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of InventoryItem)("LMISModel.FK_InventoryItems_Units", "InventoryItems")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of InventoryItem)("LMISModel.FK_InventoryItems_Units", "InventoryItems", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Village")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Village
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Village object.
    ''' </summary>
    ''' <param name="villageID">Initial value of the VillageID property.</param>
    ''' <param name="villageName">Initial value of the VillageName property.</param>
    ''' <param name="subZoneID">Initial value of the SubZoneID property.</param>
    Public Shared Function CreateVillage(villageID As Global.System.Decimal, villageName As Global.System.String, subZoneID As Global.System.Int32) As Village
        Dim village as Village = New Village
        village.VillageID = villageID
        village.VillageName = villageName
        village.SubZoneID = subZoneID
        Return village
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property VillageID() As Global.System.Decimal
        Get
            Return _VillageID
        End Get
        Set
            If (_VillageID <> Value) Then
                OnVillageIDChanging(value)
                ReportPropertyChanging("VillageID")
                _VillageID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("VillageID")
                OnVillageIDChanged()
            End If
        End Set
    End Property

    Private _VillageID As Global.System.Decimal
    Private Partial Sub OnVillageIDChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnVillageIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property VillageName() As Global.System.String
        Get
            Return _VillageName
        End Get
        Set
            OnVillageNameChanging(value)
            ReportPropertyChanging("VillageName")
            _VillageName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("VillageName")
            OnVillageNameChanged()
        End Set
    End Property

    Private _VillageName As Global.System.String
    Private Partial Sub OnVillageNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnVillageNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SubZoneID() As Global.System.Int32
        Get
            Return _SubZoneID
        End Get
        Set
            OnSubZoneIDChanging(value)
            ReportPropertyChanging("SubZoneID")
            _SubZoneID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SubZoneID")
            OnSubZoneIDChanged()
        End Set
    End Property

    Private _SubZoneID As Global.System.Int32
    Private Partial Sub OnSubZoneIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnSubZoneIDChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Facility_Village", "Facility")>
     Public Property Facilities() As EntityCollection(Of Facility)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Facility)("LMISModel.FK_Facility_Village", "Facility")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Facility)("LMISModel.FK_Facility_Village", "Facility", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_Village_SubZone", "SubZone")>
    Public Property SubZone() As SubZone
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SubZone)("LMISModel.FK_Village_SubZone", "SubZone").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SubZone)("LMISModel.FK_Village_SubZone", "SubZone").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property SubZoneReference() As EntityReference(Of SubZone)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of SubZone)("LMISModel.FK_Village_SubZone", "SubZone")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of SubZone)("LMISModel.FK_Village_SubZone", "SubZone", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="VW_ItemBatchQty")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class VW_ItemBatchQty
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new VW_ItemBatchQty object.
    ''' </summary>
    ''' <param name="item_ID">Initial value of the Item_ID property.</param>
    ''' <param name="item_Name">Initial value of the Item_Name property.</param>
    ''' <param name="id">Initial value of the ID property.</param>
    ''' <param name="categoryID">Initial value of the CategoryID property.</param>
    ''' <param name="categoryName">Initial value of the CategoryName property.</param>
    Public Shared Function CreateVW_ItemBatchQty(item_ID As Global.System.String, item_Name As Global.System.String, id As Global.System.String, categoryID As Global.System.Int32, categoryName As Global.System.String) As VW_ItemBatchQty
        Dim vW_ItemBatchQty as VW_ItemBatchQty = New VW_ItemBatchQty
        vW_ItemBatchQty.Item_ID = item_ID
        vW_ItemBatchQty.Item_Name = item_Name
        vW_ItemBatchQty.ID = id
        vW_ItemBatchQty.CategoryID = categoryID
        vW_ItemBatchQty.CategoryName = categoryName
        Return vW_ItemBatchQty
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_ID() As Global.System.String
        Get
            Return _Item_ID
        End Get
        Set
            If (_Item_ID <> Value) Then
                OnItem_IDChanging(value)
                ReportPropertyChanging("Item_ID")
                _Item_ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Item_ID")
                OnItem_IDChanged()
            End If
        End Set
    End Property

    Private _Item_ID As Global.System.String
    Private Partial Sub OnItem_IDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_IDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_Name() As Global.System.String
        Get
            Return _Item_Name
        End Get
        Set
            If (_Item_Name <> Value) Then
                OnItem_NameChanging(value)
                ReportPropertyChanging("Item_Name")
                _Item_Name = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Item_Name")
                OnItem_NameChanged()
            End If
        End Set
    End Property

    Private _Item_Name As Global.System.String
    Private Partial Sub OnItem_NameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_NameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Quantity_Available() As Nullable(Of Global.System.Decimal)
        Get
            Return _Quantity_Available
        End Get
        Set
            OnQuantity_AvailableChanging(value)
            ReportPropertyChanging("Quantity_Available")
            _Quantity_Available = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Quantity_Available")
            OnQuantity_AvailableChanged()
        End Set
    End Property

    Private _Quantity_Available As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnQuantity_AvailableChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnQuantity_AvailableChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ReorderQty() As Nullable(Of Global.System.Decimal)
        Get
            Return _ReorderQty
        End Get
        Set
            OnReorderQtyChanging(value)
            ReportPropertyChanging("ReorderQty")
            _ReorderQty = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ReorderQty")
            OnReorderQtyChanged()
        End Set
    End Property

    Private _ReorderQty As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnReorderQtyChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnReorderQtyChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ID() As Global.System.String
        Get
            Return _ID
        End Get
        Set
            If (_ID <> Value) Then
                OnIDChanging(value)
                ReportPropertyChanging("ID")
                _ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ID")
                OnIDChanged()
            End If
        End Set
    End Property

    Private _ID As Global.System.String
    Private Partial Sub OnIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TCost() As Nullable(Of Global.System.Decimal)
        Get
            Return _TCost
        End Get
        Set
            OnTCostChanging(value)
            ReportPropertyChanging("TCost")
            _TCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TCost")
            OnTCostChanged()
        End Set
    End Property

    Private _TCost As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnTCostChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnTCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CategoryID() As Global.System.Int32
        Get
            Return _CategoryID
        End Get
        Set
            If (_CategoryID <> Value) Then
                OnCategoryIDChanging(value)
                ReportPropertyChanging("CategoryID")
                _CategoryID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("CategoryID")
                OnCategoryIDChanged()
            End If
        End Set
    End Property

    Private _CategoryID As Global.System.Int32
    Private Partial Sub OnCategoryIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCategoryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CategoryName() As Global.System.String
        Get
            Return _CategoryName
        End Get
        Set
            If (_CategoryName <> Value) Then
                OnCategoryNameChanging(value)
                ReportPropertyChanging("CategoryName")
                _CategoryName = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("CategoryName")
                OnCategoryNameChanged()
            End If
        End Set
    End Property

    Private _CategoryName As Global.System.String
    Private Partial Sub OnCategoryNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnCategoryNameChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="VW_ItemQty")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class VW_ItemQty
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new VW_ItemQty object.
    ''' </summary>
    ''' <param name="item_ID">Initial value of the Item_ID property.</param>
    ''' <param name="item_Name">Initial value of the Item_Name property.</param>
    ''' <param name="categoryID">Initial value of the CategoryID property.</param>
    ''' <param name="categoryName">Initial value of the CategoryName property.</param>
    Public Shared Function CreateVW_ItemQty(item_ID As Global.System.String, item_Name As Global.System.String, categoryID As Global.System.Int32, categoryName As Global.System.String) As VW_ItemQty
        Dim vW_ItemQty as VW_ItemQty = New VW_ItemQty
        vW_ItemQty.Item_ID = item_ID
        vW_ItemQty.Item_Name = item_Name
        vW_ItemQty.CategoryID = categoryID
        vW_ItemQty.CategoryName = categoryName
        Return vW_ItemQty
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_ID() As Global.System.String
        Get
            Return _Item_ID
        End Get
        Set
            If (_Item_ID <> Value) Then
                OnItem_IDChanging(value)
                ReportPropertyChanging("Item_ID")
                _Item_ID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Item_ID")
                OnItem_IDChanged()
            End If
        End Set
    End Property

    Private _Item_ID As Global.System.String
    Private Partial Sub OnItem_IDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_IDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_Name() As Global.System.String
        Get
            Return _Item_Name
        End Get
        Set
            If (_Item_Name <> Value) Then
                OnItem_NameChanging(value)
                ReportPropertyChanging("Item_Name")
                _Item_Name = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("Item_Name")
                OnItem_NameChanged()
            End If
        End Set
    End Property

    Private _Item_Name As Global.System.String
    Private Partial Sub OnItem_NameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_NameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Quantity_Available() As Nullable(Of Global.System.Decimal)
        Get
            Return _Quantity_Available
        End Get
        Set
            OnQuantity_AvailableChanging(value)
            ReportPropertyChanging("Quantity_Available")
            _Quantity_Available = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Quantity_Available")
            OnQuantity_AvailableChanged()
        End Set
    End Property

    Private _Quantity_Available As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnQuantity_AvailableChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnQuantity_AvailableChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ReorderQty() As Nullable(Of Global.System.Decimal)
        Get
            Return _ReorderQty
        End Get
        Set
            OnReorderQtyChanging(value)
            ReportPropertyChanging("ReorderQty")
            _ReorderQty = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ReorderQty")
            OnReorderQtyChanged()
        End Set
    End Property

    Private _ReorderQty As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnReorderQtyChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnReorderQtyChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TCost() As Nullable(Of Global.System.Decimal)
        Get
            Return _TCost
        End Get
        Set
            OnTCostChanging(value)
            ReportPropertyChanging("TCost")
            _TCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TCost")
            OnTCostChanged()
        End Set
    End Property

    Private _TCost As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnTCostChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnTCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CategoryID() As Global.System.Int32
        Get
            Return _CategoryID
        End Get
        Set
            If (_CategoryID <> Value) Then
                OnCategoryIDChanging(value)
                ReportPropertyChanging("CategoryID")
                _CategoryID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("CategoryID")
                OnCategoryIDChanged()
            End If
        End Set
    End Property

    Private _CategoryID As Global.System.Int32
    Private Partial Sub OnCategoryIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnCategoryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property CategoryName() As Global.System.String
        Get
            Return _CategoryName
        End Get
        Set
            If (_CategoryName <> Value) Then
                OnCategoryNameChanging(value)
                ReportPropertyChanging("CategoryName")
                _CategoryName = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("CategoryName")
                OnCategoryNameChanged()
            End If
        End Set
    End Property

    Private _CategoryName As Global.System.String
    Private Partial Sub OnCategoryNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnCategoryNameChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="VW_ItemZeroDate")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class VW_ItemZeroDate
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new VW_ItemZeroDate object.
    ''' </summary>
    ''' <param name="itemID">Initial value of the ItemID property.</param>
    Public Shared Function CreateVW_ItemZeroDate(itemID As Global.System.String) As VW_ItemZeroDate
        Dim vW_ItemZeroDate as VW_ItemZeroDate = New VW_ItemZeroDate
        vW_ItemZeroDate.ItemID = itemID
        Return vW_ItemZeroDate
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ItemID() As Global.System.String
        Get
            Return _ItemID
        End Get
        Set
            If (_ItemID <> Value) Then
                OnItemIDChanging(value)
                ReportPropertyChanging("ItemID")
                _ItemID = StructuralObject.SetValidValue(value, false)
                ReportPropertyChanged("ItemID")
                OnItemIDChanged()
            End If
        End Set
    End Property

    Private _ItemID As Global.System.String
    Private Partial Sub OnItemIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItemIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ZeroDate() As Nullable(Of Global.System.DateTime)
        Get
            Return _ZeroDate
        End Get
        Set
            OnZeroDateChanging(value)
            ReportPropertyChanging("ZeroDate")
            _ZeroDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ZeroDate")
            OnZeroDateChanged()
        End Set
    End Property

    Private _ZeroDate As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnZeroDateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnZeroDateChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="LMISModel", Name:="Zone")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Zone
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Zone object.
    ''' </summary>
    ''' <param name="zoneID">Initial value of the ZoneID property.</param>
    ''' <param name="zoneName">Initial value of the ZoneName property.</param>
    Public Shared Function CreateZone(zoneID As Global.System.Int32, zoneName As Global.System.String) As Zone
        Dim zone as Zone = New Zone
        zone.ZoneID = zoneID
        zone.ZoneName = zoneName
        Return zone
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ZoneID() As Global.System.Int32
        Get
            Return _ZoneID
        End Get
        Set
            If (_ZoneID <> Value) Then
                OnZoneIDChanging(value)
                ReportPropertyChanging("ZoneID")
                _ZoneID = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("ZoneID")
                OnZoneIDChanged()
            End If
        End Set
    End Property

    Private _ZoneID As Global.System.Int32
    Private Partial Sub OnZoneIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnZoneIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ZoneName() As Global.System.String
        Get
            Return _ZoneName
        End Get
        Set
            OnZoneNameChanging(value)
            ReportPropertyChanging("ZoneName")
            _ZoneName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ZoneName")
            OnZoneNameChanged()
        End Set
    End Property

    Private _ZoneName As Global.System.String
    Private Partial Sub OnZoneNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnZoneNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminIPD_Zone", "PaymentAdminIPD")>
     Public Property PaymentAdminIPDs() As EntityCollection(Of PaymentAdminIPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of PaymentAdminIPD)("LMISModel.FK_PaymentAdminIPD_Zone", "PaymentAdminIPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PaymentAdminIPD)("LMISModel.FK_PaymentAdminIPD_Zone", "PaymentAdminIPD", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_PaymentAdminOPD_Zone", "PaymentAdminOPD")>
     Public Property PaymentAdminOPDs() As EntityCollection(Of PaymentAdminOPD)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of PaymentAdminOPD)("LMISModel.FK_PaymentAdminOPD_Zone", "PaymentAdminOPD")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of PaymentAdminOPD)("LMISModel.FK_PaymentAdminOPD_Zone", "PaymentAdminOPD", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("LMISModel", "FK_SubZone_Zone", "SubZone")>
     Public Property SubZones() As EntityCollection(Of SubZone)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of SubZone)("LMISModel.FK_SubZone_Zone", "SubZone")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of SubZone)("LMISModel.FK_SubZone_Zone", "SubZone", value)
            End If
        End Set
    End Property

    #End Region

End Class

#End Region

#Region "ComplexTypes"

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmComplexTypeAttribute(NamespaceName:="LMISModel", Name:="SP_IJSearch_Result")>
<DataContractAttribute(IsReference:=True)>
<Serializable()>
Public Partial Class SP_IJSearch_Result
    Inherits ComplexObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new SP_IJSearch_Result object.
    ''' </summary>
    ''' <param name="consumerID">Initial value of the ConsumerID property.</param>
    ''' <param name="consumerEriID">Initial value of the ConsumerEriID property.</param>
    ''' <param name="consumerName">Initial value of the ConsumerName property.</param>
    ''' <param name="stock_Code">Initial value of the Stock_Code property.</param>
    ''' <param name="stock_Name">Initial value of the Stock_Name property.</param>
    ''' <param name="unit">Initial value of the Unit property.</param>
    ''' <param name="quantity">Initial value of the Quantity property.</param>
    ''' <param name="invCategoryID">Initial value of the InvCategoryID property.</param>
    ''' <param name="invCategoryName">Initial value of the InvCategoryName property.</param>
    ''' <param name="classificationID">Initial value of the ClassificationID property.</param>
    ''' <param name="classificationName">Initial value of the ClassificationName property.</param>
    ''' <param name="subClassificationID">Initial value of the SubClassificationID property.</param>
    ''' <param name="subClassificationName">Initial value of the SubClassificationName property.</param>
    ''' <param name="adjType">Initial value of the AdjType property.</param>
    ''' <param name="adjDescription">Initial value of the AdjDescription property.</param>
    ''' <param name="payment_Type">Initial value of the Payment_Type property.</param>
    ''' <param name="sick_Payee_Company">Initial value of the Sick_Payee_Company property.</param>
    ''' <param name="supply_Period">Initial value of the Supply_Period property.</param>
    Public Shared Function CreateSP_IJSearch_Result(consumerID As Global.System.String, consumerEriID As Global.System.String, consumerName As Global.System.String, stock_Code As Global.System.String, stock_Name As Global.System.String, unit As Global.System.String, quantity As Global.System.Decimal, invCategoryID As Global.System.Int32, invCategoryName As Global.System.String, classificationID As Global.System.Int32, classificationName As Global.System.String, subClassificationID As Global.System.Int32, subClassificationName As Global.System.String, adjType As Global.System.String, adjDescription As Global.System.String, payment_Type As Global.System.String, sick_Payee_Company As Global.System.String, supply_Period As Global.System.String) As SP_IJSearch_Result
        Dim sP_IJSearch_Result as SP_IJSearch_Result = New SP_IJSearch_Result
        sP_IJSearch_Result.ConsumerID = consumerID
        sP_IJSearch_Result.ConsumerEriID = consumerEriID
        sP_IJSearch_Result.ConsumerName = consumerName
        sP_IJSearch_Result.Stock_Code = stock_Code
        sP_IJSearch_Result.Stock_Name = stock_Name
        sP_IJSearch_Result.Unit = unit
        sP_IJSearch_Result.Quantity = quantity
        sP_IJSearch_Result.InvCategoryID = invCategoryID
        sP_IJSearch_Result.InvCategoryName = invCategoryName
        sP_IJSearch_Result.ClassificationID = classificationID
        sP_IJSearch_Result.ClassificationName = classificationName
        sP_IJSearch_Result.SubClassificationID = subClassificationID
        sP_IJSearch_Result.SubClassificationName = subClassificationName
        sP_IJSearch_Result.AdjType = adjType
        sP_IJSearch_Result.AdjDescription = adjDescription
        sP_IJSearch_Result.Payment_Type = payment_Type
        sP_IJSearch_Result.Sick_Payee_Company = sick_Payee_Company
        sP_IJSearch_Result.Supply_Period = supply_Period
        Return sP_IJSearch_Result
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property IJID() As Global.System.String
        Get
            Return _IJID
        End Get
        Set
            OnIJIDChanging(value)
            ReportPropertyChanging("IJID")
            _IJID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("IJID")
            OnIJIDChanged()
        End Set
    End Property

    Private _IJID As Global.System.String
    Private Partial Sub OnIJIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIJIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property EmployeeID() As Global.System.String
        Get
            Return _EmployeeID
        End Get
        Set
            OnEmployeeIDChanging(value)
            ReportPropertyChanging("EmployeeID")
            _EmployeeID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("EmployeeID")
            OnEmployeeIDChanged()
        End Set
    End Property

    Private _EmployeeID As Global.System.String
    Private Partial Sub OnEmployeeIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnEmployeeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Void() As Nullable(Of Global.System.Boolean)
        Get
            Return _Void
        End Get
        Set
            OnVoidChanging(value)
            ReportPropertyChanging("Void")
            _Void = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Void")
            OnVoidChanged()
        End Set
    End Property

    Private _Void As Nullable(Of Global.System.Boolean)
    Private Partial Sub OnVoidChanging(value As Nullable(Of Global.System.Boolean))
    End Sub

    Private Partial Sub OnVoidChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Remark() As Global.System.String
        Get
            Return _Remark
        End Get
        Set
            OnRemarkChanging(value)
            ReportPropertyChanging("Remark")
            _Remark = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Remark")
            OnRemarkChanged()
        End Set
    End Property

    Private _Remark As Global.System.String
    Private Partial Sub OnRemarkChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRemarkChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property VoucherDate() As Nullable(Of Global.System.DateTime)
        Get
            Return _VoucherDate
        End Get
        Set
            OnVoucherDateChanging(value)
            ReportPropertyChanging("VoucherDate")
            _VoucherDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("VoucherDate")
            OnVoucherDateChanged()
        End Set
    End Property

    Private _VoucherDate As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnVoucherDateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnVoucherDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property VoucherMonth() As Nullable(Of Global.System.Int32)
        Get
            Return _VoucherMonth
        End Get
        Set
            OnVoucherMonthChanging(value)
            ReportPropertyChanging("VoucherMonth")
            _VoucherMonth = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("VoucherMonth")
            OnVoucherMonthChanged()
        End Set
    End Property

    Private _VoucherMonth As Nullable(Of Global.System.Int32)
    Private Partial Sub OnVoucherMonthChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnVoucherMonthChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property VoucherYear() As Nullable(Of Global.System.Int32)
        Get
            Return _VoucherYear
        End Get
        Set
            OnVoucherYearChanging(value)
            ReportPropertyChanging("VoucherYear")
            _VoucherYear = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("VoucherYear")
            OnVoucherYearChanged()
        End Set
    End Property

    Private _VoucherYear As Nullable(Of Global.System.Int32)
    Private Partial Sub OnVoucherYearChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnVoucherYearChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property IJTypeID() As Nullable(Of Global.System.Int32)
        Get
            Return _IJTypeID
        End Get
        Set
            OnIJTypeIDChanging(value)
            ReportPropertyChanging("IJTypeID")
            _IJTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("IJTypeID")
            OnIJTypeIDChanged()
        End Set
    End Property

    Private _IJTypeID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnIJTypeIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnIJTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property IJTypeName() As Global.System.String
        Get
            Return _IJTypeName
        End Get
        Set
            OnIJTypeNameChanging(value)
            ReportPropertyChanging("IJTypeName")
            _IJTypeName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("IJTypeName")
            OnIJTypeNameChanged()
        End Set
    End Property

    Private _IJTypeName As Global.System.String
    Private Partial Sub OnIJTypeNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIJTypeNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property IJTypeType() As Global.System.String
        Get
            Return _IJTypeType
        End Get
        Set
            OnIJTypeTypeChanging(value)
            ReportPropertyChanging("IJTypeType")
            _IJTypeType = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("IJTypeType")
            OnIJTypeTypeChanged()
        End Set
    End Property

    Private _IJTypeType As Global.System.String
    Private Partial Sub OnIJTypeTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIJTypeTypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property IJStatusID() As Nullable(Of Global.System.Int32)
        Get
            Return _IJStatusID
        End Get
        Set
            OnIJStatusIDChanging(value)
            ReportPropertyChanging("IJStatusID")
            _IJStatusID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("IJStatusID")
            OnIJStatusIDChanged()
        End Set
    End Property

    Private _IJStatusID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnIJStatusIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnIJStatusIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property IJStatusName() As Global.System.String
        Get
            Return _IJStatusName
        End Get
        Set
            OnIJStatusNameChanging(value)
            ReportPropertyChanging("IJStatusName")
            _IJStatusName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("IJStatusName")
            OnIJStatusNameChanged()
        End Set
    End Property

    Private _IJStatusName As Global.System.String
    Private Partial Sub OnIJStatusNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnIJStatusNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property PrimaryID() As Global.System.String
        Get
            Return _PrimaryID
        End Get
        Set
            OnPrimaryIDChanging(value)
            ReportPropertyChanging("PrimaryID")
            _PrimaryID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("PrimaryID")
            OnPrimaryIDChanged()
        End Set
    End Property

    Private _PrimaryID As Global.System.String
    Private Partial Sub OnPrimaryIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPrimaryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ReqID() As Global.System.String
        Get
            Return _ReqID
        End Get
        Set
            OnReqIDChanging(value)
            ReportPropertyChanging("ReqID")
            _ReqID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("ReqID")
            OnReqIDChanged()
        End Set
    End Property

    Private _ReqID As Global.System.String
    Private Partial Sub OnReqIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnReqIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property RefID() As Global.System.String
        Get
            Return _RefID
        End Get
        Set
            OnRefIDChanging(value)
            ReportPropertyChanging("RefID")
            _RefID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("RefID")
            OnRefIDChanged()
        End Set
    End Property

    Private _RefID As Global.System.String
    Private Partial Sub OnRefIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRefIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ConsumerID() As Global.System.String
        Get
            Return _ConsumerID
        End Get
        Set
            OnConsumerIDChanging(value)
            ReportPropertyChanging("ConsumerID")
            _ConsumerID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ConsumerID")
            OnConsumerIDChanged()
        End Set
    End Property

    Private _ConsumerID As Global.System.String
    Private Partial Sub OnConsumerIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnConsumerIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ConsumerEriID() As Global.System.String
        Get
            Return _ConsumerEriID
        End Get
        Set
            OnConsumerEriIDChanging(value)
            ReportPropertyChanging("ConsumerEriID")
            _ConsumerEriID = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ConsumerEriID")
            OnConsumerEriIDChanged()
        End Set
    End Property

    Private _ConsumerEriID As Global.System.String
    Private Partial Sub OnConsumerEriIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnConsumerEriIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ConsumerName() As Global.System.String
        Get
            Return _ConsumerName
        End Get
        Set
            OnConsumerNameChanging(value)
            ReportPropertyChanging("ConsumerName")
            _ConsumerName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ConsumerName")
            OnConsumerNameChanged()
        End Set
    End Property

    Private _ConsumerName As Global.System.String
    Private Partial Sub OnConsumerNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnConsumerNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property AdmissionDate() As Nullable(Of Global.System.DateTime)
        Get
            Return _AdmissionDate
        End Get
        Set
            OnAdmissionDateChanging(value)
            ReportPropertyChanging("AdmissionDate")
            _AdmissionDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("AdmissionDate")
            OnAdmissionDateChanged()
        End Set
    End Property

    Private _AdmissionDate As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnAdmissionDateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnAdmissionDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property DischargeDate() As Nullable(Of Global.System.DateTime)
        Get
            Return _DischargeDate
        End Get
        Set
            OnDischargeDateChanging(value)
            ReportPropertyChanging("DischargeDate")
            _DischargeDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DischargeDate")
            OnDischargeDateChanged()
        End Set
    End Property

    Private _DischargeDate As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnDischargeDateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnDischargeDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property CardNo() As Global.System.String
        Get
            Return _CardNo
        End Get
        Set
            OnCardNoChanging(value)
            ReportPropertyChanging("CardNo")
            _CardNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("CardNo")
            OnCardNoChanged()
        End Set
    End Property

    Private _CardNo As Global.System.String
    Private Partial Sub OnCardNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnCardNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property BedNo() As Global.System.String
        Get
            Return _BedNo
        End Get
        Set
            OnBedNoChanging(value)
            ReportPropertyChanging("BedNo")
            _BedNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("BedNo")
            OnBedNoChanged()
        End Set
    End Property

    Private _BedNo As Global.System.String
    Private Partial Sub OnBedNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBedNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property RoomNo() As Global.System.String
        Get
            Return _RoomNo
        End Get
        Set
            OnRoomNoChanging(value)
            ReportPropertyChanging("RoomNo")
            _RoomNo = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("RoomNo")
            OnRoomNoChanged()
        End Set
    End Property

    Private _RoomNo As Global.System.String
    Private Partial Sub OnRoomNoChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnRoomNoChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Stock_Code() As Global.System.String
        Get
            Return _Stock_Code
        End Get
        Set
            OnStock_CodeChanging(value)
            ReportPropertyChanging("Stock_Code")
            _Stock_Code = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Stock_Code")
            OnStock_CodeChanged()
        End Set
    End Property

    Private _Stock_Code As Global.System.String
    Private Partial Sub OnStock_CodeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStock_CodeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Stock_Name() As Global.System.String
        Get
            Return _Stock_Name
        End Get
        Set
            OnStock_NameChanging(value)
            ReportPropertyChanging("Stock_Name")
            _Stock_Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Stock_Name")
            OnStock_NameChanged()
        End Set
    End Property

    Private _Stock_Name As Global.System.String
    Private Partial Sub OnStock_NameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnStock_NameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Unit() As Global.System.String
        Get
            Return _Unit
        End Get
        Set
            OnUnitChanging(value)
            ReportPropertyChanging("Unit")
            _Unit = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Unit")
            OnUnitChanged()
        End Set
    End Property

    Private _Unit As Global.System.String
    Private Partial Sub OnUnitChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnUnitChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Batch() As Global.System.String
        Get
            Return _Batch
        End Get
        Set
            OnBatchChanging(value)
            ReportPropertyChanging("Batch")
            _Batch = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Batch")
            OnBatchChanged()
        End Set
    End Property

    Private _Batch As Global.System.String
    Private Partial Sub OnBatchChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBatchChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Expiry_Date() As Nullable(Of Global.System.DateTime)
        Get
            Return _Expiry_Date
        End Get
        Set
            OnExpiry_DateChanging(value)
            ReportPropertyChanging("Expiry_Date")
            _Expiry_Date = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Expiry_Date")
            OnExpiry_DateChanged()
        End Set
    End Property

    Private _Expiry_Date As Nullable(Of Global.System.DateTime)
    Private Partial Sub OnExpiry_DateChanging(value As Nullable(Of Global.System.DateTime))
    End Sub

    Private Partial Sub OnExpiry_DateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Quantity() As Global.System.Decimal
        Get
            Return _Quantity
        End Get
        Set
            OnQuantityChanging(value)
            ReportPropertyChanging("Quantity")
            _Quantity = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Quantity")
            OnQuantityChanged()
        End Set
    End Property

    Private _Quantity As Global.System.Decimal
    Private Partial Sub OnQuantityChanging(value As Global.System.Decimal)
    End Sub

    Private Partial Sub OnQuantityChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TCost() As Nullable(Of Global.System.Decimal)
        Get
            Return _TCost
        End Get
        Set
            OnTCostChanging(value)
            ReportPropertyChanging("TCost")
            _TCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TCost")
            OnTCostChanged()
        End Set
    End Property

    Private _TCost As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnTCostChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnTCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Department_Name() As Global.System.String
        Get
            Return _Department_Name
        End Get
        Set
            OnDepartment_NameChanging(value)
            ReportPropertyChanging("Department_Name")
            _Department_Name = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Department_Name")
            OnDepartment_NameChanged()
        End Set
    End Property

    Private _Department_Name As Global.System.String
    Private Partial Sub OnDepartment_NameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartment_NameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property FacilityID() As Global.System.String
        Get
            Return _FacilityID
        End Get
        Set
            OnFacilityIDChanging(value)
            ReportPropertyChanging("FacilityID")
            _FacilityID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("FacilityID")
            OnFacilityIDChanged()
        End Set
    End Property

    Private _FacilityID As Global.System.String
    Private Partial Sub OnFacilityIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFacilityIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property DepartmentID() As Global.System.String
        Get
            Return _DepartmentID
        End Get
        Set
            OnDepartmentIDChanging(value)
            ReportPropertyChanging("DepartmentID")
            _DepartmentID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("DepartmentID")
            OnDepartmentIDChanged()
        End Set
    End Property

    Private _DepartmentID As Global.System.String
    Private Partial Sub OnDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property FacilityName() As Global.System.String
        Get
            Return _FacilityName
        End Get
        Set
            OnFacilityNameChanging(value)
            ReportPropertyChanging("FacilityName")
            _FacilityName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("FacilityName")
            OnFacilityNameChanged()
        End Set
    End Property

    Private _FacilityName As Global.System.String
    Private Partial Sub OnFacilityNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFacilityNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property VillageID() As Nullable(Of Global.System.Decimal)
        Get
            Return _VillageID
        End Get
        Set
            OnVillageIDChanging(value)
            ReportPropertyChanging("VillageID")
            _VillageID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("VillageID")
            OnVillageIDChanged()
        End Set
    End Property

    Private _VillageID As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnVillageIDChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnVillageIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property VillageName() As Global.System.String
        Get
            Return _VillageName
        End Get
        Set
            OnVillageNameChanging(value)
            ReportPropertyChanging("VillageName")
            _VillageName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("VillageName")
            OnVillageNameChanged()
        End Set
    End Property

    Private _VillageName As Global.System.String
    Private Partial Sub OnVillageNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnVillageNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property SubZoneID() As Nullable(Of Global.System.Int32)
        Get
            Return _SubZoneID
        End Get
        Set
            OnSubZoneIDChanging(value)
            ReportPropertyChanging("SubZoneID")
            _SubZoneID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SubZoneID")
            OnSubZoneIDChanged()
        End Set
    End Property

    Private _SubZoneID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnSubZoneIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnSubZoneIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property SubZoneName() As Global.System.String
        Get
            Return _SubZoneName
        End Get
        Set
            OnSubZoneNameChanging(value)
            ReportPropertyChanging("SubZoneName")
            _SubZoneName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("SubZoneName")
            OnSubZoneNameChanged()
        End Set
    End Property

    Private _SubZoneName As Global.System.String
    Private Partial Sub OnSubZoneNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnSubZoneNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ZoneID() As Nullable(Of Global.System.Int32)
        Get
            Return _ZoneID
        End Get
        Set
            OnZoneIDChanging(value)
            ReportPropertyChanging("ZoneID")
            _ZoneID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ZoneID")
            OnZoneIDChanged()
        End Set
    End Property

    Private _ZoneID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnZoneIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnZoneIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ZoneName() As Global.System.String
        Get
            Return _ZoneName
        End Get
        Set
            OnZoneNameChanging(value)
            ReportPropertyChanging("ZoneName")
            _ZoneName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("ZoneName")
            OnZoneNameChanged()
        End Set
    End Property

    Private _ZoneName As Global.System.String
    Private Partial Sub OnZoneNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnZoneNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InvCategoryID() As Global.System.Int32
        Get
            Return _InvCategoryID
        End Get
        Set
            OnInvCategoryIDChanging(value)
            ReportPropertyChanging("InvCategoryID")
            _InvCategoryID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InvCategoryID")
            OnInvCategoryIDChanged()
        End Set
    End Property

    Private _InvCategoryID As Global.System.Int32
    Private Partial Sub OnInvCategoryIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnInvCategoryIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InvCategoryName() As Global.System.String
        Get
            Return _InvCategoryName
        End Get
        Set
            OnInvCategoryNameChanging(value)
            ReportPropertyChanging("InvCategoryName")
            _InvCategoryName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("InvCategoryName")
            OnInvCategoryNameChanged()
        End Set
    End Property

    Private _InvCategoryName As Global.System.String
    Private Partial Sub OnInvCategoryNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInvCategoryNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ClassificationID() As Global.System.Int32
        Get
            Return _ClassificationID
        End Get
        Set
            OnClassificationIDChanging(value)
            ReportPropertyChanging("ClassificationID")
            _ClassificationID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ClassificationID")
            OnClassificationIDChanged()
        End Set
    End Property

    Private _ClassificationID As Global.System.Int32
    Private Partial Sub OnClassificationIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnClassificationIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ClassificationName() As Global.System.String
        Get
            Return _ClassificationName
        End Get
        Set
            OnClassificationNameChanging(value)
            ReportPropertyChanging("ClassificationName")
            _ClassificationName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("ClassificationName")
            OnClassificationNameChanged()
        End Set
    End Property

    Private _ClassificationName As Global.System.String
    Private Partial Sub OnClassificationNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnClassificationNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SubClassificationID() As Global.System.Int32
        Get
            Return _SubClassificationID
        End Get
        Set
            OnSubClassificationIDChanging(value)
            ReportPropertyChanging("SubClassificationID")
            _SubClassificationID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SubClassificationID")
            OnSubClassificationIDChanged()
        End Set
    End Property

    Private _SubClassificationID As Global.System.Int32
    Private Partial Sub OnSubClassificationIDChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnSubClassificationIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property SubClassificationName() As Global.System.String
        Get
            Return _SubClassificationName
        End Get
        Set
            OnSubClassificationNameChanging(value)
            ReportPropertyChanging("SubClassificationName")
            _SubClassificationName = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("SubClassificationName")
            OnSubClassificationNameChanged()
        End Set
    End Property

    Private _SubClassificationName As Global.System.String
    Private Partial Sub OnSubClassificationNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnSubClassificationNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property FacilityTypeID() As Nullable(Of Global.System.Int32)
        Get
            Return _FacilityTypeID
        End Get
        Set
            OnFacilityTypeIDChanging(value)
            ReportPropertyChanging("FacilityTypeID")
            _FacilityTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("FacilityTypeID")
            OnFacilityTypeIDChanged()
        End Set
    End Property

    Private _FacilityTypeID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnFacilityTypeIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnFacilityTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property FacilityTypeName() As Global.System.String
        Get
            Return _FacilityTypeName
        End Get
        Set
            OnFacilityTypeNameChanging(value)
            ReportPropertyChanging("FacilityTypeName")
            _FacilityTypeName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("FacilityTypeName")
            OnFacilityTypeNameChanged()
        End Set
    End Property

    Private _FacilityTypeName As Global.System.String
    Private Partial Sub OnFacilityTypeNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnFacilityTypeNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property DepartmentTypeID() As Nullable(Of Global.System.Int32)
        Get
            Return _DepartmentTypeID
        End Get
        Set
            OnDepartmentTypeIDChanging(value)
            ReportPropertyChanging("DepartmentTypeID")
            _DepartmentTypeID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("DepartmentTypeID")
            OnDepartmentTypeIDChanged()
        End Set
    End Property

    Private _DepartmentTypeID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnDepartmentTypeIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnDepartmentTypeIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property DepartmentTypeType() As Global.System.String
        Get
            Return _DepartmentTypeType
        End Get
        Set
            OnDepartmentTypeTypeChanging(value)
            ReportPropertyChanging("DepartmentTypeType")
            _DepartmentTypeType = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("DepartmentTypeType")
            OnDepartmentTypeTypeChanged()
        End Set
    End Property

    Private _DepartmentTypeType As Global.System.String
    Private Partial Sub OnDepartmentTypeTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentTypeTypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property DepartmentTypeDescription() As Global.System.String
        Get
            Return _DepartmentTypeDescription
        End Get
        Set
            OnDepartmentTypeDescriptionChanging(value)
            ReportPropertyChanging("DepartmentTypeDescription")
            _DepartmentTypeDescription = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("DepartmentTypeDescription")
            OnDepartmentTypeDescriptionChanged()
        End Set
    End Property

    Private _DepartmentTypeDescription As Global.System.String
    Private Partial Sub OnDepartmentTypeDescriptionChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnDepartmentTypeDescriptionChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AdjType() As Global.System.String
        Get
            Return _AdjType
        End Get
        Set
            OnAdjTypeChanging(value)
            ReportPropertyChanging("AdjType")
            _AdjType = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("AdjType")
            OnAdjTypeChanged()
        End Set
    End Property

    Private _AdjType As Global.System.String
    Private Partial Sub OnAdjTypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnAdjTypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AdjDescription() As Global.System.String
        Get
            Return _AdjDescription
        End Get
        Set
            OnAdjDescriptionChanging(value)
            ReportPropertyChanging("AdjDescription")
            _AdjDescription = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("AdjDescription")
            OnAdjDescriptionChanged()
        End Set
    End Property

    Private _AdjDescription As Global.System.String
    Private Partial Sub OnAdjDescriptionChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnAdjDescriptionChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property CompanyName() As Global.System.String
        Get
            Return _CompanyName
        End Get
        Set
            OnCompanyNameChanging(value)
            ReportPropertyChanging("CompanyName")
            _CompanyName = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("CompanyName")
            OnCompanyNameChanged()
        End Set
    End Property

    Private _CompanyName As Global.System.String
    Private Partial Sub OnCompanyNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnCompanyNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property UCost() As Nullable(Of Global.System.Decimal)
        Get
            Return _UCost
        End Get
        Set
            OnUCostChanging(value)
            ReportPropertyChanging("UCost")
            _UCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("UCost")
            OnUCostChanged()
        End Set
    End Property

    Private _UCost As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnUCostChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnUCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Payment_Type() As Global.System.String
        Get
            Return _Payment_Type
        End Get
        Set
            OnPayment_TypeChanging(value)
            ReportPropertyChanging("Payment_Type")
            _Payment_Type = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Payment_Type")
            OnPayment_TypeChanged()
        End Set
    End Property

    Private _Payment_Type As Global.System.String
    Private Partial Sub OnPayment_TypeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnPayment_TypeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Sick_Payee_Company() As Global.System.String
        Get
            Return _Sick_Payee_Company
        End Get
        Set
            OnSick_Payee_CompanyChanging(value)
            ReportPropertyChanging("Sick_Payee_Company")
            _Sick_Payee_Company = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Sick_Payee_Company")
            OnSick_Payee_CompanyChanged()
        End Set
    End Property

    Private _Sick_Payee_Company As Global.System.String
    Private Partial Sub OnSick_Payee_CompanyChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnSick_Payee_CompanyChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property PaymentCompanyID() As Nullable(Of Global.System.Int32)
        Get
            Return _PaymentCompanyID
        End Get
        Set
            OnPaymentCompanyIDChanging(value)
            ReportPropertyChanging("PaymentCompanyID")
            _PaymentCompanyID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentCompanyID")
            OnPaymentCompanyIDChanged()
        End Set
    End Property

    Private _PaymentCompanyID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnPaymentCompanyIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnPaymentCompanyIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property PaymentZoneID() As Nullable(Of Global.System.Int32)
        Get
            Return _PaymentZoneID
        End Get
        Set
            OnPaymentZoneIDChanging(value)
            ReportPropertyChanging("PaymentZoneID")
            _PaymentZoneID = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PaymentZoneID")
            OnPaymentZoneIDChanged()
        End Set
    End Property

    Private _PaymentZoneID As Nullable(Of Global.System.Int32)
    Private Partial Sub OnPaymentZoneIDChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnPaymentZoneIDChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Supply_Period() As Global.System.String
        Get
            Return _Supply_Period
        End Get
        Set
            OnSupply_PeriodChanging(value)
            ReportPropertyChanging("Supply_Period")
            _Supply_Period = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Supply_Period")
            OnSupply_PeriodChanged()
        End Set
    End Property

    Private _Supply_Period As Global.System.String
    Private Partial Sub OnSupply_PeriodChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnSupply_PeriodChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property SupplyMonthFrom() As Nullable(Of Global.System.Int32)
        Get
            Return _SupplyMonthFrom
        End Get
        Set
            OnSupplyMonthFromChanging(value)
            ReportPropertyChanging("SupplyMonthFrom")
            _SupplyMonthFrom = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplyMonthFrom")
            OnSupplyMonthFromChanged()
        End Set
    End Property

    Private _SupplyMonthFrom As Nullable(Of Global.System.Int32)
    Private Partial Sub OnSupplyMonthFromChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnSupplyMonthFromChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property SupplyDateFrom() As Nullable(Of Global.System.Int32)
        Get
            Return _SupplyDateFrom
        End Get
        Set
            OnSupplyDateFromChanging(value)
            ReportPropertyChanging("SupplyDateFrom")
            _SupplyDateFrom = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplyDateFrom")
            OnSupplyDateFromChanged()
        End Set
    End Property

    Private _SupplyDateFrom As Nullable(Of Global.System.Int32)
    Private Partial Sub OnSupplyDateFromChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnSupplyDateFromChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property SupplyMonthTo() As Nullable(Of Global.System.Int32)
        Get
            Return _SupplyMonthTo
        End Get
        Set
            OnSupplyMonthToChanging(value)
            ReportPropertyChanging("SupplyMonthTo")
            _SupplyMonthTo = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplyMonthTo")
            OnSupplyMonthToChanged()
        End Set
    End Property

    Private _SupplyMonthTo As Nullable(Of Global.System.Int32)
    Private Partial Sub OnSupplyMonthToChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnSupplyMonthToChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property SupplyDateTo() As Nullable(Of Global.System.Int32)
        Get
            Return _SupplyDateTo
        End Get
        Set
            OnSupplyDateToChanging(value)
            ReportPropertyChanging("SupplyDateTo")
            _SupplyDateTo = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("SupplyDateTo")
            OnSupplyDateToChanged()
        End Set
    End Property

    Private _SupplyDateTo As Nullable(Of Global.System.Int32)
    Private Partial Sub OnSupplyDateToChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnSupplyDateToChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ForDepartmentID() As Global.System.String
        Get
            Return _ForDepartmentID
        End Get
        Set
            OnForDepartmentIDChanging(value)
            ReportPropertyChanging("ForDepartmentID")
            _ForDepartmentID = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("ForDepartmentID")
            OnForDepartmentIDChanged()
        End Set
    End Property

    Private _ForDepartmentID As Global.System.String
    Private Partial Sub OnForDepartmentIDChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnForDepartmentIDChanged()
    End Sub

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmComplexTypeAttribute(NamespaceName:="LMISModel", Name:="SP_ItemBatchExpiry1_Result")>
<DataContractAttribute(IsReference:=True)>
<Serializable()>
Public Partial Class SP_ItemBatchExpiry1_Result
    Inherits ComplexObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new SP_ItemBatchExpiry1_Result object.
    ''' </summary>
    ''' <param name="item_Code">Initial value of the Item_Code property.</param>
    ''' <param name="item_Name">Initial value of the Item_Name property.</param>
    ''' <param name="batch_Number">Initial value of the Batch_Number property.</param>
    ''' <param name="expireDate">Initial value of the ExpireDate property.</param>
    ''' <param name="unit">Initial value of the Unit property.</param>
    Public Shared Function CreateSP_ItemBatchExpiry1_Result(item_Code As Global.System.String, item_Name As Global.System.String, batch_Number As Global.System.String, expireDate As Global.System.DateTime, unit As Global.System.String) As SP_ItemBatchExpiry1_Result
        Dim sP_ItemBatchExpiry1_Result as SP_ItemBatchExpiry1_Result = New SP_ItemBatchExpiry1_Result
        sP_ItemBatchExpiry1_Result.Item_Code = item_Code
        sP_ItemBatchExpiry1_Result.Item_Name = item_Name
        sP_ItemBatchExpiry1_Result.Batch_Number = batch_Number
        sP_ItemBatchExpiry1_Result.ExpireDate = expireDate
        sP_ItemBatchExpiry1_Result.Unit = unit
        Return sP_ItemBatchExpiry1_Result
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_Code() As Global.System.String
        Get
            Return _Item_Code
        End Get
        Set
            OnItem_CodeChanging(value)
            ReportPropertyChanging("Item_Code")
            _Item_Code = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Item_Code")
            OnItem_CodeChanged()
        End Set
    End Property

    Private _Item_Code As Global.System.String
    Private Partial Sub OnItem_CodeChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_CodeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Item_Name() As Global.System.String
        Get
            Return _Item_Name
        End Get
        Set
            OnItem_NameChanging(value)
            ReportPropertyChanging("Item_Name")
            _Item_Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Item_Name")
            OnItem_NameChanged()
        End Set
    End Property

    Private _Item_Name As Global.System.String
    Private Partial Sub OnItem_NameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnItem_NameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Batch_Number() As Global.System.String
        Get
            Return _Batch_Number
        End Get
        Set
            OnBatch_NumberChanging(value)
            ReportPropertyChanging("Batch_Number")
            _Batch_Number = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Batch_Number")
            OnBatch_NumberChanged()
        End Set
    End Property

    Private _Batch_Number As Global.System.String
    Private Partial Sub OnBatch_NumberChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnBatch_NumberChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Quantity_Available() As Nullable(Of Global.System.Decimal)
        Get
            Return _Quantity_Available
        End Get
        Set
            OnQuantity_AvailableChanging(value)
            ReportPropertyChanging("Quantity_Available")
            _Quantity_Available = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Quantity_Available")
            OnQuantity_AvailableChanged()
        End Set
    End Property

    Private _Quantity_Available As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnQuantity_AvailableChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnQuantity_AvailableChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ExpireDate() As Global.System.DateTime
        Get
            Return _ExpireDate
        End Get
        Set
            OnExpireDateChanging(value)
            ReportPropertyChanging("ExpireDate")
            _ExpireDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ExpireDate")
            OnExpireDateChanged()
        End Set
    End Property

    Private _ExpireDate As Global.System.DateTime
    Private Partial Sub OnExpireDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnExpireDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TCost() As Nullable(Of Global.System.Decimal)
        Get
            Return _TCost
        End Get
        Set
            OnTCostChanging(value)
            ReportPropertyChanging("TCost")
            _TCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TCost")
            OnTCostChanged()
        End Set
    End Property

    Private _TCost As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnTCostChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnTCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property UCost() As Nullable(Of Global.System.Decimal)
        Get
            Return _UCost
        End Get
        Set
            OnUCostChanging(value)
            ReportPropertyChanging("UCost")
            _UCost = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("UCost")
            OnUCostChanged()
        End Set
    End Property

    Private _UCost As Nullable(Of Global.System.Decimal)
    Private Partial Sub OnUCostChanging(value As Nullable(Of Global.System.Decimal))
    End Sub

    Private Partial Sub OnUCostChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Unit() As Global.System.String
        Get
            Return _Unit
        End Get
        Set
            OnUnitChanging(value)
            ReportPropertyChanging("Unit")
            _Unit = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Unit")
            OnUnitChanged()
        End Set
    End Property

    Private _Unit As Global.System.String
    Private Partial Sub OnUnitChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnUnitChanged()
    End Sub

    #End Region

End Class

#End Region


